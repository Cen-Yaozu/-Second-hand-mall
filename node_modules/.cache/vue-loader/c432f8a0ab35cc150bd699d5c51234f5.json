{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue","mtime":1741743644072},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n    export default {\n        name: \"IdleGoods\",\n        data() {\n            return {\n                mode: 1,\n                nowPage: 1,\n                total: 0,\n                onlineGoods: [],\n                OfflineGoods: [],\n                findValue: '',\n\t\t\t\t\t\t\t\tstatus: \"1\"\n            }\n        },\n        created() {\n            this.getOnlineGoods();\n        },\n        methods: {\n            handleOfflineGoods(index) {\n                this.$confirm('是否确定下架此闲置商品?', '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    // 用户点击确定后的逻辑，例如调用后端接口下架商品\n                    this.makeOfflineGoods(index);\n                }).catch(() => {\n                    // 用户点击取消后的逻辑，这里可以省略或添加相应处理\n                    console.log('下架操作已取消');\n                });\n            },\n            searchIdle(){\n                this.$api.queryIdle({\n                    findValue: this.findValue,\n                    page: this.nowPage,\n                    nums: 8,\n\t\t\t\t\t\t\t\t\t\tstatus: parseInt(this.status)\n                }).then(res => {\n                    console.log(res);\n                    if (res.status_code == 1 && res.data.list != null) {\n                            if(res.data.list[0].idleStatus == 1){\n                                this.onlineGoods = res.data.list;\n                                this.total = res.data.count;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else {\n                                this.OfflineGoods = res.data.list;\n                                this.total = res.data.count;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                    } else{\n                        this.$message.error(res.msg)\n\t\t\t\t\t\t\t\t\t\t}\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            handleCurrentChange(val) {\n                this.nowPage = val;\n                if (this.mode == 1) {\n                    this.getOnlineGoods();\n                }\n                if (this.mode == 2) {\n                    this.getOfflineGoods();\n                }\n            },\n            handleSelect(tab) {\n                const val = parseInt(tab.name);\n                if (this.mode !== val) {\n                    this.mode = val;\n                    if (val == 1) {\n                        this.nowPage = 1;\n                        this.getOnlineGoods();\n                    }\n                    if (val == 2) {\n                        this.nowPage = 1;\n                        this.getOfflineGoods();\n                    }\n                }\n            },\n            makeOfflineGoods(i) {\n                this.$api.updateGoods({\n                    id: this.onlineGoods[i].id,\n                    status: 2\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.$message.success('下架成功');\n                        this.getOnlineGoods();\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            deleteGoods(i) {\n                this.$api.updateGoods({\n                    id: this.OfflineGoods[i].id,\n                    status: 0\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.getOfflineGoods();\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getOnlineGoods() {\n                this.$api.getGoods({\n                    status: 1,\n                    page: this.nowPage,\n                    nums: 8\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.onlineGoods = res.data.list;\n                        this.total = res.data.count;\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getOfflineGoods() {\n                this.$api.getGoods({\n                    status: 2,\n                    page: this.nowPage,\n                    nums: 8\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.OfflineGoods = res.data.list;\n                        this.total = res.data.count;\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            }\n        }\n    }\n",null]}