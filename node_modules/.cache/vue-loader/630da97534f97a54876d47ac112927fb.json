{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/exchange/received-requests.vue?vue&type=style&index=0&id=02ae74e4&scoped=true&lang=css","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/exchange/received-requests.vue","mtime":1741936896943},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/css-loader/index.js","mtime":1741743640772},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1741743643789},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/postcss-loader/src/index.js","mtime":1741743642507},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n.received-requests-container {\n  padding: 20px;\n}\n.title {\n  font-size: 22px;\n  font-weight: bold;\n  color: #409EFF;\n}\n.item-info {\n  display: flex;\n  align-items: center;\n}\n.item-img {\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  margin-right: 10px;\n  border-radius: 4px;\n}\n.item-name {\n  font-size: 14px;\n  color: #303133;\n  margin-bottom: 5px;\n}\n.item-price {\n  font-size: 12px;\n  color: #F56C6C;\n}\n.user-info {\n  display: flex;\n  align-items: center;\n}\n.user-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n",{"version":3,"sources":["received-requests.vue"],"names":[],"mappings":";AAmOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"received-requests.vue","sourceRoot":"src/components/page/exchange","sourcesContent":["<template>\n  <div class=\"received-requests-container\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span class=\"title\">收到的交换请求</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goBack\">返回</el-button>\n      </div>\n      \n      <el-table\n        v-loading=\"loading\"\n        :data=\"requests\"\n        style=\"width: 100%\"\n        empty-text=\"暂无收到的交换请求\">\n        <el-table-column\n          label=\"请求用户\"\n          width=\"150\">\n          <template slot-scope=\"scope\">\n            <div class=\"user-info\">\n              <img :src=\"scope.row.requestUser.userAvatar || require('@/assets/img/avatar.png')\" class=\"user-avatar\">\n              <span>{{ scope.row.requestUser.nickname }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          label=\"我的物品\"\n          width=\"250\">\n          <template slot-scope=\"scope\">\n            <div class=\"item-info\">\n              <img :src=\"getFirstImage(scope.row.requestItem.pictureList)\" class=\"item-img\">\n              <div>\n                <div class=\"item-name\">{{ scope.row.requestItem.idleName }}</div>\n                <div class=\"item-price\">¥{{ scope.row.requestItem.idlePrice }}</div>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          label=\"对方物品\"\n          width=\"250\">\n          <template slot-scope=\"scope\">\n            <div class=\"item-info\">\n              <img :src=\"getFirstImage(scope.row.offerItem.pictureList)\" class=\"item-img\">\n              <div>\n                <div class=\"item-name\">{{ scope.row.offerItem.idleName }}</div>\n                <div class=\"item-price\">¥{{ scope.row.offerItem.idlePrice }}</div>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"statusDesc\"\n          label=\"状态\"\n          width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ scope.row.statusDesc }}</el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          prop=\"createTime\"\n          label=\"创建时间\"\n          width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDate(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column\n          label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              @click=\"viewDetail(scope.row)\">查看详情</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"success\"\n              v-if=\"scope.row.status === 0\"\n              @click=\"acceptRequest(scope.row)\">接受</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              v-if=\"scope.row.status === 0\"\n              @click=\"rejectRequest(scope.row)\">拒绝</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"warning\"\n              v-if=\"scope.row.status === 1\"\n              @click=\"completeExchange(scope.row)\">完成交换</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport api from '@/api/index';\n\nexport default {\n  name: 'received-requests',\n  data() {\n    return {\n      requests: [],\n      loading: false\n    }\n  },\n  mounted() {\n    this.loadRequests();\n  },\n  methods: {\n    loadRequests() {\n      this.loading = true;\n      api.getReceivedExchangeRequests().then(res => {\n        if (res.status_code === 1 && res.data) {\n          this.requests = res.data;\n        } else {\n          this.$message.error(res.msg || '获取交换请求失败');\n        }\n      }).catch(err => {\n        console.error('获取交换请求失败', err);\n        this.$message.error('获取交换请求失败');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getFirstImage(pictureList) {\n      if (!pictureList) return require('@/assets/img/default.png');\n      const images = pictureList.split(',');\n      return images[0] || require('@/assets/img/default.png');\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    },\n    getStatusType(status) {\n      switch (status) {\n        case 0: return 'info';    // 待审核\n        case 1: return 'success'; // 已接受\n        case 2: return 'danger';  // 已拒绝\n        case 3: return '';        // 已完成\n        default: return 'info';\n      }\n    },\n    viewDetail(row) {\n      this.$router.push({\n        path: '/exchange/detail',\n        query: { id: row.id }\n      });\n    },\n    acceptRequest(row) {\n      this.$confirm('确认接受此交换请求吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.loading = true;\n        api.acceptExchangeRequest(row.id).then(res => {\n          if (res.status_code === 1) {\n            this.$message.success('已接受交换请求');\n            this.loadRequests();\n          } else {\n            this.$message.error(res.msg || '操作失败');\n          }\n        }).catch(err => {\n          console.error('操作失败', err);\n          this.$message.error('操作失败');\n        }).finally(() => {\n          this.loading = false;\n        });\n      }).catch(() => {});\n    },\n    rejectRequest(row) {\n      this.$confirm('确认拒绝此交换请求吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.loading = true;\n        api.rejectExchangeRequest(row.id).then(res => {\n          if (res.status_code === 1) {\n            this.$message.success('已拒绝交换请求');\n            this.loadRequests();\n          } else {\n            this.$message.error(res.msg || '操作失败');\n          }\n        }).catch(err => {\n          console.error('操作失败', err);\n          this.$message.error('操作失败');\n        }).finally(() => {\n          this.loading = false;\n        });\n      }).catch(() => {});\n    },\n    completeExchange(row) {\n      this.$confirm('确认已完成物品交换吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.loading = true;\n        api.completeExchange(row.id).then(res => {\n          if (res.status_code === 1) {\n            this.$message.success('交换已完成');\n            this.loadRequests();\n          } else {\n            this.$message.error(res.msg || '操作失败');\n          }\n        }).catch(err => {\n          console.error('操作失败', err);\n          this.$message.error('操作失败');\n        }).finally(() => {\n          this.loading = false;\n        });\n      }).catch(() => {});\n    },\n    goBack() {\n      this.$router.push('/exchange');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.received-requests-container {\n  padding: 20px;\n}\n.title {\n  font-size: 22px;\n  font-weight: bold;\n  color: #409EFF;\n}\n.item-info {\n  display: flex;\n  align-items: center;\n}\n.item-img {\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  margin-right: 10px;\n  border-radius: 4px;\n}\n.item-name {\n  font-size: 14px;\n  color: #303133;\n  margin-bottom: 5px;\n}\n.item-price {\n  font-size: 12px;\n  color: #F56C6C;\n}\n.user-info {\n  display: flex;\n  align-items: center;\n}\n.user-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n</style> "]}]}