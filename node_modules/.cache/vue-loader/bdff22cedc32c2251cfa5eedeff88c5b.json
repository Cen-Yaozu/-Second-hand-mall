{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue","mtime":1741743644073},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n\n    export default {\n        name: \"idle-details\",\n        components: {\n            AppHead,\n            AppBody,\n            AppFoot\n        },\n        data() {\n            return {\n                buttonText:'编辑',\n                isEditing:false,\n                messageContent:'',\n                toUser:null,\n                toMessage:null,\n                isReply:false,\n                replyData:{\n                    toUserNickname:'',\n                    toMessage:''\n                },\n                messageList:[],\n                idleItemInfo:{\n                    id:'',\n                    idleName:'',\n                    idleDetails:'',\n                    pictureList:[],\n                    idlePrice:0,\n                    idlePlace:'',\n                    idleLabel:'',\n                    idleStatus:-1,\n                    userId:'',\n                    user:{\n                        avatar:'',\n                        nickname:'',\n                        signInTime:''\n                    },\n                },\n                editingIdleItem:null,\n                isMaster:false,\n                isFavorite:true,\n                favoriteId:0\n            };\n        },\n        computed: {\n            fileList() {\n                return this.idleItemInfo.pictureList.map(img => ({ url: img }));\n            }\n        },\n        created(){\n            this.getMyIdleById();\n        },\n        methods: {\n            getMyIdleById(){\n                let id=this.$route.query.id;\n                this.$api.getIdleItem({\n                    id:id\n                }).then(res=>{\n                    console.log(res);\n                    if(res.data){\n                        let list=res.data.idleDetails.split(/\\r?\\n/);\n                        let str='';\n                        for(let i=0;i<list.length;i++){\n                            str+=list[i];\n                        }\n                        res.data.idleDetails=str;\n                        res.data.pictureList=JSON.parse(res.data.pictureList);\n                        this.idleItemInfo=res.data;\n                        console.log(this.idleItemInfo);\n                        let userId=this.getCookie('shUserId');\n                        console.log('userid',userId)\n                        if(userId == this.idleItemInfo.userId){\n                            console.log('isMaster');\n                            this.isMaster=true;\n                        }\n                        this.checkFavorite();\n                        this.checkMyIdle();\n                        this.getAllIdleMessage();\n                    }\n                    $('html,body').animate({\n                        scrollTop: 0\n                    }, {duration: 500, easing: \"swing\"});\n                });\n            },\n            saveChanges(idleItemInfo) {\n                const updatedInfo = {\n                    ...idleItemInfo,\n                    pictureList: JSON.stringify(this.idleItemInfo.pictureList),\n                };\n                // 这里添加调用API更新商品信息的逻辑\n                this.$api.updateIdleItem(updatedInfo).then(() => {\n                    // this.getMyIdleById();\n                    this.$message.success('商品信息更新成功');\n                    this.isEditing = false; // 保存后关闭编辑模式\n                    this.buttonText = '编辑商品'\n                }).catch(() => {\n                    this.$message.error('更新失败，请重试');\n                });\n            },\n            imgChange(file, fileList){\n                this.noneBtnImg = fileList.length >= this.limitCountImg;\n            },\n            fileHandleRemove(file,fileList) {\n                console.log(file, fileList);\n                // 假设fileList是由el-upload维护的，这里需要间接操作，找到file在fileList中的URL\n                const urlToRemove = file.url; // 假设file.response.data是图片URL\n                // 假设fileList与idleItemInfo.pictureList同步，直接根据URL移除\n                const index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n                console.log(this)\n\n                if (index > -1) {\n                    // 找到了匹配的URL，从idleItemInfo.pictureList中移除\n                    this.idleItemInfo.pictureList.splice(index, 1);\n                    this.$forceUpdate();\n                } else {\n                    console.warn('URL not found in the list to remove.');\n                }\n            },\n            fileHandlePreview(file) {\n                console.log(file);\n                this.dialogImageUrl=file.response.data;\n                this.imgDialogVisible=true;\n            },\n            fileHandleSuccess(response, file, fileList){\n                console.log(\"file:\",response,file,fileList);\n                this.idleItemInfo.pictureList.push(response.data);\n            },\n            editButton(){\n                this.isEditing = !this.isEditing;\n                this.buttonText = '保存修改'\n            },\n            getAllIdleMessage(){\n                this.$api.getAllIdleMessage({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    console.log('getAllIdleMessage',res.data);\n                    if(res.status_code===1){\n                        this.messageList=res.data;\n                    }\n                }).catch(()=>{\n                })\n            },\n            checkFavorite(){\n                this.$api.checkFavorite({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if(!res.data){\n                        this.isFavorite=false;\n                    }else {\n                        this.favoriteId=res.data;\n                    }\n                })\n            },\n            checkMyIdle(){\n                this.$api.checkMyIdle({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if (res.data){\n                        this.isMaster = true;\n                    }else {\n                        this.isMaster = false;\n                    }\n                })\n            },\n            getCookie(cname){\n                var name = cname + \"=\";\n                var ca = document.cookie.split(';');\n                for(var i=0; i<ca.length; i++)\n                {\n                    var c = ca[i].trim();\n                    if (c.indexOf(name)===0) return c.substring(name.length,c.length);\n                }\n                return \"\";\n            },\n            replyMessage(index){\n                $('html,body').animate({\n                    scrollTop: $(\"#replyMessageLocation\").offset().top-600\n                }, {duration: 500, easing: \"swing\"});\n                this.isReply=true;\n                this.replyData.toUserNickname=this.messageList[index].fromU.nickname;\n                this.replyData.toMessage=this.messageList[index].content.substring(0,10)+(this.messageList[index].content.length>10?'...':'');\n                this.toUser=this.messageList[index].userId;\n                this.toMessage=this.messageList[index].id;\n            },\n            changeStatus(idle,status){\n                this.$api.updateIdleItem({\n                    id:idle.id,\n                    idleStatus:status\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.idleItemInfo.idleStatus=status;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                });\n            },\n            buyButton(idleItemInfo){\n                this.$api.addOrder({\n                    idleId:idleItemInfo.id,\n                    orderPrice:idleItemInfo.idlePrice,\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.$router.push({path: '/order', query: {id: res.data.id}});\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e=>{\n\n                })\n            },\n            favoriteButton(idleItemInfo){\n                if(this.isFavorite){\n                    this.$api.deleteFavorite({\n                        id: this.favoriteId\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已取消收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=false;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }else {\n                    this.$api.addFavorite({\n                        idleId:idleItemInfo.id\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已加入收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=true;\n                            this.favoriteId=res.data;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }\n            },\n            cancelReply(){\n                this.isReply=false;\n                this.toUser=this.idleItemInfo.userId;\n                this.toMessage=null;\n                this.replyData.toUserNickname='';\n                this.replyData.toMessage='';\n            },\n\n            sendMessage(){\n                let content=this.messageContent.trim();\n                if(this.toUser==null){\n                    this.toUser=this.idleItemInfo.userId;\n                }\n                if(content){\n                    let contentList=content.split(/\\r?\\n/);\n                    let contenHtml=contentList[0];\n                    for(let i=1;i<contentList.length;i++){\n                        contenHtml+='<br>'+contentList[i];\n                    }\n                    this.$api.sendMessage({\n                        idleId:this.idleItemInfo.id,\n                        content:contenHtml,\n                        toUser:this.toUser,\n                        toMessage:this.toMessage\n                    }).then(res=>{\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '留言成功！',\n                                type: 'success'\n                            });\n                            this.messageContent='';\n                            this.cancelReply();\n                            this.getAllIdleMessage();\n                        }else {\n                            this.$message.error(\"留言失败！\"+res.msg);\n                        }\n                    }).catch(()=>{\n                        this.$message.error(\"留言失败！\");\n                    });\n\n                }else{\n                    this.$message.error(\"留言为空！\");\n                }\n            }\n        },\n    }\n",null]}