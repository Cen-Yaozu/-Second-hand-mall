{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/AppHeader.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/AppHeader.vue","mtime":1742203414708},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n\n    import Mixin from '@/utils/mixin';\n    export default {\n        mixins: [Mixin],\n        name: 'Header',\n        props: ['searchInput','nicknameValue','avatarValue'],\n        data() {\n            return {\n                logoPath: \"/logo.png\",\n                searchValue: this.searchInput,\n                nickname:'登录',\n                avatar:'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png',\n                isLogin:false,\n                unreadMessagesCount:0\n            };\n        },\n        created(){\n            // console.log(\"header\");\n            if(! this.$globalData.userInfo.nickname){\n                this.$api.getUserInfo().then(res=>{\n                    console.log('Header getUserInfo:',res);\n                    if(res.status_code===1){\n                        this.nickname=res.data.nickname;\n                        this.avatar=res.data.avatar;\n                        res.data.signInTime=res.data.signInTime.substring(0,10);\n                        this.$globalData.userInfo=res.data;\n                        this.isLogin=true;\n                        this.fetchUnreadMessageCount();\n                    }\n                })\n            }else {\n                this.nickname=this.$globalData.userInfo.nickname;\n                this.avatar=this.$globalData.userInfo.avatar;\n                this.isLogin=true;\n                this.fetchUnreadMessageCount();\n            }\n            \n            // 监听未读消息更新事件\n            this.$eventBus.$on('update-unread-messages', this.fetchUnreadMessageCount);\n        },\n        beforeDestroy(){\n            // 组件销毁前移除事件监听\n            this.$eventBus.$off('update-unread-messages', this.fetchUnreadMessageCount);\n        },\n        methods: {\n            fetchUnreadMessageCount() {\n                if (this.isLogin) {\n                    this.$api.getUnreadMessageCount().then(res => {\n                        if (res.status_code === 1) {\n                            this.unreadMessagesCount = res.data || 0;\n                        }\n                    }).catch(err => {\n                        console.error('获取未读消息数量失败:', err);\n                        // 如果API调用失败，使用默认值\n                        this.unreadMessagesCount = 0;\n                    });\n                }\n            },\n            searchIdle() {\n                if ('/search' !== this.$route.path) {\n                    this.$router.push({path: '/search', query: {searchValue: this.searchValue}});\n                } else {\n                    this.$router.replace({path: '/search', query: {searchValue: this.searchValue}});\n                    this.$router.go(0);\n                }\n\n            },\n            toMe() {\n                if ('/me' !== this.$route.path) {\n                    this.$router.push({path: '/me'});\n                }\n            },\n            toMessage(){\n                if ('/message' !== this.$route.path) {\n                    this.$router.push({path: '/message'});\n                }\n            },\n            toRelease(){\n                if ('/release' !== this.$route.path) {\n                    this.$router.push({path: '/release'});\n                }\n            },\n            toDonation(){\n                if ('/donation' !== this.$route.path) {\n                    this.$router.push({path: '/donation'});\n                }\n            },\n            /*这里的logout 只是用前端来删除掉浏览器中之前登录过的用户信息，并没有发送请求*/\n            loginOut(){\n                this.$api.logout().then(res=>{\n                    if(res.status_code===1){\n                        this.$globalData.userInfo={};\n                        console.log(\"login out\");\n                        if ('/index' === this.$route.path) {\n                            this.$router.go(0);\n                        }else {\n                            this.$router.push({path: '/index'});\n                        }\n                    }else {\n                        this.$message.error('网络或系统异常，退出登录失败！');\n                    }\n                });\n\n            }\n        }\n    };\n",{"version":3,"sources":["AppHeader.vue"],"names":[],"mappings":";;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"AppHeader.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n    <div class=\"header\">\n        <div class=\"header-container\">\n            <div class=\"app-name\">\n                <router-link to=\"/\">\n                    <img :src=\"logoPath\" class=\"logo-image\"/>\n                    <span class=\"logo-text\">淘易阁</span>\n                </router-link>\n            </div>\n            <div class=\"search-container\">\n                <el-input \n                    placeholder=\"搜闲置...\" \n                    v-model=\"searchValue\" \n                    @keyup.enter.native=\"searchIdle\"\n                    class=\"search-input\"\n                    prefix-icon=\"el-icon-search\">\n                    <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"searchIdle\"></el-button>\n                </el-input>\n            </div>\n            <div class=\"action-buttons\">\n                <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"toRelease\">发布闲置/公告</el-button>\n                <el-button type=\"success\" icon=\"el-icon-star-on\" @click=\"toDonation\">爱心捐赠</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-chat-dot-round\" @click=\"toMessage\">\n                    消息\n                    <el-badge v-if=\"unreadMessagesCount > 0\" :value=\"unreadMessagesCount\" class=\"message-badge\"></el-badge>\n                </el-button>\n                <router-link v-if=\"!isLogin\" class=\"user-name-text\" to=\"/login\">登录</router-link>\n                <el-dropdown trigger=\"click\" v-else>\n                    <div class=\"user-profile\">\n                        <div class=\"user-nickname\">{{nickname}}</div>\n                        <el-avatar :src=\"avatar\" :size=\"32\"></el-avatar>\n                    </div>\n                    <el-dropdown-menu slot=\"dropdown\">\n                        <el-dropdown-item><div @click=\"toMe\">个人中心</div></el-dropdown-item>\n                        <el-dropdown-item divided class=\"logout-item\"><div @click=\"loginOut\">退出登录</div></el-dropdown-item>\n                    </el-dropdown-menu>\n                </el-dropdown>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n\n    import Mixin from '@/utils/mixin';\n    export default {\n        mixins: [Mixin],\n        name: 'Header',\n        props: ['searchInput','nicknameValue','avatarValue'],\n        data() {\n            return {\n                logoPath: \"/logo.png\",\n                searchValue: this.searchInput,\n                nickname:'登录',\n                avatar:'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png',\n                isLogin:false,\n                unreadMessagesCount:0\n            };\n        },\n        created(){\n            // console.log(\"header\");\n            if(! this.$globalData.userInfo.nickname){\n                this.$api.getUserInfo().then(res=>{\n                    console.log('Header getUserInfo:',res);\n                    if(res.status_code===1){\n                        this.nickname=res.data.nickname;\n                        this.avatar=res.data.avatar;\n                        res.data.signInTime=res.data.signInTime.substring(0,10);\n                        this.$globalData.userInfo=res.data;\n                        this.isLogin=true;\n                        this.fetchUnreadMessageCount();\n                    }\n                })\n            }else {\n                this.nickname=this.$globalData.userInfo.nickname;\n                this.avatar=this.$globalData.userInfo.avatar;\n                this.isLogin=true;\n                this.fetchUnreadMessageCount();\n            }\n            \n            // 监听未读消息更新事件\n            this.$eventBus.$on('update-unread-messages', this.fetchUnreadMessageCount);\n        },\n        beforeDestroy(){\n            // 组件销毁前移除事件监听\n            this.$eventBus.$off('update-unread-messages', this.fetchUnreadMessageCount);\n        },\n        methods: {\n            fetchUnreadMessageCount() {\n                if (this.isLogin) {\n                    this.$api.getUnreadMessageCount().then(res => {\n                        if (res.status_code === 1) {\n                            this.unreadMessagesCount = res.data || 0;\n                        }\n                    }).catch(err => {\n                        console.error('获取未读消息数量失败:', err);\n                        // 如果API调用失败，使用默认值\n                        this.unreadMessagesCount = 0;\n                    });\n                }\n            },\n            searchIdle() {\n                if ('/search' !== this.$route.path) {\n                    this.$router.push({path: '/search', query: {searchValue: this.searchValue}});\n                } else {\n                    this.$router.replace({path: '/search', query: {searchValue: this.searchValue}});\n                    this.$router.go(0);\n                }\n\n            },\n            toMe() {\n                if ('/me' !== this.$route.path) {\n                    this.$router.push({path: '/me'});\n                }\n            },\n            toMessage(){\n                if ('/message' !== this.$route.path) {\n                    this.$router.push({path: '/message'});\n                }\n            },\n            toRelease(){\n                if ('/release' !== this.$route.path) {\n                    this.$router.push({path: '/release'});\n                }\n            },\n            toDonation(){\n                if ('/donation' !== this.$route.path) {\n                    this.$router.push({path: '/donation'});\n                }\n            },\n            /*这里的logout 只是用前端来删除掉浏览器中之前登录过的用户信息，并没有发送请求*/\n            loginOut(){\n                this.$api.logout().then(res=>{\n                    if(res.status_code===1){\n                        this.$globalData.userInfo={};\n                        console.log(\"login out\");\n                        if ('/index' === this.$route.path) {\n                            this.$router.go(0);\n                        }else {\n                            this.$router.push({path: '/index'});\n                        }\n                    }else {\n                        this.$message.error('网络或系统异常，退出登录失败！');\n                    }\n                });\n\n            }\n        }\n    };\n</script>\n<style scoped>\n    .header {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 60px;\n        background-color: var(--el-bg-color);\n        box-shadow: var(--el-box-shadow-light);\n        display: flex;\n        justify-content: center;\n        z-index: 1000;\n        margin: 0;\n        border-bottom: 1px solid var(--el-border-color-lighter);\n    }\n\n    .header-container {\n        width: 100%;\n        max-width: 1200px;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 0 var(--el-spacing-lg);\n        margin: 0;\n    }\n\n    .app-name a {\n        display: flex;\n        align-items: center;\n        color: var(--el-color-primary);\n        font-size: var(--el-font-size-large);\n        text-decoration: none;\n        font-weight: 600;\n    }\n\n    .logo-image {\n        width: 40px; \n        height: 40px; \n        display: inline-block; \n        vertical-align: middle;\n        margin-right: var(--el-spacing-md);\n    }\n\n    .logo-text {\n        font-size: var(--el-font-size-extra-large);\n    }\n\n    .search-container {\n        flex: 1;\n        max-width: 500px;\n        margin: 0 var(--el-spacing-xl);\n    }\n\n    .search-input >>> .el-input__inner {\n        border-radius: var(--el-border-radius-round);\n    }\n\n    .action-buttons {\n        display: flex;\n        align-items: center;\n        gap: var(--el-spacing-md);\n    }\n\n    .user-name-text {\n        font-size: var(--el-font-size-medium);\n        font-weight: 500;\n        color: var(--el-color-primary);\n        cursor: pointer;\n        text-decoration: none;\n        margin-left: var(--el-spacing-md);\n    }\n\n    .user-profile {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .user-nickname {\n        font-size: var(--el-font-size-base);\n        color: var(--el-color-primary);\n        margin-right: var(--el-spacing-sm);\n    }\n\n    .message-badge {\n        margin-top: -10px;\n    }\n\n    .logout-item {\n        color: var(--el-color-danger);\n    }\n</style>\n"]}]}