{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/orderList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/orderList.vue","mtime":1741743644072},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n    export default {\n        name: \"orderList\",\n        created() {\n            this.getOrder();\n        },\n        methods:{\n            confirmDelete(index){\n                this.targetIndex = index;\n                this.dialogDeleteVisible = true;\n            },\n            showOrderDetails(row) {\n                this.selectedRow = row;\n                this.dialogVisible = true;\n            },\n            getOrder(){\n                this.$api.getOrderList({\n                    page: this.nowPage,\n                    nums:8\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.Order = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            deleteOrder(index){\n                this.$api.deleteOrder({\n                    id:this.Order[index].id\n                }).then(res=>{\n                    if(res.status_code==1){\n                        this.getOrder();\n                        this.dialogDeleteVisible = false;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            handleCurrentChange(val) {\n                this.nowPage = val;\n                this.getOrder();\n            },\n            searchIdle(){\n                this.$api.queryOrder({\n                    page: this.nowPage,\n                    nums: 8,\n                    searchValue: this.searchValue\n                }).then(res => {\n                    console.log(res);\n                    if (res.status_code == 1) {\n                        this.Order = res.data.list;\n                        this.total = res.data.count;\n                    } else{\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            }\n        },\n        data(){\n            return {\n                mode:1,\n                dialogDeleteVisible: false,\n                targetIndex: null,\n                nowPage: 1,\n                total: 0,\n                paymentStatus:['未支付','已支付'],\n                orderStatus:['待付款','待发货','待收货','已完成','已取消'],\n                Order: [],\n                searchValue: '',\n                dialogVisible: false,\n                selectedRow: null,\n            }\n        },\n    }\n",null]}