{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue?vue&type=style&index=0&id=f64334a4&scoped=true&lang=css","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue","mtime":1741743644072},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/css-loader/index.js","mtime":1741743640772},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1741743643789},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/postcss-loader/src/index.js","mtime":1741743642507},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n.idle-goods-container {\n\tbackground-color: var(--el-bg-color);\n\tpadding: var(--el-spacing-lg);\n\tbox-shadow: var(--el-box-shadow-light);\n\tborder-radius: var(--el-border-radius-base);\n}\n\n.idle-header {\n\tmargin-bottom: var(--el-spacing-lg);\n}\n\n.search-box {\n\tmargin-top: var(--el-spacing-lg);\n\tmax-width: 400px;\n}\n\n.search-input >>> .el-input__inner {\n\tborder-radius: var(--el-border-radius-base);\n}\n\n.idle-table-wrapper {\n\tmargin-top: var(--el-spacing-lg);\n}\n\n.idle-table {\n\twidth: 100%;\n\tmargin-bottom: var(--el-spacing-lg);\n}\n\n.price {\n\tcolor: var(--el-color-danger);\n\tfont-weight: 500;\n}\n\n.pagination-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding: var(--el-spacing-lg) 0;\n}\n",{"version":3,"sources":["IdleGoods.vue"],"names":[],"mappings":";AAiTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"IdleGoods.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n\t<div class=\"idle-goods-container\">\n\t\t<div class=\"idle-header\">\n\t\t\t<el-tabs v-model=\"status\" @tab-click=\"handleSelect\" type=\"border-card\">\n\t\t\t\t<el-tab-pane label=\"上线的闲置\" name=\"1\"></el-tab-pane>\n\t\t\t\t<el-tab-pane label=\"下架的闲置\" name=\"2\"></el-tab-pane>\n\t\t\t</el-tabs>\n\t\t\t<div class=\"search-box\">\n\t\t\t\t<el-input \n\t\t\t\t\tplaceholder=\"闲置名称...\" \n\t\t\t\t\tv-model=\"findValue\" \n\t\t\t\t\t@keyup.enter.native=\"searchIdle\"\n\t\t\t\t\tclass=\"search-input\"\n\t\t\t\t\tprefix-icon=\"el-icon-search\">\n\t\t\t\t\t<el-button slot=\"append\" icon=\"el-icon-search\" @click=\"searchIdle\"></el-button>\n\t\t\t\t</el-input>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"idle-table-wrapper\">\n\t\t\t<el-table\n\t\t\t\tv-if=\"mode == 1\"\n\t\t\t\t:data=\"onlineGoods\"\n\t\t\t\tstripe\n\t\t\t\tborder\n\t\t\t\thighlight-current-row\n\t\t\t\tclass=\"idle-table\">\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"releaseTime\"\n\t\t\t\t\tlabel=\"发布日期\"\n\t\t\t\t\twidth=\"180\">\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"idleName\"\n\t\t\t\t\tlabel=\"闲置名称\"\n\t\t\t\t\tshow-overflow-tooltip>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"user.nickname\"\n\t\t\t\t\tlabel=\"发布用户\"\n\t\t\t\t\tshow-overflow-tooltip\n\t\t\t\t\twidth=\"120\">\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"idlePrice\"\n\t\t\t\t\tlabel=\"价格\"\n\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<span class=\"price\">¥{{ scope.row.idlePrice }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\ttype=\"danger\"\n\t\t\t\t\t\t\ticon=\"el-icon-delete\"\n\t\t\t\t\t\t\t@click=\"handleOfflineGoods(scope.$index)\">下架\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\n\t\t\t<el-table\n\t\t\t\tv-show=\"mode == 2\"\n\t\t\t\t:data=\"OfflineGoods\"\n\t\t\t\tstripe\n\t\t\t\tborder\n\t\t\t\thighlight-current-row\n\t\t\t\tclass=\"idle-table\">\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"releaseTime\"\n\t\t\t\t\tlabel=\"发布日期\"\n\t\t\t\t\twidth=\"180\">\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"idleName\"\n\t\t\t\t\tlabel=\"闲置名称\"\n\t\t\t\t\tshow-overflow-tooltip>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"user.nickname\"\n\t\t\t\t\tlabel=\"发布用户\"\n\t\t\t\t\tshow-overflow-tooltip\n\t\t\t\t\twidth=\"120\">\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column\n\t\t\t\t\tprop=\"idlePrice\"\n\t\t\t\t\tlabel=\"价格\"\n\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<span class=\"price\">¥{{ scope.row.idlePrice }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\ttype=\"danger\"\n\t\t\t\t\t\t\ticon=\"el-icon-delete\"\n\t\t\t\t\t\t\t@click=\"deleteGoods(scope.$index)\">删除\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\n\t\t\t<div class=\"pagination-container\">\n\t\t\t\t<el-pagination\n\t\t\t\t\t@current-change=\"handleCurrentChange\"\n\t\t\t\t\t:current-page.sync=\"nowPage\"\n\t\t\t\t\t:page-size=\"8\"\n\t\t\t\t\tbackground\n\t\t\t\t\tlayout=\"prev, pager, next, jumper\"\n\t\t\t\t\t:total=\"total\">\n\t\t\t\t</el-pagination>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n    export default {\n        name: \"IdleGoods\",\n        data() {\n            return {\n                mode: 1,\n                nowPage: 1,\n                total: 0,\n                onlineGoods: [],\n                OfflineGoods: [],\n                findValue: '',\n\t\t\t\t\t\t\t\tstatus: \"1\"\n            }\n        },\n        created() {\n            this.getOnlineGoods();\n        },\n        methods: {\n            handleOfflineGoods(index) {\n                this.$confirm('是否确定下架此闲置商品?', '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    // 用户点击确定后的逻辑，例如调用后端接口下架商品\n                    this.makeOfflineGoods(index);\n                }).catch(() => {\n                    // 用户点击取消后的逻辑，这里可以省略或添加相应处理\n                    console.log('下架操作已取消');\n                });\n            },\n            searchIdle(){\n                this.$api.queryIdle({\n                    findValue: this.findValue,\n                    page: this.nowPage,\n                    nums: 8,\n\t\t\t\t\t\t\t\t\t\tstatus: parseInt(this.status)\n                }).then(res => {\n                    console.log(res);\n                    if (res.status_code == 1 && res.data.list != null) {\n                            if(res.data.list[0].idleStatus == 1){\n                                this.onlineGoods = res.data.list;\n                                this.total = res.data.count;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else {\n                                this.OfflineGoods = res.data.list;\n                                this.total = res.data.count;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                    } else{\n                        this.$message.error(res.msg)\n\t\t\t\t\t\t\t\t\t\t}\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            handleCurrentChange(val) {\n                this.nowPage = val;\n                if (this.mode == 1) {\n                    this.getOnlineGoods();\n                }\n                if (this.mode == 2) {\n                    this.getOfflineGoods();\n                }\n            },\n            handleSelect(tab) {\n                const val = parseInt(tab.name);\n                if (this.mode !== val) {\n                    this.mode = val;\n                    if (val == 1) {\n                        this.nowPage = 1;\n                        this.getOnlineGoods();\n                    }\n                    if (val == 2) {\n                        this.nowPage = 1;\n                        this.getOfflineGoods();\n                    }\n                }\n            },\n            makeOfflineGoods(i) {\n                this.$api.updateGoods({\n                    id: this.onlineGoods[i].id,\n                    status: 2\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.$message.success('下架成功');\n                        this.getOnlineGoods();\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            deleteGoods(i) {\n                this.$api.updateGoods({\n                    id: this.OfflineGoods[i].id,\n                    status: 0\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.getOfflineGoods();\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getOnlineGoods() {\n                this.$api.getGoods({\n                    status: 1,\n                    page: this.nowPage,\n                    nums: 8\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.onlineGoods = res.data.list;\n                        this.total = res.data.count;\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getOfflineGoods() {\n                this.$api.getGoods({\n                    status: 2,\n                    page: this.nowPage,\n                    nums: 8\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        this.OfflineGoods = res.data.list;\n                        this.total = res.data.count;\n                    } else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\t.idle-goods-container {\n\t\tbackground-color: var(--el-bg-color);\n\t\tpadding: var(--el-spacing-lg);\n\t\tbox-shadow: var(--el-box-shadow-light);\n\t\tborder-radius: var(--el-border-radius-base);\n\t}\n\n\t.idle-header {\n\t\tmargin-bottom: var(--el-spacing-lg);\n\t}\n\n\t.search-box {\n\t\tmargin-top: var(--el-spacing-lg);\n\t\tmax-width: 400px;\n\t}\n\n\t.search-input >>> .el-input__inner {\n\t\tborder-radius: var(--el-border-radius-base);\n\t}\n\n\t.idle-table-wrapper {\n\t\tmargin-top: var(--el-spacing-lg);\n\t}\n\n\t.idle-table {\n\t\twidth: 100%;\n\t\tmargin-bottom: var(--el-spacing-lg);\n\t}\n\n\t.price {\n\t\tcolor: var(--el-color-danger);\n\t\tfont-weight: 500;\n\t}\n\n\t.pagination-container {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tpadding: var(--el-spacing-lg) 0;\n\t}\n</style>\n"]}]}