{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/index.vue","mtime":1742204260667},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n    import AppCarousel from '@/components/common/AppCarousel';\n    import ImportantAnnouncements from '@/components/common/ImportantAnnouncements.vue';\n\n    export default {\n        name: \"index\",\n        components: {\n            AppCarousel,\n            AppHead,\n            AppBody,\n            AppFoot,\n            ImportantAnnouncements\n        },\n        data() {\n            return {\n                labelName: '0',\n                idleList: [],\n                currentPage: 1,\n                totalItem: 1,\n            };\n        },\n        created() {\n            this.findIdleTiem(1)\n        },\n        mounted() {\n\n        },\n        watch:{\n            $route(to,from){\n                this.labelName=to.query.labelName;\n                let val=parseInt(to.query.page)?parseInt(to.query.page):1;\n                // let totalPage=parseInt(this.totalItem/8)+1;\n                // val=parseInt(val%totalPage);\n                // val=val===0?totalPage:val;\n                this.currentPage=parseInt(to.query.page)?parseInt(to.query.page):1;\n                this.findIdleTiem(val);\n            }\n        },\n        methods: {\n            findIdleTiem(page){\n                const loading = this.$loading({\n                    lock: true,\n                    text: '加载数据中',\n                    spinner: 'el-icon-loading',\n                    background: 'rgba(0, 0, 0, 0)'\n                });\n                if(this.labelName>0){\n                    this.$api.findIdleTiemByLable({\n                        idleLabel:this.labelName,\n                        page: page,\n                        nums: 8\n                    }).then(res => {\n                        console.log('获取分类商品列表:', res);\n                        if (res.status_code === 1 && res.data && res.data.list) {\n                            let list = res.data.list;\n                            for (let i = 0; i < list.length; i++) {\n                                list[i].timeStr = list[i].releaseTime.substring(0, 10) + \" \" + list[i].releaseTime.substring(11, 19);\n                                try {\n                                    let pictureList = list[i].pictureList;\n                                    if (typeof pictureList === 'string') {\n                                        try {\n                                            // 尝试解析JSON\n                                            pictureList = JSON.parse(pictureList);\n                                        } catch (e) {\n                                            // 如果JSON解析失败，尝试按逗号分割\n                                            if (pictureList.includes(',')) {\n                                                pictureList = pictureList.split(',');\n                                            } else {\n                                                pictureList = [pictureList];\n                                            }\n                                        }\n                                    }\n                                    list[i].imgUrl = pictureList && pictureList.length > 0 ? pictureList[0].trim() : '';\n                                } catch (error) {\n                                    console.error('处理图片列表出错:', error, list[i]);\n                                    list[i].imgUrl = '';\n                                }\n                            }\n                            this.idleList = list;\n                            this.totalItem = res.data.count;\n                        } else {\n                            this.idleList = [];\n                            this.totalItem = 0;\n                            console.error('获取商品列表失败:', res);\n                        }\n                    }).catch(e => {\n                        console.error('请求失败:', e);\n                        this.$message.error('获取商品列表失败');\n                    }).finally(()=>{\n                        loading.close();\n                    })\n                }else{\n                    this.$api.findIdleTiem({\n                        page: page,\n                        nums: 8\n                    }).then(res => {\n                        console.log('获取全部商品列表:', res);\n                        if (res.status_code === 1 && res.data && res.data.list) {\n                            let list = res.data.list;\n                            for (let i = 0; i < list.length; i++) {\n                                list[i].timeStr = list[i].releaseTime.substring(0, 10) + \" \" + list[i].releaseTime.substring(11, 19);\n                                try {\n                                    let pictureList = list[i].pictureList;\n                                    if (typeof pictureList === 'string') {\n                                        try {\n                                            // 尝试解析JSON\n                                            pictureList = JSON.parse(pictureList);\n                                        } catch (e) {\n                                            // 如果JSON解析失败，尝试按逗号分割\n                                            if (pictureList.includes(',')) {\n                                                pictureList = pictureList.split(',');\n                                            } else {\n                                                pictureList = [pictureList];\n                                            }\n                                        }\n                                    }\n                                    list[i].imgUrl = pictureList && pictureList.length > 0 ? pictureList[0].trim() : '';\n                                } catch (error) {\n                                    console.error('处理图片列表出错:', error, list[i]);\n                                    list[i].imgUrl = '';\n                                }\n                            }\n                            this.idleList = list;\n                            this.totalItem = res.data.count;\n                        } else {\n                            this.idleList = [];\n                            this.totalItem = 0;\n                            console.error('获取商品列表失败:', res);\n                        }\n                    }).catch(e => {\n                        console.error('请求失败:', e);\n                        this.$message.error('获取商品列表失败');\n                    }).finally(()=>{\n                        loading.close();\n                    })\n                }\n            },\n            handleClick(tab, event) {\n                // console.log(tab,event);\n                console.log(this.labelName);\n                this.$router.replace({query: {page: 1,labelName:this.labelName}});\n            },\n            handleCurrentChange(val) {\n                console.log(`当前页: ${val}`);\n                this.$router.replace({query: {page: val,labelName:this.labelName}});\n            },\n            toDetails(idle) {\n                this.$router.push({path: '/details', query: {id: idle.id}});\n            },\n            getImageUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    return url;\n                }\n                \n                // 检查url是否是一个本地文件路径\n                if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n                    // 如果是本地路径，则转换为服务器URL\n                    // 这里假设文件名是路径最后的部分\n                    const fileName = url.split(/[/\\\\]/).pop();\n                    // 构建访问URL，端口改为8082\n                    return `http://localhost:8082/image?imageName=${fileName}`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况直接返回\n                return url;\n            },\n            getAvatarUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    // 用本地默认头像替代外部URL\n                    return `http://localhost:8082/image?imageName=default_avatar.webp`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况使用默认头像\n                return `http://localhost:8082/image?imageName=default_avatar.webp`;\n            },\n            // 添加跳转到闲置易物交换页面的方法\n            goToExchange() {\n                this.$router.push('/exchange');\n            }\n        }\n    }\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAyEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"page-wrapper\">\n        <app-head></app-head>\n        <app-body>\n            <div class=\"home-container\">\n                <important-announcements></important-announcements>\n                \n                <div class=\"home-header\">\n                    <h1 class=\"main-title\">淘易阁</h1>\n                    <p class=\"sub-title\">发现校园里的闲置宝藏</p>\n                </div>\n\n                <el-tabs v-model=\"labelName\" class=\"category-tabs\" @tab-click=\"handleClick\">\n                    <el-tab-pane label=\"全部\" name=\"0\"></el-tab-pane>\n                    <el-tab-pane label=\"数码科技\" name=\"1\"></el-tab-pane>\n                    <el-tab-pane label=\"生活用品\" name=\"2\"></el-tab-pane>\n                    <el-tab-pane label=\"运动相关\" name=\"3\"></el-tab-pane>\n                    <el-tab-pane label=\"图书笔记\" name=\"4\"></el-tab-pane>\n                    <el-tab-pane label=\"社区帖子\" name=\"5\"></el-tab-pane>\n<!--                <el-tab-pane label=\"已被购买商品\" name=\"6\"></el-tab-pane>-->\n                </el-tabs>\n\n                <div class=\"product-grid\">\n                    <el-card \n                        v-for=\"(idle, index) in idleList\" \n                        :key=\"index\" \n                        class=\"product-card\" \n                        shadow=\"hover\"\n                        @click.native=\"toDetails(idle)\">\n                        <div class=\"product-image\">\n                            <el-image\n                                :src=\"getImageUrl(idle.imgUrl)\"\n                                fit=\"cover\">\n                                <div slot=\"error\" class=\"image-slot\">\n                                    <i class=\"el-icon-picture-outline\">无图</i>\n                                </div>\n                            </el-image>\n                            <div v-if=\"idle.idleStatus === 2\" class=\"product-tag sold\">已售出</div>\n                            <div v-else class=\"product-tag\">出售中</div>\n                        </div>\n                        <div class=\"product-info\">\n                            <h3 class=\"product-title\">{{ idle.idleName }}</h3>\n                            <div class=\"product-meta\">\n                                <div class=\"product-price\" v-if=\"idle.idlePrice !== 0\">¥{{ idle.idlePrice }}</div>\n                                <div class=\"product-price\" v-else>免费</div>\n                                <div class=\"product-location\">{{ idle.idlePlace }}</div>\n                            </div>\n                            <div class=\"product-time\">{{ idle.timeStr }}</div>\n                            <div class=\"product-user\">\n                                <el-avatar :size=\"24\" :src=\"getAvatarUrl(idle.user.avatar)\"></el-avatar>\n                                <span class=\"user-name\">{{ idle.user.nickname }}</span>\n                            </div>\n                        </div>\n                    </el-card>\n                </div>\n\n                <div class=\"pagination-container\">\n                    <el-pagination\n                        background\n                        @current-change=\"handleCurrentChange\"\n                        :current-page.sync=\"currentPage\"\n                        :page-size=\"8\"\n                        layout=\"prev, pager, next, jumper\"\n                        :total=\"totalItem\">\n                    </el-pagination>\n                </div>\n            </div>\n            <app-foot></app-foot>\n        </app-body>\n    </div>\n</template>\n\n<script>\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n    import AppCarousel from '@/components/common/AppCarousel';\n    import ImportantAnnouncements from '@/components/common/ImportantAnnouncements.vue';\n\n    export default {\n        name: \"index\",\n        components: {\n            AppCarousel,\n            AppHead,\n            AppBody,\n            AppFoot,\n            ImportantAnnouncements\n        },\n        data() {\n            return {\n                labelName: '0',\n                idleList: [],\n                currentPage: 1,\n                totalItem: 1,\n            };\n        },\n        created() {\n            this.findIdleTiem(1)\n        },\n        mounted() {\n\n        },\n        watch:{\n            $route(to,from){\n                this.labelName=to.query.labelName;\n                let val=parseInt(to.query.page)?parseInt(to.query.page):1;\n                // let totalPage=parseInt(this.totalItem/8)+1;\n                // val=parseInt(val%totalPage);\n                // val=val===0?totalPage:val;\n                this.currentPage=parseInt(to.query.page)?parseInt(to.query.page):1;\n                this.findIdleTiem(val);\n            }\n        },\n        methods: {\n            findIdleTiem(page){\n                const loading = this.$loading({\n                    lock: true,\n                    text: '加载数据中',\n                    spinner: 'el-icon-loading',\n                    background: 'rgba(0, 0, 0, 0)'\n                });\n                if(this.labelName>0){\n                    this.$api.findIdleTiemByLable({\n                        idleLabel:this.labelName,\n                        page: page,\n                        nums: 8\n                    }).then(res => {\n                        console.log('获取分类商品列表:', res);\n                        if (res.status_code === 1 && res.data && res.data.list) {\n                            let list = res.data.list;\n                            for (let i = 0; i < list.length; i++) {\n                                list[i].timeStr = list[i].releaseTime.substring(0, 10) + \" \" + list[i].releaseTime.substring(11, 19);\n                                try {\n                                    let pictureList = list[i].pictureList;\n                                    if (typeof pictureList === 'string') {\n                                        try {\n                                            // 尝试解析JSON\n                                            pictureList = JSON.parse(pictureList);\n                                        } catch (e) {\n                                            // 如果JSON解析失败，尝试按逗号分割\n                                            if (pictureList.includes(',')) {\n                                                pictureList = pictureList.split(',');\n                                            } else {\n                                                pictureList = [pictureList];\n                                            }\n                                        }\n                                    }\n                                    list[i].imgUrl = pictureList && pictureList.length > 0 ? pictureList[0].trim() : '';\n                                } catch (error) {\n                                    console.error('处理图片列表出错:', error, list[i]);\n                                    list[i].imgUrl = '';\n                                }\n                            }\n                            this.idleList = list;\n                            this.totalItem = res.data.count;\n                        } else {\n                            this.idleList = [];\n                            this.totalItem = 0;\n                            console.error('获取商品列表失败:', res);\n                        }\n                    }).catch(e => {\n                        console.error('请求失败:', e);\n                        this.$message.error('获取商品列表失败');\n                    }).finally(()=>{\n                        loading.close();\n                    })\n                }else{\n                    this.$api.findIdleTiem({\n                        page: page,\n                        nums: 8\n                    }).then(res => {\n                        console.log('获取全部商品列表:', res);\n                        if (res.status_code === 1 && res.data && res.data.list) {\n                            let list = res.data.list;\n                            for (let i = 0; i < list.length; i++) {\n                                list[i].timeStr = list[i].releaseTime.substring(0, 10) + \" \" + list[i].releaseTime.substring(11, 19);\n                                try {\n                                    let pictureList = list[i].pictureList;\n                                    if (typeof pictureList === 'string') {\n                                        try {\n                                            // 尝试解析JSON\n                                            pictureList = JSON.parse(pictureList);\n                                        } catch (e) {\n                                            // 如果JSON解析失败，尝试按逗号分割\n                                            if (pictureList.includes(',')) {\n                                                pictureList = pictureList.split(',');\n                                            } else {\n                                                pictureList = [pictureList];\n                                            }\n                                        }\n                                    }\n                                    list[i].imgUrl = pictureList && pictureList.length > 0 ? pictureList[0].trim() : '';\n                                } catch (error) {\n                                    console.error('处理图片列表出错:', error, list[i]);\n                                    list[i].imgUrl = '';\n                                }\n                            }\n                            this.idleList = list;\n                            this.totalItem = res.data.count;\n                        } else {\n                            this.idleList = [];\n                            this.totalItem = 0;\n                            console.error('获取商品列表失败:', res);\n                        }\n                    }).catch(e => {\n                        console.error('请求失败:', e);\n                        this.$message.error('获取商品列表失败');\n                    }).finally(()=>{\n                        loading.close();\n                    })\n                }\n            },\n            handleClick(tab, event) {\n                // console.log(tab,event);\n                console.log(this.labelName);\n                this.$router.replace({query: {page: 1,labelName:this.labelName}});\n            },\n            handleCurrentChange(val) {\n                console.log(`当前页: ${val}`);\n                this.$router.replace({query: {page: val,labelName:this.labelName}});\n            },\n            toDetails(idle) {\n                this.$router.push({path: '/details', query: {id: idle.id}});\n            },\n            getImageUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    return url;\n                }\n                \n                // 检查url是否是一个本地文件路径\n                if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n                    // 如果是本地路径，则转换为服务器URL\n                    // 这里假设文件名是路径最后的部分\n                    const fileName = url.split(/[/\\\\]/).pop();\n                    // 构建访问URL，端口改为8082\n                    return `http://localhost:8082/image?imageName=${fileName}`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况直接返回\n                return url;\n            },\n            getAvatarUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    // 用本地默认头像替代外部URL\n                    return `http://localhost:8082/image?imageName=default_avatar.webp`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况使用默认头像\n                return `http://localhost:8082/image?imageName=default_avatar.webp`;\n            },\n            // 添加跳转到闲置易物交换页面的方法\n            goToExchange() {\n                this.$router.push('/exchange');\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .page-wrapper {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n    }\n\n    .home-container {\n        padding: 20px;\n        padding-top: 0;\n    }\n\n    .home-header {\n        margin: 10px 0;\n        text-align: center;\n    }\n\n    .main-title {\n        font-size: 28px;\n        color: var(--el-color-primary);\n        margin-bottom: 5px;\n    }\n\n    .sub-title {\n        font-size: var(--el-font-size-medium);\n        color: var(--el-text-color-secondary);\n    }\n\n    .category-tabs {\n        margin-bottom: var(--el-spacing-xl);\n    }\n\n    .product-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n        gap: var(--el-spacing-lg);\n        margin-bottom: var(--el-spacing-xl);\n    }\n\n    .product-card {\n        height: 100%;\n        cursor: pointer;\n        transition: transform 0.3s;\n    }\n\n    .product-card:hover {\n        transform: translateY(-5px);\n    }\n\n    .product-image {\n        position: relative;\n        height: 200px;\n        overflow: hidden;\n    }\n\n    .product-image .el-image {\n        width: 100%;\n        height: 100%;\n    }\n\n    .product-tag {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background-color: var(--el-color-success);\n        color: white;\n        padding: 2px 8px;\n        border-radius: var(--el-border-radius-small);\n        font-size: var(--el-font-size-extra-small);\n    }\n\n    .product-tag.sold {\n        background-color: var(--el-color-info);\n    }\n\n    .product-info {\n        padding: var(--el-spacing-md);\n    }\n\n    .product-title {\n        font-size: var(--el-font-size-medium);\n        margin-bottom: var(--el-spacing-sm);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .product-meta {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: var(--el-spacing-xs);\n    }\n\n    .product-price {\n        color: var(--el-color-danger);\n        font-weight: 500;\n        font-size: var(--el-font-size-medium);\n    }\n\n    .product-location {\n        color: var(--el-text-color-secondary);\n        font-size: var(--el-font-size-small);\n    }\n\n    .product-time {\n        color: var(--el-text-color-secondary);\n        font-size: var(--el-font-size-extra-small);\n        margin-bottom: var(--el-spacing-sm);\n    }\n\n    .product-user {\n        display: flex;\n        align-items: center;\n    }\n\n    .user-name {\n        margin-left: var(--el-spacing-sm);\n        font-size: var(--el-font-size-small);\n        color: var(--el-text-color-regular);\n    }\n\n    .pagination-container {\n        display: flex;\n        justify-content: center;\n        padding: var(--el-spacing-lg) 0;\n    }\n\n    img{\n        width: 100%;\n        height: 100%;\n        object-fit: fill;\n    }\n    /*走马灯 css*/\n    .el-carousel__item h3 {\n        color: #475669;\n        font-size: 14px;\n        opacity: 0.75;\n        line-height: 200px;\n        margin: 0;\n\n    }\n\n    .el-carousel__item:nth-child(2n) {\n        background-color: #99a9bf;\n    }\n\n    .el-carousel__item:nth-child(2n+1) {\n        background-color: #d3dce6;\n    }\n\n\n\n    .idle-card {\n        height: 300px;\n        border: #eeeeee solid 1px;\n        margin-bottom: 15px;\n        cursor: pointer;\n    }\n\n    .fenye {\n        display: flex;\n        justify-content: center;\n        height: 60px;\n        align-items: center;\n    }\n\n    .idle-title {\n        font-size: 18px;\n        font-weight: 600;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        margin: 10px;\n    }\n\n    .idle-prive {\n        font-size: 16px;\n        color: red;\n    }\n\n    .idle-place {\n        font-size: 13px;\n        color: #666666;\n        float: right;\n        padding-right: 20px;\n\n    }\n\n    .idle-time {\n        color: #666666;\n        font-size: 12px;\n        margin: 0 10px;\n    }\n\n    .user-nickname {\n        color: #999999;\n        font-size: 12px;\n        display: flex;\n        align-items: center;\n        height: 30px;\n        padding-left: 10px;\n    }\n\n    .user-info {\n        padding: 5px 10px;\n        height: 30px;\n        display: flex;\n    }\n\n    /* 添加新样式 */\n    .feature-buttons {\n        margin-top: 15px;\n        display: flex;\n        justify-content: center;\n    }\n</style>\n"]}]}