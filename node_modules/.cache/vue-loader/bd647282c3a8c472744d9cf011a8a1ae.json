{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/userList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/userList.vue","mtime":1741743644073},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\n    export default {\n        name: \"userList\",\n        created() {\n            this.getUserData();\n        },\n        methods: {\n            handleCurrentChange(val) {\n                this.nowPage = val;\n                if(this.mode == 1){\n                    this.getUserData();\n                }\n                if(this.mode == 2){\n                    this.getBadUserData();\n                }\n                if(this.mode == 3){\n                    this.getUserManage();\n                }\n            },\n            handleSelect(val){\n                if(this.mode !== val){\n                    this.mode = val\n                    if(val == 1){\n                        this.nowPage = 1;\n                        this.getUserData();\n                    }\n                    if(val == 2){\n                        this.nowPage = 1;\n                        this.getBadUserData();\n                    }\n                    if(val == 3){\n                        this.nowPage = 1;\n                        this.getUserManage();\n                    }\n                }\n            },\n            getUserData(){\n                //正常普通用户\n                this.$api.getUserData({\n                    page: this.nowPage,\n                    nums:7,\n                    status:0\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.userData = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getBadUserData(){\n                //违规用户\n                this.$api.getUserData({\n                    page: this.nowPage,\n                    nums:8,\n                    status:1\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.badUserData = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                });\n            },\n            getUserManage(){\n                //管理员\n                this.$api.getUserManage({\n                    page: this.nowPage,\n                    nums:8,\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.userManage = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            confirmSeal(index) {\n                this.targetIndex = index;\n                this.dialogConfirmVisible = true;\n            },\n            sealUserConfirmed(index) {\n                // 执行封号操作\n                this.sealUser(index);\n                // 关闭确认弹窗\n                this.dialogConfirmVisible = false;\n            },\n            // 封号\n            sealUser(i){\n                console.log( this.userData[i].id);\n                this.$api.updateUserStatus({\n                    id: this.userData[i].id,\n                    status:1\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.getUserData();\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            unsealUser(i){\n                this.$api.updateUserStatus({\n                    id: this.badUserData[i].id,\n                    status:0\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.getBadUserData();\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            regAdmin(){\n                if(this.adminPassword == this.adminRePassword){\n                    this.$api.regAdministrator({\n                        adminName: this.adminName,\n                        accountNumber: this.adminAccount,\n                        adminPassword: this.adminPassword,\n                    }).then(res => {\n                        if(res.status_code==1){\n                            this.total = this.total+1;\n                            this.nowPage= Math.ceil(this.total/8);\n                            console.log(this.nowPage);\n                            this.getUserManage();\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        this.$message.error(\"添加失败，账号重复或网络异常\")\n                    });\n                    this.adminRegVisible = false\n                }\n                else {\n                    this.$message.error(\"两次输入的密码不一致\");\n                }\n            },\n            searchIdle() {\n                this.$api.queryUser({\n                    searchValue: this.searchValue,\n                    mode: this.mode,\n                    page: this.nowPage,\n                    nums: 8,\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        if(this.mode == 1){\n                            this.userData = res.data.list;\n                            this.total = res.data.count;\n                        }else if(this.mode == 2){\n                            this.badUserData = res.data.list;\n                            this.total = res.data.count;\n                        }else {\n                            this.userManage = res.data.list;\n                            this.total = res.data.count;\n                        }\n                    } else{\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            showUpdateModal(index) {\n                // 保存当前行的用户信息，并显示对话框\n                this.selectedUserIndex = index;\n                this.userForm = { ...this.userData[index] };\n                this.dialogVisible = true;\n            },\n            handleCancel() {\n                this.resetForm();\n                this.dialogVisible = false;\n            },\n            handleSave() {\n                // 验证并提交表单\n                if (this.$refs.userForm.validate()) {\n                    // 合并更新后的表单数据到原用户列表\n                    this.userData[this.selectedUserIndex] = { ...this.userForm };\n\n                    // 如果有需要，这里可以对接后台接口，将更新的数据发送到服务器\n                    this.$api.updateUser({\n                        id: this.userForm.id,\n                        nickname: this.userForm.nickname,\n                        password: this.userForm.userPassword,\n                    }).then(res => {\n                        if (res.status_code === 1) {\n                            this.$message.success('更新成功');\n                            this.dialogVisible = false;\n                            this.getUserData();\n                        }\n                    }).catch(e => {\n                        console.log(e)\n                    })\n                }\n            },\n            validatePassword(rule, value, callback) {\n                const allowedChars = /^[a-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~]+$/;\n                if (!allowedChars.test(value)) {\n                    callback(new Error('密码只能包含字母、数字以及常见的特殊字符'));\n                } else {\n                    callback();\n                }\n            },\n            resetForm() {\n                this.userForm = {};\n            },\n            handleDialogClose() {\n                // 对话框关闭时重置表单\n                this.resetForm();\n            },\n        },\n        data(){\n            return {\n                dialogConfirmVisible: false, // 控制确认弹窗的显示隐藏\n                targetIndex: null, // 记录即将封号的用户索引\n                userForm: {}, // 当前编辑的用户表单数据\n                dialogVisible: false, // 控制对话框是否显示\n                selectedUserIndex: null, // 当前选中用户的索引\n                mode:1,\n                nowPage: 1,\n                total: 63,\n                adminRegVisible: false,\n                adminAccount:'',\n                adminPassword:'',\n                adminRePassword:'',\n                adminName:'',\n                userData: [],\n                badUserData:[],\n                userManage:[],\n                searchValue: '',\n            }\n        },\n    }\n",{"version":3,"sources":["userList.vue"],"names":[],"mappingsfile":"userList.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n    <div class=\"main-border\">\n        <el-menu default-active=\"1\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n          <span v-show=\"this.mode != 3\" class=\"app-title\">\n\t\t\t\t\t\t<el-input placeholder=\"用户账号...\" v-model=\"searchValue\" @keyup.enter.native=\"searchIdle\">\n\t\t\t\t\t\t\t<el-button slot=\"append\" icon=\"el-icon-search\" @click=\"searchIdle\"></el-button>\n\t\t\t\t\t\t</el-input>\n\t\t\t\t\t</span>\n            <el-menu-item index=\"1\">正常用户</el-menu-item>\n            <el-menu-item index=\"2\">违规用户</el-menu-item>\n            <el-menu-item index=\"3\">管理员</el-menu-item>\n            <div v-show=\"this.mode ==3\" class=\"addAdminButton\">\n                <el-button size=\"mini\" type=\"success\" @click=\"adminRegVisible = true\">添加管理员</el-button>\n                <el-dialog\n                        title=\"添加管理员\"\n                        :visible.sync=\"adminRegVisible\"\n                        width=\"25%\"\n                       >\n                    <span style=\"margin-left: 10px\">新增管理员名称</span>\n                    <el-input v-model=\"adminName\"  maxlength=\"8\" placeholder=\"请输入管理员名称\" style=\"padding: 10px 0\" clearable required></el-input>\n                    <span style=\"margin-left: 10px\">新增管理员账户</span>\n                    <el-input v-model=\"adminAccount\" minlength=\"8\" maxlength=\"10\" placeholder=\"请输入管理员账户\" style=\"padding: 10px 0\"\n                               clearable required></el-input>\n                    <span style=\"margin-left: 10px\">新增管理员密码</span>\n                    <el-input v-model=\"adminPassword\" minlength=\"8\" placeholder=\"请输入管理员密码\" style=\"padding: 10px 0\" show-password required></el-input>\n                    <span style=\"margin-left: 10px\">确认管理员密码</span>\n                    <el-input v-model=\"adminRePassword\" minlength=\"10\" placeholder=\"请再次输入管理员密码\" style=\"padding: 10px 0\" show-password required></el-input>\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                        <el-button type=\"primary\" @click=\"regAdmin\">添加</el-button>\n                    </span>\n                </el-dialog>\n            </div>\n        </el-menu>\n        <el-table v-show=\"this.mode == 1\"\n                  :data=\"userData\"\n                  stripe\n                  style=\"width: 100%;color: #5a5c61;\">\n            <el-table-column label=\"头像\" width=\"50\">\n                <template slot-scope=\"scope\">\n                    <el-avatar shape=\"square\" :size=\"23\" :src=\"scope.row.avatar\"></el-avatar>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    prop=\"accountNumber\"\n                    label=\"用户账号\"\n                    show-overflow-tooltip\n                    min-width=\"150\"\n                    width=\"150\">\n            </el-table-column>\n            <el-table-column\n                    prop=\"nickname\"\n                    label=\"用户昵称\"\n                    show-overflow-tooltip\n                    min-width=\"150\"\n                    width=\"150\">\n            </el-table-column>\n            <el-table-column\n                    prop=\"signInTime\"\n                    label=\"注册时间\"\n                    show-overflow-tooltip\n                    width=\"200\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                            size=\"mini\"\n                            type=\"danger\"\n                            @click=\"confirmSeal(scope.$index)\">封号</el-button>\n                    <el-button\n                        size=\"mini\"\n                        type=\"normal\"\n                        @click=\"showUpdateModal(scope.$index)\">修改</el-button>\n                </template>\n\n            </el-table-column>\n        </el-table>\n        <!-- 确认弹窗 -->\n        <el-dialog\n            :title=\"'确认封号'\"\n            :visible.sync=\"dialogConfirmVisible\"\n            width=\"30%\"\n            center>\n            <p>您确定要封禁该账号吗？</p>\n            <div slot=\"footer\">\n                <el-button @click=\"dialogConfirmVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"sealUserConfirmed(targetIndex)\">确定</el-button>\n            </div>\n        </el-dialog>\n        <!-- 内部创建的对话框 -->\n        <el-dialog\n            :visible.sync=\"dialogVisible\"\n            title=\"修改用户信息\"\n            @close=\"handleDialogClose\">\n            <el-form :model=\"userForm\" ref=\"userForm\" label-width=\"80px\">\n                <!-- 显示不可编辑的基本信息 -->\n                <el-form-item label=\"账号\">\n                    <el-input :disabled = \"true\" v-model=\"userForm.accountNumber\"></el-input>\n                </el-form-item>\n\n                <!-- 显示并允许编辑的文本框 -->\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"userForm.nickname\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"userPassword\">\n                    <el-input v-model=\"userForm.userPassword\" :rules=\"[\n                                                        {\n                                                          validator: validatePassword,\n                                                          trigger: 'blur'\n                                                        }\n                                                      ]\">\n                    </el-input>\n                </el-form-item>\n\n            </el-form>\n\n            <div slot=\"footer\">\n                <el-button @click=\"handleCancel\">取消</el-button>\n                <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\n            </div>\n        </el-dialog>\n        <el-table v-show=\"this.mode == 2\"\n                  :data=\"badUserData\"\n                  stripe\n                  style=\"width: 100%;color: #5a5c61;\">\n            <el-table-column\n                    label=\"头像\"\n                    width=\"50\">\n                <template slot-scope=\"scope\">\n                    <el-avatar shape=\"square\" :size=\"23\" :src=\"scope.row.avatar\"></el-avatar>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    prop=\"accountNumber\"\n                    label=\"用户账号\"\n                    show-overflow-tooltip\n                    min-width=\"150\"\n                    width=\"150\">\n            </el-table-column>\n            <el-table-column\n                    prop=\"nickname\"\n                    label=\"用户昵称\"\n                    show-overflow-tooltip\n                    width=\"150\"\n            >\n            </el-table-column>\n            <el-table-column\n                    prop=\"signInTime\"\n                    label=\"注册时间\"\n                    show-overflow-tooltip\n                    width=\"200\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                            size=\"mini\"\n                            type=\"success\"\n                            @click=\"unsealUser(scope.$index)\">解封</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <el-table  v-show=\"this.mode == 3\"\n                :data=\"userManage\"\n                stripe\n                style=\"width: 100%;color: #5a5c61;\">\n            <el-table-column\n                    prop=\"accountNumber\"\n                    label=\"管理员账号\"\n                    show-overflow-tooltip\n                    width=\"200\">\n            </el-table-column>\n            <el-table-column\n                    prop=\"adminName\"\n                    label=\"管理名称\"\n                    >\n            </el-table-column>\n        </el-table>\n        <div class=\"block\">\n            <el-pagination\n                    @current-change=\"handleCurrentChange\"\n                    :current-page.sync=\"nowPage\"\n                    :page-size=\"7\"\n                    background\n                    layout=\"prev, pager, next,jumper\"\n                    :total=\"total\">\n            </el-pagination>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"userList\",\n        created() {\n            this.getUserData();\n        },\n        methods: {\n            handleCurrentChange(val) {\n                this.nowPage = val;\n                if(this.mode == 1){\n                    this.getUserData();\n                }\n                if(this.mode == 2){\n                    this.getBadUserData();\n                }\n                if(this.mode == 3){\n                    this.getUserManage();\n                }\n            },\n            handleSelect(val){\n                if(this.mode !== val){\n                    this.mode = val\n                    if(val == 1){\n                        this.nowPage = 1;\n                        this.getUserData();\n                    }\n                    if(val == 2){\n                        this.nowPage = 1;\n                        this.getBadUserData();\n                    }\n                    if(val == 3){\n                        this.nowPage = 1;\n                        this.getUserManage();\n                    }\n                }\n            },\n            getUserData(){\n                //正常普通用户\n                this.$api.getUserData({\n                    page: this.nowPage,\n                    nums:7,\n                    status:0\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.userData = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            getBadUserData(){\n                //违规用户\n                this.$api.getUserData({\n                    page: this.nowPage,\n                    nums:8,\n                    status:1\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.badUserData = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                });\n            },\n            getUserManage(){\n                //管理员\n                this.$api.getUserManage({\n                    page: this.nowPage,\n                    nums:8,\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.userManage = res.data.list;\n                        this.total = res.data.count;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            confirmSeal(index) {\n                this.targetIndex = index;\n                this.dialogConfirmVisible = true;\n            },\n            sealUserConfirmed(index) {\n                // 执行封号操作\n                this.sealUser(index);\n                // 关闭确认弹窗\n                this.dialogConfirmVisible = false;\n            },\n            // 封号\n            sealUser(i){\n                console.log( this.userData[i].id);\n                this.$api.updateUserStatus({\n                    id: this.userData[i].id,\n                    status:1\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.getUserData();\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            unsealUser(i){\n                this.$api.updateUserStatus({\n                    id: this.badUserData[i].id,\n                    status:0\n                }).then(res => {\n                    if(res.status_code==1){\n                        this.getBadUserData();\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            regAdmin(){\n                if(this.adminPassword == this.adminRePassword){\n                    this.$api.regAdministrator({\n                        adminName: this.adminName,\n                        accountNumber: this.adminAccount,\n                        adminPassword: this.adminPassword,\n                    }).then(res => {\n                        if(res.status_code==1){\n                            this.total = this.total+1;\n                            this.nowPage= Math.ceil(this.total/8);\n                            console.log(this.nowPage);\n                            this.getUserManage();\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        this.$message.error(\"添加失败，账号重复或网络异常\")\n                    });\n                    this.adminRegVisible = false\n                }\n                else {\n                    this.$message.error(\"两次输入的密码不一致\");\n                }\n            },\n            searchIdle() {\n                this.$api.queryUser({\n                    searchValue: this.searchValue,\n                    mode: this.mode,\n                    page: this.nowPage,\n                    nums: 8,\n                }).then(res => {\n                    if (res.status_code == 1) {\n                        if(this.mode == 1){\n                            this.userData = res.data.list;\n                            this.total = res.data.count;\n                        }else if(this.mode == 2){\n                            this.badUserData = res.data.list;\n                            this.total = res.data.count;\n                        }else {\n                            this.userManage = res.data.list;\n                            this.total = res.data.count;\n                        }\n                    } else{\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n            },\n            showUpdateModal(index) {\n                // 保存当前行的用户信息，并显示对话框\n                this.selectedUserIndex = index;\n                this.userForm = { ...this.userData[index] };\n                this.dialogVisible = true;\n            },\n            handleCancel() {\n                this.resetForm();\n                this.dialogVisible = false;\n            },\n            handleSave() {\n                // 验证并提交表单\n                if (this.$refs.userForm.validate()) {\n                    // 合并更新后的表单数据到原用户列表\n                    this.userData[this.selectedUserIndex] = { ...this.userForm };\n\n                    // 如果有需要，这里可以对接后台接口，将更新的数据发送到服务器\n                    this.$api.updateUser({\n                        id: this.userForm.id,\n                        nickname: this.userForm.nickname,\n                        password: this.userForm.userPassword,\n                    }).then(res => {\n                        if (res.status_code === 1) {\n                            this.$message.success('更新成功');\n                            this.dialogVisible = false;\n                            this.getUserData();\n                        }\n                    }).catch(e => {\n                        console.log(e)\n                    })\n                }\n            },\n            validatePassword(rule, value, callback) {\n                const allowedChars = /^[a-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~]+$/;\n                if (!allowedChars.test(value)) {\n                    callback(new Error('密码只能包含字母、数字以及常见的特殊字符'));\n                } else {\n                    callback();\n                }\n            },\n            resetForm() {\n                this.userForm = {};\n            },\n            handleDialogClose() {\n                // 对话框关闭时重置表单\n                this.resetForm();\n            },\n        },\n        data(){\n            return {\n                dialogConfirmVisible: false, // 控制确认弹窗的显示隐藏\n                targetIndex: null, // 记录即将封号的用户索引\n                userForm: {}, // 当前编辑的用户表单数据\n                dialogVisible: false, // 控制对话框是否显示\n                selectedUserIndex: null, // 当前选中用户的索引\n                mode:1,\n                nowPage: 1,\n                total: 63,\n                adminRegVisible: false,\n                adminAccount:'',\n                adminPassword:'',\n                adminRePassword:'',\n                adminName:'',\n                userData: [],\n                badUserData:[],\n                userManage:[],\n                searchValue: '',\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    .main-border{\n        background-color: #FFF;\n        padding: 10px 30px;\n        box-shadow: 0 1px 15px -6px rgba(0,0,0,.5);\n        border-radius: 5px;\n    }\n    .block {\n        display: flex;\n        justify-content:center;\n        padding-top: 15px;\n        padding-bottom: 10px;\n        width: 100%;\n    }\n    .addAdminButton{\n        display:flex;\n        justify-content: flex-end;\n        align-items: center;\n        height: 60px;\n        outline: none;\n    }\n</style>\n"]}]}