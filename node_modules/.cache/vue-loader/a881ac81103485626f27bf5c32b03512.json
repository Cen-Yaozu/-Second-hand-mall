{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/shopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/shopCart.vue","mtime":1741743644074},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["\nimport AppHead from '@/components/common/AppHeader.vue';\nimport AppBody from '@/components/common/AppPageBody.vue';\nimport AppFoot from '@/components/common/AppFoot.vue';\n\nexport default {\n\n    name: \"shopCart\",\n    components: {\n        AppHead,\n        AppBody,\n        AppFoot\n    },\n    data() {\n        return {\n            isShowTip: false,\n            tipContent: \"\",\n            dataList: [],\n            idlePlace: '',\n            total: 0,\n            idleItemids:[],\n            favoriteIds:[]\n        }\n    },\n\n    mounted() {\n    },\n    created() {\n\n        if (!this.$globalData.userInfo.nickname) {\n            this.$api.getUserInfo().then(res => {\n                if (res.status_code === 1) {\n                    res.data.signInTime = res.data.signInTime.substring(0, 10);\n                    console.log(res.data);\n                    this.$globalData.userInfo = res.data;\n                    this.userInfo = this.$globalData.userInfo;\n                }\n            })\n        } else {\n            this.userInfo = this.$globalData.userInfo;\n            console.log(this.userInfo);\n        }\n        this.getMyFavorite()\n        this.getIdleItemData()\n    },\n    computed: {\n    },\n\n    methods: {\n\n        /*支付功能*/\n        payAll(){\n            this.$api.addOrderByIds({\n                idleItemIds:this.idleItemids,\n                total_price:this.total,\n            }).then(res=>{\n                console.log(res);\n                if(res.status_code===1){\n                    this.$api.removeShopCartByIds({\n                        favoriteIds: this.favoriteIds\n                    }).then(res=>{\n                        // alert(\"支付成功，商品已经从购物车中移出\")\n                    })\n                    this.$router.push({path: '/order', query: {id: res.data.id}});\n                }else {\n                    this.$message.error(res.msg)\n                }\n            }).catch(e=>{\n\n            })\n        },\n        /*多选框*/\n        toggleSelection(rows) {\n            if (rows) {\n                rows.forEach(row => {\n                    this.$refs.multipleTable.toggleRowSelection(row);\n                });\n            } else {\n                this.$refs.multipleTable.clearSelection();\n            }\n        },\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n            console.log(val)\n\n            /*计算勾选总价*/\n            if (val.length !== 0) {\n                for (var i = 0; i < val.length; i++){\n                    this.idleItemids[i] = val[i].id;\n                    this.favoriteIds[i] = val[i].favoriteId;\n                }\n\n                console.log(this.idleItemids,this.favoriteIds)\n                this.total = this.countTotal(val, 'idlePrice')\n            }else{\n                this.total = 0\n            }\n        },\n        countTotal(arr, keyName) {\n            let $total = 0\n            $total = arr.reduce(function(total, currentValue, currentIndex, arr) {\n                return currentValue[keyName] ? (total + currentValue[keyName]) : total\n            }, 0)\n            return $total\n        },\n        removeShopCart(row, index) {\n            this.$api.deleteFavorite({\n                id: row.favoriteId\n            }).then(res => {\n                console.log(res);\n                console.log(row)\n                // console.log(\"列表的数据\"+ row.id);\n                if (res.status_code === 1) {\n                    this.$message({\n                        message: '已取消购物车！',\n                        type: 'success'\n                    });\n                    this.dataList.splice(index, 1);\n                    // this.getMyFavorite()\n                } else {\n                    this.$message.error(res.msg)\n                }\n                // this.getMyFavorite()\n            })\n        },\n        /*获取购物车内容*/\n        getMyFavorite() {\n            this.$api.getMyFavorite().then(res => {\n                console.log('getMyFavorite', res);\n                if (res.status_code === 1) {\n                    for (let i = 0; i < res.data.length; i++) {\n                        let pictureList = JSON.parse(res.data[i].idleItem.pictureList);\n                        this.dataList.push({\n                            favoriteId: res.data[i].id,\n                            id: res.data[i].idleItem.id,\n                            imgUrl: pictureList.length > 0 ? pictureList[0] : '',\n                            idleName: res.data[i].idleItem.idleName,\n                            idleDetails: res.data[i].idleItem.idleDetails,\n                            timeStr: res.data[i].createTime.substring(0, 10) + \" \" + res.data[i].createTime.substring(11, 19),\n                            idlePrice: res.data[i].idleItem.idlePrice,\n                            idleStatus: res.data[i].idleItem.idleStatus\n                        });\n                        this.idlePlace = res.data[i].idleItem.idlePlace\n                    }\n                }\n            })\n        }\n}\n\n}\n\n",null]}