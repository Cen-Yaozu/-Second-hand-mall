{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue","mtime":1742023978617},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _defineProperty from \"/Users/macos/Desktop/-Second-hand-mall/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport AppHead from \"../common/AppHeader.vue\";\nimport AppBody from \"../common/AppPageBody.vue\";\nimport AppFoot from \"../common/AppFoot.vue\";\nimport ReportForm from \"../common/ReportForm.vue\";\nexport default {\n  name: \"idle-details\",\n  components: {\n    AppHead: AppHead,\n    AppBody: AppBody,\n    AppFoot: AppFoot,\n    ReportForm: ReportForm\n  },\n  data: function data() {\n    return {\n      buttonText: '编辑',\n      isEditing: false,\n      messageContent: '',\n      toUser: null,\n      toMessage: null,\n      isReply: false,\n      replyData: {\n        toUserNickname: '',\n        toMessage: ''\n      },\n      messageList: [],\n      idleItemInfo: {\n        id: '',\n        idleName: '',\n        idleDetails: '',\n        pictureList: [],\n        idlePrice: 0,\n        idlePlace: '',\n        idleLabel: '',\n        idleStatus: -1,\n        userId: '',\n        user: {\n          avatar: '',\n          nickname: '',\n          signInTime: ''\n        }\n      },\n      editingIdleItem: null,\n      isMaster: false,\n      isFavorite: true,\n      favoriteId: 0,\n      imageLoading: true,\n      loadedImages: 0,\n      totalImages: 0,\n      exchangeDialogVisible: false,\n      exchangeForm: {\n        requestItemId: '',\n        offerItemId: '',\n        itemOwnerId: '',\n        exchangeReason: ''\n      },\n      exchangeRules: {\n        offerItemId: [{\n          required: true,\n          message: '请选择您提供交换的物品',\n          trigger: 'change'\n        }],\n        exchangeReason: [{\n          required: true,\n          message: '请输入交换理由',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 200,\n          message: '长度在 5 到 200 个字符',\n          trigger: 'blur'\n        }]\n      },\n      submitLoading: false,\n      myItems: [],\n      selectedMyItem: null,\n      exchangeRequestsDialogVisible: false,\n      activeRequestTab: 'received',\n      receivedRequests: [],\n      sentRequests: [],\n      requestsLoading: false,\n      // 捐赠相关数据\n      donationDialogVisible: false,\n      donationForm: {\n        itemId: '',\n        donationType: 0,\n        donationReason: ''\n      },\n      donationRules: {\n        donationType: [{\n          required: true,\n          message: '请选择捐赠类型',\n          trigger: 'change'\n        }],\n        donationReason: [{\n          required: true,\n          message: '请输入捐赠理由',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 200,\n          message: '长度在 5 到 200 个字符',\n          trigger: 'blur'\n        }]\n      },\n      reportDialogVisible: false\n    };\n  },\n  computed: {\n    processedPictureList: function processedPictureList() {\n      if (!this.idleItemInfo.pictureList) return [];\n      if (typeof this.idleItemInfo.pictureList === 'string') {\n        try {\n          return JSON.parse(this.idleItemInfo.pictureList);\n        } catch (e) {\n          console.error('解析图片列表失败:', e);\n          return [];\n        }\n      }\n      return Array.isArray(this.idleItemInfo.pictureList) ? this.idleItemInfo.pictureList : [this.idleItemInfo.pictureList];\n    },\n    fileList: function fileList() {\n      var _this = this;\n      return this.processedPictureList.map(function (img) {\n        return {\n          name: img,\n          url: _this.getImageUrl(img)\n        };\n      });\n    },\n    selectedMyItem: function selectedMyItem() {\n      var _this2 = this;\n      return this.myItems.find(function (item) {\n        return item.id === _this2.exchangeForm.offerItemId;\n      });\n    }\n  },\n  created: function created() {\n    this.getMyIdleById();\n  },\n  methods: {\n    getMyIdleById: function getMyIdleById() {\n      var _this3 = this;\n      this.imageLoading = true;\n      var id = this.$route.query.id;\n      this.$api.getIdleItem({\n        id: id\n      }).then(function (res) {\n        console.log('商品详情原始数据:', res);\n        if (res.data) {\n          // 处理商品详情的换行\n          var list = res.data.idleDetails.split(/\\r?\\n/);\n          var str = '';\n          for (var i = 0; i < list.length; i++) {\n            str += list[i];\n          }\n          res.data.idleDetails = str;\n\n          // 处理图片列表\n          try {\n            if (typeof res.data.pictureList === 'string') {\n              var pictureList = JSON.parse(res.data.pictureList);\n              res.data.pictureList = Array.isArray(pictureList) ? pictureList : [pictureList];\n            }\n            console.log('处理后的图片列表:', res.data.pictureList);\n          } catch (e) {\n            console.error('解析图片列表失败:', e);\n            res.data.pictureList = [];\n          }\n          _this3.idleItemInfo = res.data;\n          _this3.totalImages = _this3.processedPictureList.length;\n          _this3.loadedImages = 0;\n\n          // 预加载图片\n          _this3.processedPictureList.forEach(function (imgUrl) {\n            var img = new Image();\n            img.onload = function () {\n              _this3.loadedImages++;\n              if (_this3.loadedImages >= _this3.totalImages) {\n                _this3.imageLoading = false;\n              }\n            };\n            img.onerror = function (e) {\n              console.error('图片预加载失败:', imgUrl, e);\n              _this3.loadedImages++;\n              if (_this3.loadedImages >= _this3.totalImages) {\n                _this3.imageLoading = false;\n              }\n            };\n            img.src = _this3.getImageUrl(imgUrl);\n          });\n          var userId = _this3.getCookie('shUserId');\n          if (userId == _this3.idleItemInfo.userId) {\n            _this3.isMaster = true;\n          }\n          _this3.checkFavorite();\n          _this3.checkMyIdle();\n          _this3.getAllIdleMessage();\n        }\n      }).catch(function (error) {\n        console.error('获取商品详情失败:', error);\n        _this3.$message.error('获取商品详情失败，请重试');\n        _this3.imageLoading = false;\n      });\n    },\n    saveChanges: function saveChanges(idleItemInfo) {\n      var _this4 = this;\n      var updatedInfo = _objectSpread(_objectSpread({}, idleItemInfo), {}, {\n        pictureList: JSON.stringify(this.idleItemInfo.pictureList)\n      });\n      // 这里添加调用API更新商品信息的逻辑\n      this.$api.updateIdleItem(updatedInfo).then(function () {\n        // this.getMyIdleById();\n        _this4.$message.success('商品信息更新成功');\n        _this4.isEditing = false; // 保存后关闭编辑模式\n        _this4.buttonText = '编辑商品';\n      }).catch(function () {\n        _this4.$message.error('更新失败，请重试');\n      });\n    },\n    imgChange: function imgChange(file, fileList) {\n      this.noneBtnImg = fileList.length >= this.limitCountImg;\n    },\n    fileHandleRemove: function fileHandleRemove(file, fileList) {\n      console.log(file, fileList);\n      // 修改：现在需要找到对应的本地路径\n      var urlToRemove = file.localPath || file.url;\n      // 在pictureList中查找对应项\n      var index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n      console.log(this);\n      if (index > -1) {\n        // 找到了匹配的项，从idleItemInfo.pictureList中移除\n        this.idleItemInfo.pictureList.splice(index, 1);\n        this.$forceUpdate();\n      } else {\n        console.warn('Path not found in the list to remove.');\n      }\n    },\n    fileHandlePreview: function fileHandlePreview(file) {\n      console.log(file);\n      // 修改：如果response.data是对象，则使用accessUrl\n      if (file.response && file.response.data) {\n        var fileData = file.response.data;\n        this.dialogImageUrl = fileData.accessUrl || fileData;\n      } else {\n        this.dialogImageUrl = file.url;\n      }\n      this.imgDialogVisible = true;\n    },\n    fileHandleSuccess: function fileHandleSuccess(response, file, fileList) {\n      console.log(\"file:\", response, file, fileList);\n      // 修改：现在response.data是一个包含localPath和accessUrl的对象\n      var fileData = response.data;\n      // 将本地路径添加到pictureList\n      this.idleItemInfo.pictureList.push(fileData.localPath);\n      // 但在界面展示时使用accessUrl\n      file.url = fileData.accessUrl;\n      file.localPath = fileData.localPath; // 保存本地路径便于后续操作\n    },\n    editButton: function editButton() {\n      this.isEditing = !this.isEditing;\n      this.buttonText = '保存修改';\n    },\n    getAllIdleMessage: function getAllIdleMessage() {\n      var _this5 = this;\n      this.$api.getAllIdleMessage({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        console.log('getAllIdleMessage', res.data);\n        if (res.status_code === 1) {\n          _this5.messageList = res.data;\n        }\n      }).catch(function () {});\n    },\n    checkFavorite: function checkFavorite() {\n      var _this6 = this;\n      this.$api.checkFavorite({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (!res.data) {\n          _this6.isFavorite = false;\n        } else {\n          _this6.favoriteId = res.data;\n        }\n      });\n    },\n    checkMyIdle: function checkMyIdle() {\n      var _this7 = this;\n      this.$api.checkMyIdle({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (res.data) {\n          _this7.isMaster = true;\n        } else {\n          _this7.isMaster = false;\n        }\n      });\n    },\n    getCookie: function getCookie(cname) {\n      var name = cname + \"=\";\n      var ca = document.cookie.split(';');\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i].trim();\n        if (c.indexOf(name) === 0) return c.substring(name.length, c.length);\n      }\n      return \"\";\n    },\n    replyMessage: function replyMessage(index) {\n      $('html,body').animate({\n        scrollTop: $(\"#replyMessageLocation\").offset().top - 600\n      }, {\n        duration: 500,\n        easing: \"swing\"\n      });\n      this.isReply = true;\n      this.replyData.toUserNickname = this.messageList[index].fromU.nickname;\n      this.replyData.toMessage = this.messageList[index].content.substring(0, 10) + (this.messageList[index].content.length > 10 ? '...' : '');\n      this.toUser = this.messageList[index].userId;\n      this.toMessage = this.messageList[index].id;\n    },\n    changeStatus: function changeStatus(idle, status) {\n      var _this8 = this;\n      this.$api.updateIdleItem({\n        id: idle.id,\n        idleStatus: status\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this8.idleItemInfo.idleStatus = status;\n        } else {\n          _this8.$message.error(res.msg);\n        }\n      });\n    },\n    buyButton: function buyButton(idleItemInfo) {\n      var _this9 = this;\n      this.$api.addOrder({\n        idleId: idleItemInfo.id,\n        orderPrice: idleItemInfo.idlePrice\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this9.$router.push({\n            path: '/order',\n            query: {\n              id: res.data.id\n            }\n          });\n        } else {\n          _this9.$message.error(res.msg);\n        }\n      }).catch(function (e) {});\n    },\n    favoriteButton: function favoriteButton(idleItemInfo) {\n      var _this10 = this;\n      if (this.isFavorite) {\n        this.$api.deleteFavorite({\n          id: this.favoriteId\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this10.$message({\n              message: '已取消收藏！',\n              type: 'success'\n            });\n            _this10.isFavorite = false;\n          } else {\n            _this10.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      } else {\n        this.$api.addFavorite({\n          idleId: idleItemInfo.id\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this10.$message({\n              message: '已加入收藏！',\n              type: 'success'\n            });\n            _this10.isFavorite = true;\n            _this10.favoriteId = res.data;\n          } else {\n            _this10.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      }\n    },\n    cancelReply: function cancelReply() {\n      this.isReply = false;\n      this.toUser = this.idleItemInfo.userId;\n      this.toMessage = null;\n      this.replyData.toUserNickname = '';\n      this.replyData.toMessage = '';\n    },\n    sendMessage: function sendMessage() {\n      var _this11 = this;\n      var content = this.messageContent.trim();\n      if (this.toUser == null) {\n        this.toUser = this.idleItemInfo.userId;\n      }\n      if (content) {\n        var contentList = content.split(/\\r?\\n/);\n        var contenHtml = contentList[0];\n        for (var i = 1; i < contentList.length; i++) {\n          contenHtml += '<br>' + contentList[i];\n        }\n        this.$api.sendMessage({\n          idleId: this.idleItemInfo.id,\n          content: contenHtml,\n          toUser: this.toUser,\n          toMessage: this.toMessage\n        }).then(function (res) {\n          if (res.status_code === 1) {\n            _this11.$message({\n              message: '留言成功！',\n              type: 'success'\n            });\n            _this11.messageContent = '';\n            _this11.cancelReply();\n            _this11.getAllIdleMessage();\n          } else {\n            _this11.$message.error(\"留言失败！\" + res.msg);\n          }\n        }).catch(function () {\n          _this11.$message.error(\"留言失败！\");\n        });\n      } else {\n        this.$message.error(\"留言为空！\");\n      }\n    },\n    getImageUrl: function getImageUrl(url) {\n      // 检查url是否已经是HTTP URL\n      if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n        return url;\n      }\n\n      // 检查url是否是一个本地文件路径\n      if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n        // 如果是本地路径，则转换为服务器URL\n        // 这里假设文件名是路径最后的部分\n        var fileName = url.split(/[/\\\\]/).pop();\n        // 构建访问URL\n        return \"http://localhost:8082/image?imageName=\".concat(fileName);\n      }\n\n      // 如果是简单的文件名，直接构建访问URL\n      if (url && url.trim() !== '') {\n        return \"http://localhost:8082/image?imageName=\".concat(url);\n      }\n\n      // 其他情况直接返回\n      return url;\n    },\n    handleImageLoad: function handleImageLoad() {\n      this.loadedImages++;\n      if (this.loadedImages >= this.totalImages) {\n        this.imageLoading = false;\n      }\n    },\n    handleImageError: function handleImageError(e) {\n      console.error('图片加载失败:', e);\n      this.loadedImages++;\n      if (this.loadedImages >= this.totalImages) {\n        this.imageLoading = false;\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isImage = file.type.startsWith('image/');\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error('只能上传图片文件!');\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error('图片大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    },\n    exchangeButton: function exchangeButton(idleItemInfo) {\n      // 设置表单初始值\n      this.exchangeForm.requestItemId = idleItemInfo.id;\n      this.exchangeForm.itemOwnerId = idleItemInfo.userId;\n\n      // 加载我的可交换物品\n      this.loadMyItems();\n\n      // 显示对话框\n      this.exchangeDialogVisible = true;\n    },\n    loadMyItems: function loadMyItems() {\n      var _this12 = this;\n      this.$api.checkMyIdle().then(function (res) {\n        if (res.data) {\n          // 过滤出在售状态的物品\n          _this12.myItems = res.data.filter(function (item) {\n            return item.idleStatus === 1;\n          });\n        }\n      }).catch(function (err) {\n        console.error('获取我的物品失败', err);\n        _this12.$message.error('获取我的物品失败');\n      });\n    },\n    submitExchangeRequest: function submitExchangeRequest() {\n      var _this13 = this;\n      this.$refs.exchangeForm.validate(function (valid) {\n        if (valid) {\n          _this13.submitLoading = true;\n          _this13.$api.createExchangeRequest({\n            requestItemId: _this13.exchangeForm.requestItemId,\n            offerItemId: _this13.exchangeForm.offerItemId,\n            itemOwnerId: _this13.exchangeForm.itemOwnerId,\n            exchangeReason: _this13.exchangeForm.exchangeReason\n          }).then(function (res) {\n            if (res.status_code === 1) {\n              _this13.$message.success('交换请求已发送');\n              _this13.exchangeDialogVisible = false;\n\n              // 清空表单\n              _this13.exchangeForm.offerItemId = '';\n              _this13.exchangeForm.exchangeReason = '';\n            } else {\n              _this13.$message.error(res.msg || '发送交换请求失败');\n            }\n          }).catch(function (err) {\n            console.error('发送交换请求失败', err);\n            _this13.$message.error('发送交换请求失败');\n          }).finally(function () {\n            _this13.submitLoading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    viewReceivedRequests: function viewReceivedRequests() {\n      this.exchangeRequestsDialogVisible = true;\n      this.loadExchangeRequests();\n    },\n    loadExchangeRequests: function loadExchangeRequests() {\n      var _this14 = this;\n      this.requestsLoading = true;\n\n      // 加载收到的请求\n      this.$api.getReceivedExchangeRequests().then(function (res) {\n        if (res.data) {\n          _this14.receivedRequests = res.data;\n        } else {\n          _this14.receivedRequests = [];\n        }\n      }).catch(function (err) {\n        console.error('获取收到的交换请求失败', err);\n        _this14.$message.error('获取收到的交换请求失败');\n      });\n\n      // 加载发送的请求\n      this.$api.getMyExchangeRequests().then(function (res) {\n        if (res.data) {\n          _this14.sentRequests = res.data;\n        } else {\n          _this14.sentRequests = [];\n        }\n      }).catch(function (err) {\n        console.error('获取发送的交换请求失败', err);\n        _this14.$message.error('获取发送的交换请求失败');\n      }).finally(function () {\n        _this14.requestsLoading = false;\n      });\n    },\n    getStatusTag: function getStatusTag(status) {\n      var statusMap = {\n        0: {\n          type: 'info',\n          text: '等待审核'\n        },\n        1: {\n          type: 'success',\n          text: '已接受'\n        },\n        2: {\n          type: 'danger',\n          text: '已拒绝'\n        },\n        3: {\n          type: 'primary',\n          text: '已完成'\n        }\n      };\n      return statusMap[status] || {\n        type: 'info',\n        text: '未知状态'\n      };\n    },\n    acceptRequest: function acceptRequest(requestId) {\n      var _this15 = this;\n      this.$confirm('确定接受此交换请求吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this15.$api.acceptExchangeRequest(requestId).then(function (res) {\n          if (res.status_code === 1) {\n            _this15.$message.success('已接受交换请求');\n            _this15.loadExchangeRequests();\n          } else {\n            _this15.$message.error(res.msg || '操作失败');\n          }\n        }).catch(function (err) {\n          console.error('接受交换请求失败', err);\n          _this15.$message.error('接受交换请求失败');\n        });\n      }).catch(function () {\n        // 取消操作\n      });\n    },\n    rejectRequest: function rejectRequest(requestId) {\n      var _this16 = this;\n      this.$confirm('确定拒绝此交换请求吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this16.$api.rejectExchangeRequest(requestId).then(function (res) {\n          if (res.status_code === 1) {\n            _this16.$message.success('已拒绝交换请求');\n            _this16.loadExchangeRequests();\n          } else {\n            _this16.$message.error(res.msg || '操作失败');\n          }\n        }).catch(function (err) {\n          console.error('拒绝交换请求失败', err);\n          _this16.$message.error('拒绝交换请求失败');\n        });\n      }).catch(function () {\n        // 取消操作\n      });\n    },\n    completeExchange: function completeExchange(requestId) {\n      var _this17 = this;\n      this.$confirm('确认已完成物品交换吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this17.$api.completeExchange(requestId).then(function (res) {\n          if (res.status_code === 1) {\n            _this17.$message.success('交换已完成');\n            _this17.loadExchangeRequests();\n          } else {\n            _this17.$message.error(res.msg || '操作失败');\n          }\n        }).catch(function (err) {\n          console.error('完成交换失败', err);\n          _this17.$message.error('完成交换失败');\n        });\n      }).catch(function () {\n        // 取消操作\n      });\n    },\n    getFirstImage: function getFirstImage(pictureList) {\n      if (Array.isArray(pictureList)) {\n        return this.getImageUrl(pictureList[0]);\n      } else if (typeof pictureList === 'string') {\n        return this.getImageUrl(pictureList);\n      } else {\n        console.error('无效的图片列表格式');\n        return '';\n      }\n    },\n    // 捐赠相关方法\n    donationButton: function donationButton(idleItemInfo) {\n      this.donationForm.itemId = idleItemInfo.id;\n      this.donationDialogVisible = true;\n    },\n    submitDonationRequest: function submitDonationRequest() {\n      var _this18 = this;\n      this.$refs.donationForm.validate(function (valid) {\n        if (valid) {\n          _this18.submitLoading = true;\n          _this18.$api.createDonationRequest({\n            itemId: _this18.donationForm.itemId,\n            donationType: _this18.donationForm.donationType,\n            donationReason: _this18.donationForm.donationReason\n          }).then(function (res) {\n            if (res.status_code === 1) {\n              _this18.$message.success('捐赠请求已提交');\n              _this18.donationDialogVisible = false;\n\n              // 清空表单\n              _this18.donationForm.donationType = 0;\n              _this18.donationForm.donationReason = '';\n\n              // 更新物品状态\n              _this18.idleItemInfo.idleStatus = 2; // 捐赠中自动下架\n            } else {\n              _this18.$message.error(res.msg || '提交捐赠请求失败');\n            }\n          }).catch(function (err) {\n            console.error('提交捐赠请求失败', err);\n            _this18.$message.error('提交捐赠请求失败');\n          }).finally(function () {\n            _this18.submitLoading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 添加举报按钮点击事件\n    reportButton: function reportButton(idleItemInfo) {\n      this.reportDialogVisible = true;\n    }\n  }\n};",{"version":3,"names":["AppHead","AppBody","AppFoot","ReportForm","name","components","data","buttonText","isEditing","messageContent","toUser","toMessage","isReply","replyData","toUserNickname","messageList","idleItemInfo","id","idleName","idleDetails","pictureList","idlePrice","idlePlace","idleLabel","idleStatus","userId","user","avatar","nickname","signInTime","editingIdleItem","isMaster","isFavorite","favoriteId","imageLoading","loadedImages","totalImages","exchangeDialogVisible","exchangeForm","requestItemId","offerItemId","itemOwnerId","exchangeReason","exchangeRules","required","message","trigger","min","max","submitLoading","myItems","selectedMyItem","exchangeRequestsDialogVisible","activeRequestTab","receivedRequests","sentRequests","requestsLoading","donationDialogVisible","donationForm","itemId","donationType","donationReason","donationRules","reportDialogVisible","computed","processedPictureList","JSON","parse","e","console","error","Array","isArray","fileList","_this","map","img","url","getImageUrl","_this2","find","item","created","getMyIdleById","methods","_this3","$route","query","$api","getIdleItem","then","res","log","list","split","str","i","length","forEach","imgUrl","Image","onload","onerror","src","getCookie","checkFavorite","checkMyIdle","getAllIdleMessage","catch","$message","saveChanges","_this4","updatedInfo","_objectSpread","stringify","updateIdleItem","success","imgChange","file","noneBtnImg","limitCountImg","fileHandleRemove","urlToRemove","localPath","index","indexOf","splice","$forceUpdate","warn","fileHandlePreview","response","fileData","dialogImageUrl","accessUrl","imgDialogVisible","fileHandleSuccess","push","editButton","_this5","idleId","status_code","_this6","_this7","cname","ca","document","cookie","c","trim","substring","replyMessage","$","animate","scrollTop","offset","top","duration","easing","fromU","content","changeStatus","idle","status","_this8","msg","buyButton","_this9","addOrder","orderPrice","$router","path","favoriteButton","_this10","deleteFavorite","type","addFavorite","cancelReply","sendMessage","_this11","contentList","contenHtml","startsWith","includes","fileName","pop","concat","handleImageLoad","handleImageError","beforeUpload","isImage","isLt2M","size","exchangeButton","loadMyItems","_this12","filter","err","submitExchangeRequest","_this13","$refs","validate","valid","createExchangeRequest","finally","viewReceivedRequests","loadExchangeRequests","_this14","getReceivedExchangeRequests","getMyExchangeRequests","getStatusTag","statusMap","text","acceptRequest","requestId","_this15","$confirm","confirmButtonText","cancelButtonText","acceptExchangeRequest","rejectRequest","_this16","rejectExchangeRequest","completeExchange","_this17","getFirstImage","donationButton","submitDonationRequest","_this18","createDonationRequest","reportButton"],"sources":["src/components/page/idle-details.vue"],"sourcesContent":["<template>\n    <div>\n        <app-head></app-head>\n        <app-body>\n            <div class=\"idle-details-container\">\n                <div class=\"details-header\">\n                    <div class=\"details-header-user-info\">\n                        <el-image\n                                style=\"width: 80px; height: 80px;border-radius: 5px;\"\n                                :src=\"idleItemInfo.user.avatar\"\n                                fit=\"contain\"></el-image>\n                        <div style=\"margin-left: 10px;\">\n                            <div class=\"details-header-user-info-nickname\">{{idleItemInfo.user.nickname}}</div>\n                            <div class=\"details-header-user-info-time\">{{idleItemInfo.user.signInTime.substring(0,10)}} 加入平台</div>\n                        </div>\n                    </div>\n                    <div class=\"details-header-buy\">\n                        <div v-show=\"idleItemInfo.idlePrice !== 0\" style=\"color: red;font-size: 18px;font-weight: 600; margin-right: 10px;\">￥{{idleItemInfo.idlePrice}}</div>\n                        <div v-if=\"!isMaster&&idleItemInfo.idleStatus!==1\" style=\"color: red;font-size: 16px;\">闲置已下架或删除</div>\n                        <el-button v-show=\"idleItemInfo.idlePrice > 0\" v-if=\"!isMaster&&idleItemInfo.idleStatus===1\" type=\"danger\" plain @click=\"buyButton(idleItemInfo)\">立即购买</el-button>\n                        <el-button v-show=\"idleItemInfo.idlePrice > 0\" v-if=\"!isMaster&&idleItemInfo.idleStatus===1\" type=\"primary\" plain @click=\"favoriteButton(idleItemInfo)\">{{isFavorite?'取消收藏':'加入收藏'}}</el-button>\n                        <el-button v-if=\"!isMaster&&idleItemInfo.idleStatus===1\" type=\"warning\" plain @click=\"exchangeButton(idleItemInfo)\">发起易物交换</el-button>\n                        <el-button v-if=\"!isMaster\" type=\"info\" plain @click=\"reportButton(idleItemInfo)\">举报</el-button>\n                        <el-button\n                            v-show='idleItemInfo.idlePrice >= 0'\n                            v-if=\"isMaster&&idleItemInfo.idleStatus===1\"\n                            type='primary'\n                            plain\n                            @click=\"isEditing ? saveChanges(idleItemInfo) : editButton()\">{{ buttonText }}</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===1\" type=\"danger\" @click=\"changeStatus(idleItemInfo,2)\" plain>下架</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===2\" type=\"primary\" @click=\"changeStatus(idleItemInfo,1)\" plain>重新上架</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===1\" type=\"info\" plain @click=\"viewReceivedRequests\">查看交换请求</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===1\" type=\"success\" plain @click=\"donationButton(idleItemInfo)\">爱心捐赠</el-button>\n                    </div>\n                </div>\n\n\n                <div class=\"details-info\">\n\n                    <div v-if=\"isEditing\">\n                        <label class=\"input-label\">价格</label>\n                        <el-input v-model=\"idleItemInfo.idlePrice\" placeholder=\"请输入商品价格\"></el-input>\n                    </div>\n                    <div class=\"details-info-title\" v-if=\"isEditing\">\n                        <label class=\"input-label\">名称</label>\n                        <el-input v-model=\"idleItemInfo.idleName\" placeholder=\"请输入商品名称\"></el-input>\n                    </div>\n                    <div class=\"details-info-title\" v-else>\n                        {{idleItemInfo.idleName}}\n                    </div>\n                    <div v-if=\"isEditing\">\n                        <label class=\"input-label\">详情</label>\n                        <el-input type=\"textarea\" autosize placeholder=\"请输入商品详情...\" v-model=\"idleItemInfo.idleDetails\"></el-input>\n                    </div>\n                    <div class=\"details-info-main\" v-else v-html=\"idleItemInfo.idleDetails\"></div>\n                    <div class=\"details-picture\">\n                        <template v-if=\"isEditing\">\n                            <!-- 编辑模式下的上传控件 -->\n                            <el-upload\n                                :on-remove=\"fileHandleRemove\"\n                                :on-success=\"fileHandleSuccess\"\n                                :on-change=\"imgChange\"\n                                action=\"http://localhost:8082/file\"\n                                list-type=\"picture-card\"\n                                :file-list=\"fileList\"\n                                :before-upload=\"beforeUpload\"\n                            >\n                                <i class=\"el-icon-plus\"></i>\n                            </el-upload>\n                        </template>\n                        <template v-else>\n                            <!-- 显示模式下的图片列表 -->\n                            <div v-loading=\"imageLoading\" class=\"image-container\">\n                                <el-image\n                                    v-for=\"(imgUrl, i) in processedPictureList\"\n                                    :key=\"i\"\n                                    style=\"width: 90%; margin-bottom: 2px;\"\n                                    :src=\"getImageUrl(imgUrl)\"\n                                    fit=\"contain\"\n                                    @load=\"handleImageLoad\"\n                                    @error=\"handleImageError\"\n                                >\n                                    <div slot=\"error\" class=\"image-slot\">\n                                        <i class=\"el-icon-picture-outline\"></i>\n                                        <p>图片加载失败</p>\n                                    </div>\n                                </el-image>\n                            </div>\n                            <div v-if=\"!processedPictureList.length\" class=\"no-image\">\n                                <i class=\"el-icon-picture-outline\"></i>\n                                <p>暂无图片</p>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"message-container\" id=\"replyMessageLocation\">\n                    <div class=\"message-title\">全部留言</div>\n                    <div class=\"message-send\">\n                        <div v-if=\"isReply\" style=\"padding-bottom: 10px;\">\n                            <el-button type=\"info\" @click=\"cancelReply\">回复：{{replyData.toMessage}} @{{replyData.toUserNickname}} <i class=\"el-icon-close el-icon--right\"></i></el-button>\n                        </div>\n                        <el-input\n                                type=\"textarea\"\n                                autosize\n                                placeholder=\"留言提问...\"\n                                v-model=\"messageContent\"\n                                maxlength=\"200\"\n                                show-word-limit>\n                        </el-input>\n                        <div class=\"message-send-button\">\n                            <el-button plain @click=\"sendMessage\">发送留言</el-button>\n                        </div>\n                    </div>\n                    <div>\n                        <div v-for=\"(mes,index) in messageList\" class=\"message-container-list\">\n                            <div class=\"message-container-list-left\">\n                                <el-image\n                                        style=\"width: 55px; height: 55px;border-radius: 5px;\"\n                                        :src=\"mes.fromU.avatar\"\n                                        fit=\"contain\"></el-image>\n                                <div class=\"message-container-list-text\">\n                                    <div class=\"message-nickname\">{{mes.fromU.nickname}}\n                                        {{mes.toU.nickname?' @'+mes.toU.nickname+'：'+\n                                        mes.toM.content.substring(0,10)+\n                                        (mes.toM.content.length>10?'...':''):''}}</div>\n                                    <div class=\"message-content\" v-html=\"mes.content\"></div>\n                                    <div class=\"message-time\">{{mes.createTime}}</div>\n                                </div>\n                            </div>\n                            <div class=\"message-container-list-right\">\n                                <el-button style=\"float: right;\"  plain @click=\"replyMessage(index)\">回复</el-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <app-foot></app-foot>\n\n            <!-- 添加易物交换弹窗 -->\n            <el-dialog\n                title=\"发起易物交换\"\n                :visible.sync=\"exchangeDialogVisible\"\n                width=\"60%\">\n                <el-form :model=\"exchangeForm\" :rules=\"exchangeRules\" ref=\"exchangeForm\" label-width=\"120px\">\n                    <el-form-item label=\"交换对象物品\" prop=\"requestItemId\">\n                        <div class=\"exchange-preview-item\">\n                            <div v-if=\"idleItemInfo\">\n                                <div class=\"item-preview\">\n                                    <img :src=\"getImageUrl(processedPictureList[0])\" class=\"preview-img\">\n                                    <div class=\"item-info\">\n                                        <div class=\"item-name\">{{ idleItemInfo.idleName }}</div>\n                                        <div class=\"item-price\">¥{{ idleItemInfo.idlePrice }}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </el-form-item>\n                    \n                    <el-form-item label=\"物品所有者\">\n                        <div class=\"owner-info\" v-if=\"idleItemInfo && idleItemInfo.user\">\n                            <img :src=\"idleItemInfo.user.avatar\" class=\"owner-avatar\">\n                            <span class=\"owner-name\">{{ idleItemInfo.user.nickname }}</span>\n                        </div>\n                    </el-form-item>\n                    \n                    <el-form-item label=\"我的交换物品\" prop=\"offerItemId\">\n                        <el-select v-model=\"exchangeForm.offerItemId\" placeholder=\"选择您提供交换的物品\">\n                            <el-option\n                                v-for=\"item in myItems\"\n                                :key=\"item.id\"\n                                :label=\"item.idleName\"\n                                :value=\"item.id\">\n                                <div class=\"item-option\">\n                                    <img :src=\"getFirstImage(item.pictureList)\" class=\"item-img\">\n                                    <div class=\"item-info\">\n                                        <div class=\"item-name\">{{ item.idleName }}</div>\n                                        <div class=\"item-price\">¥{{ item.idlePrice }}</div>\n                                    </div>\n                                </div>\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                    \n                    <el-form-item label=\"交换理由\" prop=\"exchangeReason\">\n                        <el-input\n                            type=\"textarea\"\n                            :rows=\"4\"\n                            placeholder=\"请输入交换理由，向对方说明为什么想要交换这个物品\"\n                            v-model=\"exchangeForm.exchangeReason\">\n                        </el-input>\n                    </el-form-item>\n                </el-form>\n                \n                <div class=\"exchange-preview\" v-if=\"exchangeForm.offerItemId\">\n                    <h4>交换预览</h4>\n                    <el-divider></el-divider>\n                    <div class=\"exchange-preview-content\">\n                        <div class=\"preview-item\">\n                            <h4>我将获得</h4>\n                            <div class=\"item-card\" v-if=\"idleItemInfo\">\n                                <img :src=\"getImageUrl(processedPictureList[0])\" class=\"preview-img\">\n                                <div class=\"preview-info\">\n                                    <div class=\"preview-name\">{{ idleItemInfo.idleName }}</div>\n                                    <div class=\"preview-price\">¥{{ idleItemInfo.idlePrice }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"exchange-arrow\">\n                            <i class=\"el-icon-right\"></i>\n                        </div>\n                        <div class=\"preview-item\">\n                            <h4>我将付出</h4>\n                            <div class=\"item-card\" v-if=\"selectedMyItem\">\n                                <img :src=\"getFirstImage(selectedMyItem.pictureList)\" class=\"preview-img\">\n                                <div class=\"preview-info\">\n                                    <div class=\"preview-name\">{{ selectedMyItem.idleName }}</div>\n                                    <div class=\"preview-price\">¥{{ selectedMyItem.idlePrice }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"exchangeDialogVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"submitExchangeRequest\" :loading=\"submitLoading\">提交交换请求</el-button>\n                </span>\n            </el-dialog>\n            \n            <!-- 添加查看交换请求弹窗 -->\n            <el-dialog\n                title=\"交换请求管理\"\n                :visible.sync=\"exchangeRequestsDialogVisible\"\n                width=\"70%\">\n                <el-tabs v-model=\"activeRequestTab\">\n                    <el-tab-pane label=\"收到的请求\" name=\"received\">\n                        <div v-loading=\"requestsLoading\">\n                            <div v-if=\"receivedRequests.length === 0\" class=\"empty-requests\">\n                                <i class=\"el-icon-info\"></i>\n                                <p>暂无收到的交换请求</p>\n                            </div>\n                            <el-card v-for=\"request in receivedRequests\" :key=\"request.id\" class=\"request-card\">\n                                <div class=\"request-header\">\n                                    <div class=\"request-user\">\n                                        <img :src=\"request.requestUser.avatar\" class=\"user-avatar\">\n                                        <span>{{ request.requestUser.nickname }}</span>\n                                    </div>\n                                    <div class=\"request-time\">{{ request.createTime }}</div>\n                                </div>\n                                <div class=\"request-content\">\n                                    <div class=\"exchange-items\">\n                                        <div class=\"item-card\">\n                                            <div class=\"item-title\">对方想要的物品</div>\n                                            <img :src=\"getFirstImage(request.requestItem.pictureList)\" class=\"item-img\">\n                                            <div class=\"item-info\">\n                                                <div class=\"item-name\">{{ request.requestItem.idleName }}</div>\n                                                <div class=\"item-price\">¥{{ request.requestItem.idlePrice }}</div>\n                                            </div>\n                                        </div>\n                                        <div class=\"exchange-arrow\">\n                                            <i class=\"el-icon-right\"></i>\n                                        </div>\n                                        <div class=\"item-card\">\n                                            <div class=\"item-title\">对方提供的物品</div>\n                                            <img :src=\"getFirstImage(request.offerItem.pictureList)\" class=\"item-img\">\n                                            <div class=\"item-info\">\n                                                <div class=\"item-name\">{{ request.offerItem.idleName }}</div>\n                                                <div class=\"item-price\">¥{{ request.offerItem.idlePrice }}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"request-reason\">\n                                        <div class=\"reason-title\">交换理由:</div>\n                                        <div class=\"reason-content\">{{ request.exchangeReason }}</div>\n                                    </div>\n                                </div>\n                                <div class=\"request-actions\">\n                                    <el-tag :type=\"getStatusTag(request.status).type\">{{ getStatusTag(request.status).text }}</el-tag>\n                                    <div class=\"action-buttons\" v-if=\"request.status === 0\">\n                                        <el-button type=\"success\" size=\"small\" @click=\"acceptRequest(request.id)\">接受</el-button>\n                                        <el-button type=\"danger\" size=\"small\" @click=\"rejectRequest(request.id)\">拒绝</el-button>\n                                    </div>\n                                    <div class=\"action-buttons\" v-if=\"request.status === 1\">\n                                        <el-button type=\"primary\" size=\"small\" @click=\"completeExchange(request.id)\">完成交换</el-button>\n                                    </div>\n                                </div>\n                            </el-card>\n                        </div>\n                    </el-tab-pane>\n                    <el-tab-pane label=\"我发送的请求\" name=\"sent\">\n                        <div v-loading=\"requestsLoading\">\n                            <div v-if=\"sentRequests.length === 0\" class=\"empty-requests\">\n                                <i class=\"el-icon-info\"></i>\n                                <p>暂无发送的交换请求</p>\n                            </div>\n                            <el-card v-for=\"request in sentRequests\" :key=\"request.id\" class=\"request-card\">\n                                <div class=\"request-header\">\n                                    <div class=\"request-user\">\n                                        <img :src=\"request.itemOwner.avatar\" class=\"user-avatar\">\n                                        <span>发送给: {{ request.itemOwner.nickname }}</span>\n                                    </div>\n                                    <div class=\"request-time\">{{ request.createTime }}</div>\n                                </div>\n                                <div class=\"request-content\">\n                                    <div class=\"exchange-items\">\n                                        <div class=\"item-card\">\n                                            <div class=\"item-title\">我想要的物品</div>\n                                            <img :src=\"getFirstImage(request.requestItem.pictureList)\" class=\"item-img\">\n                                            <div class=\"item-info\">\n                                                <div class=\"item-name\">{{ request.requestItem.idleName }}</div>\n                                                <div class=\"item-price\">¥{{ request.requestItem.idlePrice }}</div>\n                                            </div>\n                                        </div>\n                                        <div class=\"exchange-arrow\">\n                                            <i class=\"el-icon-right\"></i>\n                                        </div>\n                                        <div class=\"item-card\">\n                                            <div class=\"item-title\">我提供的物品</div>\n                                            <img :src=\"getFirstImage(request.offerItem.pictureList)\" class=\"item-img\">\n                                            <div class=\"item-info\">\n                                                <div class=\"item-name\">{{ request.offerItem.idleName }}</div>\n                                                <div class=\"item-price\">¥{{ request.offerItem.idlePrice }}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"request-reason\">\n                                        <div class=\"reason-title\">交换理由:</div>\n                                        <div class=\"reason-content\">{{ request.exchangeReason }}</div>\n                                    </div>\n                                </div>\n                                <div class=\"request-actions\">\n                                    <el-tag :type=\"getStatusTag(request.status).type\">{{ getStatusTag(request.status).text }}</el-tag>\n                                </div>\n                            </el-card>\n                        </div>\n                    </el-tab-pane>\n                </el-tabs>\n            </el-dialog>\n\n            <!-- 添加捐赠弹窗 -->\n            <el-dialog\n                title=\"爱心捐赠\"\n                :visible.sync=\"donationDialogVisible\"\n                width=\"50%\">\n                <el-form :model=\"donationForm\" :rules=\"donationRules\" ref=\"donationForm\" label-width=\"120px\">\n                    <el-form-item label=\"捐赠物品\" prop=\"itemId\">\n                        <div class=\"donation-preview-item\">\n                            <div v-if=\"idleItemInfo\">\n                                <div class=\"item-preview\">\n                                    <img :src=\"getImageUrl(processedPictureList[0])\" class=\"preview-img\">\n                                    <div class=\"item-info\">\n                                        <div class=\"item-name\">{{ idleItemInfo.idleName }}</div>\n                                        <div class=\"item-price\">¥{{ idleItemInfo.idlePrice }}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </el-form-item>\n                    \n                    <el-form-item label=\"捐赠类型\" prop=\"donationType\">\n                        <el-radio-group v-model=\"donationForm.donationType\">\n                            <el-radio :label=\"0\">公益捐赠</el-radio>\n                            <el-radio :label=\"1\">环保回收</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    \n                    <el-form-item label=\"捐赠理由\" prop=\"donationReason\">\n                        <el-input\n                            type=\"textarea\"\n                            :rows=\"4\"\n                            placeholder=\"请输入捐赠理由，说明为什么想要捐赠这个物品\"\n                            v-model=\"donationForm.donationReason\">\n                        </el-input>\n                    </el-form-item>\n                </el-form>\n                \n                <div class=\"donation-notes\">\n                    <p><i class=\"el-icon-info\"></i> 捐赠说明：</p>\n                    <p>1. 公益捐赠：您的物品将捐赠给有需要的人或公益组织</p>\n                    <p>2. 环保回收：闲置物品将被环保回收，减少资源浪费</p>\n                    <p>3. 捐赠成功后，物品将自动下架</p>\n                    <p>4. 捐赠后可能有工作人员与您联系，请保持联系方式畅通</p>\n                </div>\n                \n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"donationDialogVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"submitDonationRequest\" :loading=\"submitLoading\">提交捐赠</el-button>\n                </span>\n            </el-dialog>\n\n            <!-- 添加举报弹窗 -->\n            <el-dialog\n                title=\"举报\"\n                :visible.sync=\"reportDialogVisible\"\n                width=\"50%\">\n                <report-form \n                    :reported-user-id=\"idleItemInfo.userId\"\n                    :reported-item-id=\"idleItemInfo.id\"\n                    @report-submitted=\"reportDialogVisible = false\"\n                    @cancel=\"reportDialogVisible = false\">\n                </report-form>\n            </el-dialog>\n        </app-body>\n    </div>\n</template>\n\n<script>\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n    import ReportForm from '../common/ReportForm.vue';\n\n    export default {\n        name: \"idle-details\",\n        components: {\n            AppHead,\n            AppBody,\n            AppFoot,\n            ReportForm\n        },\n        data() {\n            return {\n                buttonText:'编辑',\n                isEditing:false,\n                messageContent:'',\n                toUser:null,\n                toMessage:null,\n                isReply:false,\n                replyData:{\n                    toUserNickname:'',\n                    toMessage:''\n                },\n                messageList:[],\n                idleItemInfo:{\n                    id:'',\n                    idleName:'',\n                    idleDetails:'',\n                    pictureList:[],\n                    idlePrice:0,\n                    idlePlace:'',\n                    idleLabel:'',\n                    idleStatus:-1,\n                    userId:'',\n                    user:{\n                        avatar:'',\n                        nickname:'',\n                        signInTime:''\n                    },\n                },\n                editingIdleItem:null,\n                isMaster:false,\n                isFavorite:true,\n                favoriteId:0,\n                imageLoading: true,\n                loadedImages: 0,\n                totalImages: 0,\n                exchangeDialogVisible: false,\n                exchangeForm: {\n                    requestItemId: '',\n                    offerItemId: '',\n                    itemOwnerId: '',\n                    exchangeReason: ''\n                },\n                exchangeRules: {\n                    offerItemId: [\n                        { required: true, message: '请选择您提供交换的物品', trigger: 'change' }\n                    ],\n                    exchangeReason: [\n                        { required: true, message: '请输入交换理由', trigger: 'blur' },\n                        { min: 5, max: 200, message: '长度在 5 到 200 个字符', trigger: 'blur' }\n                    ]\n                },\n                submitLoading: false,\n                myItems: [],\n                selectedMyItem: null,\n                exchangeRequestsDialogVisible: false,\n                activeRequestTab: 'received',\n                receivedRequests: [],\n                sentRequests: [],\n                requestsLoading: false,\n                // 捐赠相关数据\n                donationDialogVisible: false,\n                donationForm: {\n                    itemId: '',\n                    donationType: 0,\n                    donationReason: ''\n                },\n                donationRules: {\n                    donationType: [\n                        { required: true, message: '请选择捐赠类型', trigger: 'change' }\n                    ],\n                    donationReason: [\n                        { required: true, message: '请输入捐赠理由', trigger: 'blur' },\n                        { min: 5, max: 200, message: '长度在 5 到 200 个字符', trigger: 'blur' }\n                    ]\n                },\n                reportDialogVisible: false\n            };\n        },\n        computed: {\n            processedPictureList() {\n                if (!this.idleItemInfo.pictureList) return [];\n                if (typeof this.idleItemInfo.pictureList === 'string') {\n                    try {\n                        return JSON.parse(this.idleItemInfo.pictureList);\n                    } catch (e) {\n                        console.error('解析图片列表失败:', e);\n                        return [];\n                    }\n                }\n                return Array.isArray(this.idleItemInfo.pictureList) \n                    ? this.idleItemInfo.pictureList \n                    : [this.idleItemInfo.pictureList];\n            },\n            fileList() {\n                return this.processedPictureList.map(img => ({\n                    name: img,\n                    url: this.getImageUrl(img)\n                }));\n            },\n            selectedMyItem() {\n                return this.myItems.find(item => item.id === this.exchangeForm.offerItemId);\n            }\n        },\n        created(){\n            this.getMyIdleById();\n        },\n        methods: {\n            getMyIdleById(){\n                this.imageLoading = true;\n                let id = this.$route.query.id;\n                this.$api.getIdleItem({\n                    id: id\n                }).then(res => {\n                    console.log('商品详情原始数据:', res);\n                    if (res.data) {\n                        // 处理商品详情的换行\n                        let list = res.data.idleDetails.split(/\\r?\\n/);\n                        let str = '';\n                        for (let i = 0; i < list.length; i++) {\n                            str += list[i];\n                        }\n                        res.data.idleDetails = str;\n\n                        // 处理图片列表\n                        try {\n                            if (typeof res.data.pictureList === 'string') {\n                                const pictureList = JSON.parse(res.data.pictureList);\n                                res.data.pictureList = Array.isArray(pictureList) ? pictureList : [pictureList];\n                            }\n                            console.log('处理后的图片列表:', res.data.pictureList);\n                        } catch (e) {\n                            console.error('解析图片列表失败:', e);\n                            res.data.pictureList = [];\n                        }\n\n                        this.idleItemInfo = res.data;\n                        this.totalImages = this.processedPictureList.length;\n                        this.loadedImages = 0;\n\n                        // 预加载图片\n                        this.processedPictureList.forEach(imgUrl => {\n                            const img = new Image();\n                            img.onload = () => {\n                                this.loadedImages++;\n                                if (this.loadedImages >= this.totalImages) {\n                                    this.imageLoading = false;\n                                }\n                            };\n                            img.onerror = (e) => {\n                                console.error('图片预加载失败:', imgUrl, e);\n                                this.loadedImages++;\n                                if (this.loadedImages >= this.totalImages) {\n                                    this.imageLoading = false;\n                                }\n                            };\n                            img.src = this.getImageUrl(imgUrl);\n                        });\n\n                        let userId = this.getCookie('shUserId');\n                        if (userId == this.idleItemInfo.userId) {\n                            this.isMaster = true;\n                        }\n                        this.checkFavorite();\n                        this.checkMyIdle();\n                        this.getAllIdleMessage();\n                    }\n                }).catch(error => {\n                    console.error('获取商品详情失败:', error);\n                    this.$message.error('获取商品详情失败，请重试');\n                    this.imageLoading = false;\n                });\n            },\n            saveChanges(idleItemInfo) {\n                const updatedInfo = {\n                    ...idleItemInfo,\n                    pictureList: JSON.stringify(this.idleItemInfo.pictureList),\n                };\n                // 这里添加调用API更新商品信息的逻辑\n                this.$api.updateIdleItem(updatedInfo).then(() => {\n                    // this.getMyIdleById();\n                    this.$message.success('商品信息更新成功');\n                    this.isEditing = false; // 保存后关闭编辑模式\n                    this.buttonText = '编辑商品'\n                }).catch(() => {\n                    this.$message.error('更新失败，请重试');\n                });\n            },\n            imgChange(file, fileList){\n                this.noneBtnImg = fileList.length >= this.limitCountImg;\n            },\n            fileHandleRemove(file,fileList) {\n                console.log(file, fileList);\n                // 修改：现在需要找到对应的本地路径\n                const urlToRemove = file.localPath || file.url; \n                // 在pictureList中查找对应项\n                const index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n                console.log(this)\n\n                if (index > -1) {\n                    // 找到了匹配的项，从idleItemInfo.pictureList中移除\n                    this.idleItemInfo.pictureList.splice(index, 1);\n                    this.$forceUpdate();\n                } else {\n                    console.warn('Path not found in the list to remove.');\n                }\n            },\n            fileHandlePreview(file) {\n                console.log(file);\n                // 修改：如果response.data是对象，则使用accessUrl\n                if(file.response && file.response.data) {\n                    const fileData = file.response.data;\n                    this.dialogImageUrl = fileData.accessUrl || fileData;\n                } else {\n                    this.dialogImageUrl = file.url;\n                }\n                this.imgDialogVisible=true;\n            },\n            fileHandleSuccess(response, file, fileList) {\n                console.log(\"file:\", response, file, fileList);\n                // 修改：现在response.data是一个包含localPath和accessUrl的对象\n                const fileData = response.data;\n                // 将本地路径添加到pictureList\n                this.idleItemInfo.pictureList.push(fileData.localPath);\n                // 但在界面展示时使用accessUrl\n                file.url = fileData.accessUrl;\n                file.localPath = fileData.localPath; // 保存本地路径便于后续操作\n            },\n            editButton(){\n                this.isEditing = !this.isEditing;\n                this.buttonText = '保存修改'\n            },\n            getAllIdleMessage(){\n                this.$api.getAllIdleMessage({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    console.log('getAllIdleMessage',res.data);\n                    if(res.status_code===1){\n                        this.messageList=res.data;\n                    }\n                }).catch(()=>{\n                })\n            },\n            checkFavorite(){\n                this.$api.checkFavorite({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if(!res.data){\n                        this.isFavorite=false;\n                    }else {\n                        this.favoriteId=res.data;\n                    }\n                })\n            },\n            checkMyIdle(){\n                this.$api.checkMyIdle({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if (res.data){\n                        this.isMaster = true;\n                    }else {\n                        this.isMaster = false;\n                    }\n                })\n            },\n            getCookie(cname){\n                var name = cname + \"=\";\n                var ca = document.cookie.split(';');\n                for(var i=0; i<ca.length; i++)\n                {\n                    var c = ca[i].trim();\n                    if (c.indexOf(name)===0) return c.substring(name.length,c.length);\n                }\n                return \"\";\n            },\n            replyMessage(index){\n                $('html,body').animate({\n                    scrollTop: $(\"#replyMessageLocation\").offset().top-600\n                }, {duration: 500, easing: \"swing\"});\n                this.isReply=true;\n                this.replyData.toUserNickname=this.messageList[index].fromU.nickname;\n                this.replyData.toMessage=this.messageList[index].content.substring(0,10)+(this.messageList[index].content.length>10?'...':'');\n                this.toUser=this.messageList[index].userId;\n                this.toMessage=this.messageList[index].id;\n            },\n            changeStatus(idle,status){\n                this.$api.updateIdleItem({\n                    id:idle.id,\n                    idleStatus:status\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.idleItemInfo.idleStatus=status;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                });\n            },\n            buyButton(idleItemInfo){\n                this.$api.addOrder({\n                    idleId:idleItemInfo.id,\n                    orderPrice:idleItemInfo.idlePrice,\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.$router.push({path: '/order', query: {id: res.data.id}});\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e=>{\n\n                })\n            },\n            favoriteButton(idleItemInfo){\n                if(this.isFavorite){\n                    this.$api.deleteFavorite({\n                        id: this.favoriteId\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已取消收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=false;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }else {\n                    this.$api.addFavorite({\n                        idleId:idleItemInfo.id\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已加入收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=true;\n                            this.favoriteId=res.data;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }\n            },\n            cancelReply(){\n                this.isReply=false;\n                this.toUser=this.idleItemInfo.userId;\n                this.toMessage=null;\n                this.replyData.toUserNickname='';\n                this.replyData.toMessage='';\n            },\n\n            sendMessage(){\n                let content=this.messageContent.trim();\n                if(this.toUser==null){\n                    this.toUser=this.idleItemInfo.userId;\n                }\n                if(content){\n                    let contentList=content.split(/\\r?\\n/);\n                    let contenHtml=contentList[0];\n                    for(let i=1;i<contentList.length;i++){\n                        contenHtml+='<br>'+contentList[i];\n                    }\n                    this.$api.sendMessage({\n                        idleId:this.idleItemInfo.id,\n                        content:contenHtml,\n                        toUser:this.toUser,\n                        toMessage:this.toMessage\n                    }).then(res=>{\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '留言成功！',\n                                type: 'success'\n                            });\n                            this.messageContent='';\n                            this.cancelReply();\n                            this.getAllIdleMessage();\n                        }else {\n                            this.$message.error(\"留言失败！\"+res.msg);\n                        }\n                    }).catch(()=>{\n                        this.$message.error(\"留言失败！\");\n                    });\n\n                }else{\n                    this.$message.error(\"留言为空！\");\n                }\n            },\n            getImageUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    return url;\n                }\n                \n                // 检查url是否是一个本地文件路径\n                if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n                    // 如果是本地路径，则转换为服务器URL\n                    // 这里假设文件名是路径最后的部分\n                    const fileName = url.split(/[/\\\\]/).pop();\n                    // 构建访问URL\n                    return `http://localhost:8082/image?imageName=${fileName}`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况直接返回\n                return url;\n            },\n            handleImageLoad() {\n                this.loadedImages++;\n                if (this.loadedImages >= this.totalImages) {\n                    this.imageLoading = false;\n                }\n            },\n            handleImageError(e) {\n                console.error('图片加载失败:', e);\n                this.loadedImages++;\n                if (this.loadedImages >= this.totalImages) {\n                    this.imageLoading = false;\n                }\n            },\n            beforeUpload(file) {\n                const isImage = file.type.startsWith('image/');\n                const isLt2M = file.size / 1024 / 1024 < 2;\n\n                if (!isImage) {\n                    this.$message.error('只能上传图片文件!');\n                    return false;\n                }\n                if (!isLt2M) {\n                    this.$message.error('图片大小不能超过 2MB!');\n                    return false;\n                }\n                return true;\n            },\n            exchangeButton(idleItemInfo) {\n                // 设置表单初始值\n                this.exchangeForm.requestItemId = idleItemInfo.id;\n                this.exchangeForm.itemOwnerId = idleItemInfo.userId;\n                \n                // 加载我的可交换物品\n                this.loadMyItems();\n                \n                // 显示对话框\n                this.exchangeDialogVisible = true;\n            },\n            loadMyItems() {\n                this.$api.checkMyIdle().then(res => {\n                    if (res.data) {\n                        // 过滤出在售状态的物品\n                        this.myItems = res.data.filter(item => item.idleStatus === 1);\n                    }\n                }).catch(err => {\n                    console.error('获取我的物品失败', err);\n                    this.$message.error('获取我的物品失败');\n                });\n            },\n            submitExchangeRequest() {\n                this.$refs.exchangeForm.validate((valid) => {\n                    if (valid) {\n                        this.submitLoading = true;\n                        this.$api.createExchangeRequest({\n                            requestItemId: this.exchangeForm.requestItemId,\n                            offerItemId: this.exchangeForm.offerItemId,\n                            itemOwnerId: this.exchangeForm.itemOwnerId,\n                            exchangeReason: this.exchangeForm.exchangeReason\n                        }).then(res => {\n                            if (res.status_code === 1) {\n                                this.$message.success('交换请求已发送');\n                                this.exchangeDialogVisible = false;\n                                \n                                // 清空表单\n                                this.exchangeForm.offerItemId = '';\n                                this.exchangeForm.exchangeReason = '';\n                            } else {\n                                this.$message.error(res.msg || '发送交换请求失败');\n                            }\n                        }).catch(err => {\n                            console.error('发送交换请求失败', err);\n                            this.$message.error('发送交换请求失败');\n                        }).finally(() => {\n                            this.submitLoading = false;\n                        });\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            viewReceivedRequests() {\n                this.exchangeRequestsDialogVisible = true;\n                this.loadExchangeRequests();\n            },\n            loadExchangeRequests() {\n                this.requestsLoading = true;\n                \n                // 加载收到的请求\n                this.$api.getReceivedExchangeRequests().then(res => {\n                    if (res.data) {\n                        this.receivedRequests = res.data;\n                    } else {\n                        this.receivedRequests = [];\n                    }\n                }).catch(err => {\n                    console.error('获取收到的交换请求失败', err);\n                    this.$message.error('获取收到的交换请求失败');\n                });\n                \n                // 加载发送的请求\n                this.$api.getMyExchangeRequests().then(res => {\n                    if (res.data) {\n                        this.sentRequests = res.data;\n                    } else {\n                        this.sentRequests = [];\n                    }\n                }).catch(err => {\n                    console.error('获取发送的交换请求失败', err);\n                    this.$message.error('获取发送的交换请求失败');\n                }).finally(() => {\n                    this.requestsLoading = false;\n                });\n            },\n            getStatusTag(status) {\n                const statusMap = {\n                    0: { type: 'info', text: '等待审核' },\n                    1: { type: 'success', text: '已接受' },\n                    2: { type: 'danger', text: '已拒绝' },\n                    3: { type: 'primary', text: '已完成' }\n                };\n                return statusMap[status] || { type: 'info', text: '未知状态' };\n            },\n            acceptRequest(requestId) {\n                this.$confirm('确定接受此交换请求吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.$api.acceptExchangeRequest(requestId).then(res => {\n                        if (res.status_code === 1) {\n                            this.$message.success('已接受交换请求');\n                            this.loadExchangeRequests();\n                        } else {\n                            this.$message.error(res.msg || '操作失败');\n                        }\n                    }).catch(err => {\n                        console.error('接受交换请求失败', err);\n                        this.$message.error('接受交换请求失败');\n                    });\n                }).catch(() => {\n                    // 取消操作\n                });\n            },\n            rejectRequest(requestId) {\n                this.$confirm('确定拒绝此交换请求吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.$api.rejectExchangeRequest(requestId).then(res => {\n                        if (res.status_code === 1) {\n                            this.$message.success('已拒绝交换请求');\n                            this.loadExchangeRequests();\n                        } else {\n                            this.$message.error(res.msg || '操作失败');\n                        }\n                    }).catch(err => {\n                        console.error('拒绝交换请求失败', err);\n                        this.$message.error('拒绝交换请求失败');\n                    });\n                }).catch(() => {\n                    // 取消操作\n                });\n            },\n            completeExchange(requestId) {\n                this.$confirm('确认已完成物品交换吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.$api.completeExchange(requestId).then(res => {\n                        if (res.status_code === 1) {\n                            this.$message.success('交换已完成');\n                            this.loadExchangeRequests();\n                        } else {\n                            this.$message.error(res.msg || '操作失败');\n                        }\n                    }).catch(err => {\n                        console.error('完成交换失败', err);\n                        this.$message.error('完成交换失败');\n                    });\n                }).catch(() => {\n                    // 取消操作\n                });\n            },\n            getFirstImage(pictureList) {\n                if (Array.isArray(pictureList)) {\n                    return this.getImageUrl(pictureList[0]);\n                } else if (typeof pictureList === 'string') {\n                    return this.getImageUrl(pictureList);\n                } else {\n                    console.error('无效的图片列表格式');\n                    return '';\n                }\n            },\n            // 捐赠相关方法\n            donationButton(idleItemInfo) {\n                this.donationForm.itemId = idleItemInfo.id;\n                this.donationDialogVisible = true;\n            },\n            submitDonationRequest() {\n                this.$refs.donationForm.validate((valid) => {\n                    if (valid) {\n                        this.submitLoading = true;\n                        this.$api.createDonationRequest({\n                            itemId: this.donationForm.itemId,\n                            donationType: this.donationForm.donationType,\n                            donationReason: this.donationForm.donationReason\n                        }).then(res => {\n                            if (res.status_code === 1) {\n                                this.$message.success('捐赠请求已提交');\n                                this.donationDialogVisible = false;\n                                \n                                // 清空表单\n                                this.donationForm.donationType = 0;\n                                this.donationForm.donationReason = '';\n                                \n                                // 更新物品状态\n                                this.idleItemInfo.idleStatus = 2; // 捐赠中自动下架\n                                \n                            } else {\n                                this.$message.error(res.msg || '提交捐赠请求失败');\n                            }\n                        }).catch(err => {\n                            console.error('提交捐赠请求失败', err);\n                            this.$message.error('提交捐赠请求失败');\n                        }).finally(() => {\n                            this.submitLoading = false;\n                        });\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            // 添加举报按钮点击事件\n            reportButton(idleItemInfo) {\n                this.reportDialogVisible = true;\n            },\n        },\n    }\n</script>\n\n<style scoped>\n    .idle-details-container {\n        min-height: 85vh;\n    }\n\n    .details-header {\n        min-height: 80px;\n        height: auto;\n        border-bottom: 10px solid #f6f6f6;\n        display: flex;\n        justify-content: space-between;\n        padding: 20px;\n        align-items: center;\n        flex-wrap: wrap; /* 小屏幕支持换行 */\n    }\n\n    .details-header-user-info {\n        display: flex;\n    }\n\n    .details-header-user-info-nickname {\n        font-weight: 600;\n        font-size: 18px;\n        margin-bottom: 10px;\n    }\n\n    .details-header-user-info-time {\n        font-size: 12px;\n        color: #555555;\n    }\n\n    .details-header-buy {\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap; /* 允许按钮换行 */\n        gap: 10px; /* 按钮之间的间距 */\n        min-height: 50px;\n        margin-left: 20px; /* 与用户信息保持一定距离 */\n        flex: 1; /* 占用剩余空间 */\n        justify-content: flex-end; /* 按钮靠右对齐 */\n    }\n\n    .details-info {\n        padding: 20px 50px;\n    }\n\n    .details-info-title {\n        font-size: 22px;\n        font-weight: 600;\n        margin-bottom: 20px;\n\n    }\n\n    .details-info-main {\n        font-size: 17px;\n        color: #121212;\n        line-height: 160%;\n    }\n\n    .details-picture {\n        margin: 20px 0;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .message-container {\n        min-height: 100px;\n        border-top: 10px solid #f6f6f6;\n        padding: 20px;\n    }\n\n    .message-title {\n        font-size: 20px;\n        font-weight: 600;\n        margin-bottom: 20px;\n    }\n    .message-send{\n        min-height: 60px;\n    }\n    .message-send-button{\n        margin-top: 10px;\n        display: flex;\n        justify-content: flex-end;\n    }\n    .message-container-list{\n        min-height: 60px;\n        border-top: 1px solid #eeeeee;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px 0;\n    }\n    .message-container-list:first-child{\n        border-top:none;\n    }\n    .message-container-list-left{\n        width: 850px;\n        display: flex;\n    }\n    .message-container-list-right{\n        width: 100px;\n    }\n    .message-container-list-text{\n        margin-left: 10px;\n    }\n    .message-nickname{\n        font-weight: 600;\n        font-size: 18px;\n        padding-bottom: 5px;\n    }\n    .message-content{\n        font-size: 16px;\n        padding-bottom: 15px;\n        color: #555555;\n        width: 770px;\n    }\n    .message-time{\n        font-size: 13px;\n        color: #555555;\n    }\n    .image-container {\n        width: 100%;\n        min-height: 200px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .no-image {\n        text-align: center;\n        padding: 40px;\n        color: #909399;\n    }\n\n    .no-image i {\n        font-size: 48px;\n        margin-bottom: 10px;\n    }\n\n    .image-slot {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        background: #f5f7fa;\n        color: #909399;\n    }\n\n    .image-slot i {\n        font-size: 24px;\n        margin-bottom: 10px;\n    }\n\n    /* 易物交换弹窗样式 */\n    .exchange-preview-item {\n        margin-bottom: 15px;\n    }\n    \n    .item-preview {\n        display: flex;\n        align-items: center;\n    }\n    \n    .item-option {\n        display: flex;\n        align-items: center;\n    }\n    \n    .item-img {\n        width: 40px;\n        height: 40px;\n        object-fit: cover;\n        margin-right: 10px;\n        border-radius: 4px;\n    }\n    \n    .owner-info {\n        display: flex;\n        align-items: center;\n    }\n    \n    .owner-avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        margin-right: 10px;\n    }\n    \n    .owner-name {\n        font-size: 14px;\n        color: #303133;\n    }\n    \n    .exchange-preview {\n        margin-top: 20px;\n    }\n    \n    .exchange-preview h4 {\n        margin: 10px 0;\n        color: #409EFF;\n    }\n    \n    .exchange-preview-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    \n    .preview-item {\n        flex: 1;\n        text-align: center;\n    }\n    \n    .exchange-arrow {\n        font-size: 24px;\n        color: #409EFF;\n        margin: 0 20px;\n    }\n    \n    .preview-img {\n        width: 100px;\n        height: 100px;\n        object-fit: cover;\n        border-radius: 4px;\n        margin-bottom: 10px;\n    }\n    \n    .preview-info {\n        text-align: center;\n    }\n    \n    .preview-name {\n        font-size: 14px;\n        color: #303133;\n        margin-bottom: 5px;\n    }\n    \n    .preview-price {\n        font-size: 14px;\n        color: #F56C6C;\n    }\n    \n    /* 交换请求管理弹窗样式 */\n    .request-card {\n        margin-bottom: 20px;\n    }\n    \n    .request-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n    }\n    \n    .request-user {\n        display: flex;\n        align-items: center;\n    }\n    \n    .user-avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        margin-right: 10px;\n    }\n    \n    .request-time {\n        color: #909399;\n        font-size: 14px;\n    }\n    \n    .request-content {\n        margin-bottom: 15px;\n    }\n    \n    .exchange-items {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n    }\n    \n    .item-card {\n        flex: 1;\n        text-align: center;\n        padding: 10px;\n        border: 1px solid #EBEEF5;\n        border-radius: 4px;\n    }\n    \n    .item-title {\n        font-size: 14px;\n        color: #409EFF;\n        margin-bottom: 10px;\n    }\n    \n    .item-img {\n        width: 80px;\n        height: 80px;\n        object-fit: cover;\n        border-radius: 4px;\n        margin-bottom: 10px;\n    }\n    \n    .item-info {\n        text-align: center;\n    }\n    \n    .item-name {\n        font-size: 14px;\n        color: #303133;\n        margin-bottom: 5px;\n    }\n    \n    .item-price {\n        font-size: 14px;\n        color: #F56C6C;\n    }\n    \n    .request-reason {\n        background-color: #F5F7FA;\n        padding: 10px;\n        border-radius: 4px;\n    }\n    \n    .reason-title {\n        font-weight: bold;\n        margin-bottom: 5px;\n    }\n    \n    .reason-content {\n        color: #606266;\n    }\n    \n    .request-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    \n    .action-buttons {\n        display: flex;\n        gap: 10px;\n    }\n    \n    .empty-requests {\n        text-align: center;\n        padding: 30px;\n        color: #909399;\n    }\n    \n    .empty-requests i {\n        font-size: 48px;\n        margin-bottom: 10px;\n    }\n\n    /* 捐赠弹窗样式 */\n    .donation-preview-item {\n        margin-bottom: 15px;\n    }\n\n    .donation-notes {\n        background-color: #f8f8f8;\n        padding: 15px;\n        border-radius: 4px;\n        margin-top: 20px;\n        font-size: 14px;\n        color: #606266;\n    }\n\n    .donation-notes p {\n        margin: 5px 0;\n    }\n\n    .donation-notes i {\n        color: #E6A23C;\n        margin-right: 5px;\n    }\n</style>\n"],"mappings":"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","ignoreList":[]}]}