{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue","mtime":1741856314712},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _defineProperty from \"/Users/macos/Desktop/-Second-hand-mall/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport AppHead from \"../common/AppHeader.vue\";\nimport AppBody from \"../common/AppPageBody.vue\";\nimport AppFoot from \"../common/AppFoot.vue\";\nexport default {\n  name: \"idle-details\",\n  components: {\n    AppHead: AppHead,\n    AppBody: AppBody,\n    AppFoot: AppFoot\n  },\n  data: function data() {\n    return {\n      buttonText: '编辑',\n      isEditing: false,\n      messageContent: '',\n      toUser: null,\n      toMessage: null,\n      isReply: false,\n      replyData: {\n        toUserNickname: '',\n        toMessage: ''\n      },\n      messageList: [],\n      idleItemInfo: {\n        id: '',\n        idleName: '',\n        idleDetails: '',\n        pictureList: [],\n        idlePrice: 0,\n        idlePlace: '',\n        idleLabel: '',\n        idleStatus: -1,\n        userId: '',\n        user: {\n          avatar: '',\n          nickname: '',\n          signInTime: ''\n        }\n      },\n      editingIdleItem: null,\n      isMaster: false,\n      isFavorite: true,\n      favoriteId: 0,\n      imageLoading: true,\n      loadedImages: 0,\n      totalImages: 0\n    };\n  },\n  computed: {\n    processedPictureList: function processedPictureList() {\n      if (!this.idleItemInfo.pictureList) return [];\n      if (typeof this.idleItemInfo.pictureList === 'string') {\n        try {\n          return JSON.parse(this.idleItemInfo.pictureList);\n        } catch (e) {\n          console.error('解析图片列表失败:', e);\n          return [];\n        }\n      }\n      return Array.isArray(this.idleItemInfo.pictureList) ? this.idleItemInfo.pictureList : [this.idleItemInfo.pictureList];\n    },\n    fileList: function fileList() {\n      var _this = this;\n      return this.processedPictureList.map(function (img) {\n        return {\n          name: img,\n          url: _this.getImageUrl(img)\n        };\n      });\n    }\n  },\n  created: function created() {\n    this.getMyIdleById();\n  },\n  methods: {\n    getMyIdleById: function getMyIdleById() {\n      var _this2 = this;\n      this.imageLoading = true;\n      var id = this.$route.query.id;\n      this.$api.getIdleItem({\n        id: id\n      }).then(function (res) {\n        console.log('商品详情原始数据:', res);\n        if (res.data) {\n          // 处理商品详情的换行\n          var list = res.data.idleDetails.split(/\\r?\\n/);\n          var str = '';\n          for (var i = 0; i < list.length; i++) {\n            str += list[i];\n          }\n          res.data.idleDetails = str;\n\n          // 处理图片列表\n          try {\n            if (typeof res.data.pictureList === 'string') {\n              var pictureList = JSON.parse(res.data.pictureList);\n              res.data.pictureList = Array.isArray(pictureList) ? pictureList : [pictureList];\n            }\n            console.log('处理后的图片列表:', res.data.pictureList);\n          } catch (e) {\n            console.error('解析图片列表失败:', e);\n            res.data.pictureList = [];\n          }\n          _this2.idleItemInfo = res.data;\n          _this2.totalImages = _this2.processedPictureList.length;\n          _this2.loadedImages = 0;\n\n          // 预加载图片\n          _this2.processedPictureList.forEach(function (imgUrl) {\n            var img = new Image();\n            img.onload = function () {\n              _this2.loadedImages++;\n              if (_this2.loadedImages >= _this2.totalImages) {\n                _this2.imageLoading = false;\n              }\n            };\n            img.onerror = function (e) {\n              console.error('图片预加载失败:', imgUrl, e);\n              _this2.loadedImages++;\n              if (_this2.loadedImages >= _this2.totalImages) {\n                _this2.imageLoading = false;\n              }\n            };\n            img.src = _this2.getImageUrl(imgUrl);\n          });\n          var userId = _this2.getCookie('shUserId');\n          if (userId == _this2.idleItemInfo.userId) {\n            _this2.isMaster = true;\n          }\n          _this2.checkFavorite();\n          _this2.checkMyIdle();\n          _this2.getAllIdleMessage();\n        }\n      }).catch(function (error) {\n        console.error('获取商品详情失败:', error);\n        _this2.$message.error('获取商品详情失败，请重试');\n        _this2.imageLoading = false;\n      });\n    },\n    saveChanges: function saveChanges(idleItemInfo) {\n      var _this3 = this;\n      var updatedInfo = _objectSpread(_objectSpread({}, idleItemInfo), {}, {\n        pictureList: JSON.stringify(this.idleItemInfo.pictureList)\n      });\n      // 这里添加调用API更新商品信息的逻辑\n      this.$api.updateIdleItem(updatedInfo).then(function () {\n        // this.getMyIdleById();\n        _this3.$message.success('商品信息更新成功');\n        _this3.isEditing = false; // 保存后关闭编辑模式\n        _this3.buttonText = '编辑商品';\n      }).catch(function () {\n        _this3.$message.error('更新失败，请重试');\n      });\n    },\n    imgChange: function imgChange(file, fileList) {\n      this.noneBtnImg = fileList.length >= this.limitCountImg;\n    },\n    fileHandleRemove: function fileHandleRemove(file, fileList) {\n      console.log(file, fileList);\n      // 修改：现在需要找到对应的本地路径\n      var urlToRemove = file.localPath || file.url;\n      // 在pictureList中查找对应项\n      var index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n      console.log(this);\n      if (index > -1) {\n        // 找到了匹配的项，从idleItemInfo.pictureList中移除\n        this.idleItemInfo.pictureList.splice(index, 1);\n        this.$forceUpdate();\n      } else {\n        console.warn('Path not found in the list to remove.');\n      }\n    },\n    fileHandlePreview: function fileHandlePreview(file) {\n      console.log(file);\n      // 修改：如果response.data是对象，则使用accessUrl\n      if (file.response && file.response.data) {\n        var fileData = file.response.data;\n        this.dialogImageUrl = fileData.accessUrl || fileData;\n      } else {\n        this.dialogImageUrl = file.url;\n      }\n      this.imgDialogVisible = true;\n    },\n    fileHandleSuccess: function fileHandleSuccess(response, file, fileList) {\n      console.log(\"file:\", response, file, fileList);\n      // 修改：现在response.data是一个包含localPath和accessUrl的对象\n      var fileData = response.data;\n      // 将本地路径添加到pictureList\n      this.idleItemInfo.pictureList.push(fileData.localPath);\n      // 但在界面展示时使用accessUrl\n      file.url = fileData.accessUrl;\n      file.localPath = fileData.localPath; // 保存本地路径便于后续操作\n    },\n    editButton: function editButton() {\n      this.isEditing = !this.isEditing;\n      this.buttonText = '保存修改';\n    },\n    getAllIdleMessage: function getAllIdleMessage() {\n      var _this4 = this;\n      this.$api.getAllIdleMessage({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        console.log('getAllIdleMessage', res.data);\n        if (res.status_code === 1) {\n          _this4.messageList = res.data;\n        }\n      }).catch(function () {});\n    },\n    checkFavorite: function checkFavorite() {\n      var _this5 = this;\n      this.$api.checkFavorite({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (!res.data) {\n          _this5.isFavorite = false;\n        } else {\n          _this5.favoriteId = res.data;\n        }\n      });\n    },\n    checkMyIdle: function checkMyIdle() {\n      var _this6 = this;\n      this.$api.checkMyIdle({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (res.data) {\n          _this6.isMaster = true;\n        } else {\n          _this6.isMaster = false;\n        }\n      });\n    },\n    getCookie: function getCookie(cname) {\n      var name = cname + \"=\";\n      var ca = document.cookie.split(';');\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i].trim();\n        if (c.indexOf(name) === 0) return c.substring(name.length, c.length);\n      }\n      return \"\";\n    },\n    replyMessage: function replyMessage(index) {\n      $('html,body').animate({\n        scrollTop: $(\"#replyMessageLocation\").offset().top - 600\n      }, {\n        duration: 500,\n        easing: \"swing\"\n      });\n      this.isReply = true;\n      this.replyData.toUserNickname = this.messageList[index].fromU.nickname;\n      this.replyData.toMessage = this.messageList[index].content.substring(0, 10) + (this.messageList[index].content.length > 10 ? '...' : '');\n      this.toUser = this.messageList[index].userId;\n      this.toMessage = this.messageList[index].id;\n    },\n    changeStatus: function changeStatus(idle, status) {\n      var _this7 = this;\n      this.$api.updateIdleItem({\n        id: idle.id,\n        idleStatus: status\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this7.idleItemInfo.idleStatus = status;\n        } else {\n          _this7.$message.error(res.msg);\n        }\n      });\n    },\n    buyButton: function buyButton(idleItemInfo) {\n      var _this8 = this;\n      this.$api.addOrder({\n        idleId: idleItemInfo.id,\n        orderPrice: idleItemInfo.idlePrice\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this8.$router.push({\n            path: '/order',\n            query: {\n              id: res.data.id\n            }\n          });\n        } else {\n          _this8.$message.error(res.msg);\n        }\n      }).catch(function (e) {});\n    },\n    favoriteButton: function favoriteButton(idleItemInfo) {\n      var _this9 = this;\n      if (this.isFavorite) {\n        this.$api.deleteFavorite({\n          id: this.favoriteId\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this9.$message({\n              message: '已取消收藏！',\n              type: 'success'\n            });\n            _this9.isFavorite = false;\n          } else {\n            _this9.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      } else {\n        this.$api.addFavorite({\n          idleId: idleItemInfo.id\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this9.$message({\n              message: '已加入收藏！',\n              type: 'success'\n            });\n            _this9.isFavorite = true;\n            _this9.favoriteId = res.data;\n          } else {\n            _this9.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      }\n    },\n    cancelReply: function cancelReply() {\n      this.isReply = false;\n      this.toUser = this.idleItemInfo.userId;\n      this.toMessage = null;\n      this.replyData.toUserNickname = '';\n      this.replyData.toMessage = '';\n    },\n    sendMessage: function sendMessage() {\n      var _this10 = this;\n      var content = this.messageContent.trim();\n      if (this.toUser == null) {\n        this.toUser = this.idleItemInfo.userId;\n      }\n      if (content) {\n        var contentList = content.split(/\\r?\\n/);\n        var contenHtml = contentList[0];\n        for (var i = 1; i < contentList.length; i++) {\n          contenHtml += '<br>' + contentList[i];\n        }\n        this.$api.sendMessage({\n          idleId: this.idleItemInfo.id,\n          content: contenHtml,\n          toUser: this.toUser,\n          toMessage: this.toMessage\n        }).then(function (res) {\n          if (res.status_code === 1) {\n            _this10.$message({\n              message: '留言成功！',\n              type: 'success'\n            });\n            _this10.messageContent = '';\n            _this10.cancelReply();\n            _this10.getAllIdleMessage();\n          } else {\n            _this10.$message.error(\"留言失败！\" + res.msg);\n          }\n        }).catch(function () {\n          _this10.$message.error(\"留言失败！\");\n        });\n      } else {\n        this.$message.error(\"留言为空！\");\n      }\n    },\n    getImageUrl: function getImageUrl(url) {\n      // 检查url是否已经是HTTP URL\n      if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n        return url;\n      }\n\n      // 检查url是否是一个本地文件路径\n      if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n        // 如果是本地路径，则转换为服务器URL\n        // 这里假设文件名是路径最后的部分\n        var fileName = url.split(/[/\\\\]/).pop();\n        // 构建访问URL\n        return \"http://localhost:8082/image?imageName=\".concat(fileName);\n      }\n\n      // 如果是简单的文件名，直接构建访问URL\n      if (url && url.trim() !== '') {\n        return \"http://localhost:8082/image?imageName=\".concat(url);\n      }\n\n      // 其他情况直接返回\n      return url;\n    },\n    handleImageLoad: function handleImageLoad() {\n      this.loadedImages++;\n      if (this.loadedImages >= this.totalImages) {\n        this.imageLoading = false;\n      }\n    },\n    handleImageError: function handleImageError(e) {\n      console.error('图片加载失败:', e);\n      this.loadedImages++;\n      if (this.loadedImages >= this.totalImages) {\n        this.imageLoading = false;\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isImage = file.type.startsWith('image/');\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error('只能上传图片文件!');\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error('图片大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    }\n  }\n};",{"version":3,"names":["AppHead","AppBody","AppFoot","name","components","data","buttonText","isEditing","messageContent","toUser","toMessage","isReply","replyData","toUserNickname","messageList","idleItemInfo","id","idleName","idleDetails","pictureList","idlePrice","idlePlace","idleLabel","idleStatus","userId","user","avatar","nickname","signInTime","editingIdleItem","isMaster","isFavorite","favoriteId","imageLoading","loadedImages","totalImages","computed","processedPictureList","JSON","parse","e","console","error","Array","isArray","fileList","_this","map","img","url","getImageUrl","created","getMyIdleById","methods","_this2","$route","query","$api","getIdleItem","then","res","log","list","split","str","i","length","forEach","imgUrl","Image","onload","onerror","src","getCookie","checkFavorite","checkMyIdle","getAllIdleMessage","catch","$message","saveChanges","_this3","updatedInfo","_objectSpread","stringify","updateIdleItem","success","imgChange","file","noneBtnImg","limitCountImg","fileHandleRemove","urlToRemove","localPath","index","indexOf","splice","$forceUpdate","warn","fileHandlePreview","response","fileData","dialogImageUrl","accessUrl","imgDialogVisible","fileHandleSuccess","push","editButton","_this4","idleId","status_code","_this5","_this6","cname","ca","document","cookie","c","trim","substring","replyMessage","$","animate","scrollTop","offset","top","duration","easing","fromU","content","changeStatus","idle","status","_this7","msg","buyButton","_this8","addOrder","orderPrice","$router","path","favoriteButton","_this9","deleteFavorite","message","type","addFavorite","cancelReply","sendMessage","_this10","contentList","contenHtml","startsWith","includes","fileName","pop","concat","handleImageLoad","handleImageError","beforeUpload","isImage","isLt2M","size"],"sources":["src/components/page/idle-details.vue"],"sourcesContent":["<template>\n    <div>\n        <app-head></app-head>\n        <app-body>\n            <div class=\"idle-details-container\">\n                <div class=\"details-header\">\n                    <div class=\"details-header-user-info\">\n                        <el-image\n                                style=\"width: 80px; height: 80px;border-radius: 5px;\"\n                                :src=\"idleItemInfo.user.avatar\"\n                                fit=\"contain\"></el-image>\n                        <div style=\"margin-left: 10px;\">\n                            <div class=\"details-header-user-info-nickname\">{{idleItemInfo.user.nickname}}</div>\n                            <div class=\"details-header-user-info-time\">{{idleItemInfo.user.signInTime.substring(0,10)}} 加入平台</div>\n                        </div>\n                    </div>\n                    <div class=\"details-header-buy\" :style=\"'width:'+(isMaster?'250px;':'280px;')\">\n                        <div v-show=\"idleItemInfo.idlePrice !== 0\" style=\"color: red;font-size: 18px;font-weight: 600;\">￥{{idleItemInfo.idlePrice}}</div>\n                        <div v-if=\"!isMaster&&idleItemInfo.idleStatus!==1\" style=\"color: red;font-size: 16px;\">闲置已下架或删除</div>\n                        <el-button v-show=\"idleItemInfo.idlePrice > 0\" v-if=\"!isMaster&&idleItemInfo.idleStatus===1\" type=\"danger\" plain @click=\"buyButton(idleItemInfo)\">立即购买</el-button>\n                        <el-button v-show=\"idleItemInfo.idlePrice > 0\" v-if=\"!isMaster&&idleItemInfo.idleStatus===1\" type=\"primary\" plain @click=\"favoriteButton(idleItemInfo)\">{{isFavorite?'取消收藏':'加入收藏'}}</el-button>\n                        <el-button\n                            v-show='idleItemInfo.idlePrice >= 0'\n                            v-if=\"isMaster&&idleItemInfo.idleStatus===1\"\n                            type='primary'\n                            plain\n                            @click=\"isEditing ? saveChanges(idleItemInfo) : editButton()\">{{ buttonText }}</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===1\" type=\"danger\" @click=\"changeStatus(idleItemInfo,2)\" plain>下架</el-button>\n                        <el-button v-if=\"isMaster&&idleItemInfo.idleStatus===2\" type=\"primary\" @click=\"changeStatus(idleItemInfo,1)\" plain>重新上架</el-button>\n                    </div>\n                </div>\n\n\n                <div class=\"details-info\">\n\n                    <div v-if=\"isEditing\">\n                        <label class=\"input-label\">价格</label>\n                        <el-input v-model=\"idleItemInfo.idlePrice\" placeholder=\"请输入商品价格\"></el-input>\n                    </div>\n                    <div class=\"details-info-title\" v-if=\"isEditing\">\n                        <label class=\"input-label\">名称</label>\n                        <el-input v-model=\"idleItemInfo.idleName\" placeholder=\"请输入商品名称\"></el-input>\n                    </div>\n                    <div class=\"details-info-title\" v-else>\n                        {{idleItemInfo.idleName}}\n                    </div>\n                    <div v-if=\"isEditing\">\n                        <label class=\"input-label\">详情</label>\n                        <el-input type=\"textarea\" autosize placeholder=\"请输入商品详情...\" v-model=\"idleItemInfo.idleDetails\"></el-input>\n                    </div>\n                    <div class=\"details-info-main\" v-else v-html=\"idleItemInfo.idleDetails\"></div>\n                    <div class=\"details-picture\">\n                        <template v-if=\"isEditing\">\n                            <!-- 编辑模式下的上传控件 -->\n                            <el-upload\n                                :on-remove=\"fileHandleRemove\"\n                                :on-success=\"fileHandleSuccess\"\n                                :on-change=\"imgChange\"\n                                action=\"http://localhost:8082/file\"\n                                list-type=\"picture-card\"\n                                :file-list=\"fileList\"\n                                :before-upload=\"beforeUpload\"\n                            >\n                                <i class=\"el-icon-plus\"></i>\n                            </el-upload>\n                        </template>\n                        <template v-else>\n                            <!-- 显示模式下的图片列表 -->\n                            <div v-loading=\"imageLoading\" class=\"image-container\">\n                                <el-image\n                                    v-for=\"(imgUrl, i) in processedPictureList\"\n                                    :key=\"i\"\n                                    style=\"width: 90%; margin-bottom: 2px;\"\n                                    :src=\"getImageUrl(imgUrl)\"\n                                    fit=\"contain\"\n                                    @load=\"handleImageLoad\"\n                                    @error=\"handleImageError\"\n                                >\n                                    <div slot=\"error\" class=\"image-slot\">\n                                        <i class=\"el-icon-picture-outline\"></i>\n                                        <p>图片加载失败</p>\n                                    </div>\n                                </el-image>\n                            </div>\n                            <div v-if=\"!processedPictureList.length\" class=\"no-image\">\n                                <i class=\"el-icon-picture-outline\"></i>\n                                <p>暂无图片</p>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"message-container\" id=\"replyMessageLocation\">\n                    <div class=\"message-title\">全部留言</div>\n                    <div class=\"message-send\">\n                        <div v-if=\"isReply\" style=\"padding-bottom: 10px;\">\n                            <el-button type=\"info\" @click=\"cancelReply\">回复：{{replyData.toMessage}} @{{replyData.toUserNickname}} <i class=\"el-icon-close el-icon--right\"></i></el-button>\n                        </div>\n                        <el-input\n                                type=\"textarea\"\n                                autosize\n                                placeholder=\"留言提问...\"\n                                v-model=\"messageContent\"\n                                maxlength=\"200\"\n                                show-word-limit>\n                        </el-input>\n                        <div class=\"message-send-button\">\n                            <el-button plain @click=\"sendMessage\">发送留言</el-button>\n                        </div>\n                    </div>\n                    <div>\n                        <div v-for=\"(mes,index) in messageList\" class=\"message-container-list\">\n                            <div class=\"message-container-list-left\">\n                                <el-image\n                                        style=\"width: 55px; height: 55px;border-radius: 5px;\"\n                                        :src=\"mes.fromU.avatar\"\n                                        fit=\"contain\"></el-image>\n                                <div class=\"message-container-list-text\">\n                                    <div class=\"message-nickname\">{{mes.fromU.nickname}}\n                                        {{mes.toU.nickname?' @'+mes.toU.nickname+'：'+\n                                        mes.toM.content.substring(0,10)+\n                                        (mes.toM.content.length>10?'...':''):''}}</div>\n                                    <div class=\"message-content\" v-html=\"mes.content\"></div>\n                                    <div class=\"message-time\">{{mes.createTime}}</div>\n                                </div>\n                            </div>\n                            <div class=\"message-container-list-right\">\n                                <el-button style=\"float: right;\"  plain @click=\"replyMessage(index)\">回复</el-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <app-foot></app-foot>\n        </app-body>\n    </div>\n</template>\n\n<script>\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n\n    export default {\n        name: \"idle-details\",\n        components: {\n            AppHead,\n            AppBody,\n            AppFoot\n        },\n        data() {\n            return {\n                buttonText:'编辑',\n                isEditing:false,\n                messageContent:'',\n                toUser:null,\n                toMessage:null,\n                isReply:false,\n                replyData:{\n                    toUserNickname:'',\n                    toMessage:''\n                },\n                messageList:[],\n                idleItemInfo:{\n                    id:'',\n                    idleName:'',\n                    idleDetails:'',\n                    pictureList:[],\n                    idlePrice:0,\n                    idlePlace:'',\n                    idleLabel:'',\n                    idleStatus:-1,\n                    userId:'',\n                    user:{\n                        avatar:'',\n                        nickname:'',\n                        signInTime:''\n                    },\n                },\n                editingIdleItem:null,\n                isMaster:false,\n                isFavorite:true,\n                favoriteId:0,\n                imageLoading: true,\n                loadedImages: 0,\n                totalImages: 0\n            };\n        },\n        computed: {\n            processedPictureList() {\n                if (!this.idleItemInfo.pictureList) return [];\n                if (typeof this.idleItemInfo.pictureList === 'string') {\n                    try {\n                        return JSON.parse(this.idleItemInfo.pictureList);\n                    } catch (e) {\n                        console.error('解析图片列表失败:', e);\n                        return [];\n                    }\n                }\n                return Array.isArray(this.idleItemInfo.pictureList) \n                    ? this.idleItemInfo.pictureList \n                    : [this.idleItemInfo.pictureList];\n            },\n            fileList() {\n                return this.processedPictureList.map(img => ({\n                    name: img,\n                    url: this.getImageUrl(img)\n                }));\n            }\n        },\n        created(){\n            this.getMyIdleById();\n        },\n        methods: {\n            getMyIdleById(){\n                this.imageLoading = true;\n                let id = this.$route.query.id;\n                this.$api.getIdleItem({\n                    id: id\n                }).then(res => {\n                    console.log('商品详情原始数据:', res);\n                    if (res.data) {\n                        // 处理商品详情的换行\n                        let list = res.data.idleDetails.split(/\\r?\\n/);\n                        let str = '';\n                        for (let i = 0; i < list.length; i++) {\n                            str += list[i];\n                        }\n                        res.data.idleDetails = str;\n\n                        // 处理图片列表\n                        try {\n                            if (typeof res.data.pictureList === 'string') {\n                                const pictureList = JSON.parse(res.data.pictureList);\n                                res.data.pictureList = Array.isArray(pictureList) ? pictureList : [pictureList];\n                            }\n                            console.log('处理后的图片列表:', res.data.pictureList);\n                        } catch (e) {\n                            console.error('解析图片列表失败:', e);\n                            res.data.pictureList = [];\n                        }\n\n                        this.idleItemInfo = res.data;\n                        this.totalImages = this.processedPictureList.length;\n                        this.loadedImages = 0;\n\n                        // 预加载图片\n                        this.processedPictureList.forEach(imgUrl => {\n                            const img = new Image();\n                            img.onload = () => {\n                                this.loadedImages++;\n                                if (this.loadedImages >= this.totalImages) {\n                                    this.imageLoading = false;\n                                }\n                            };\n                            img.onerror = (e) => {\n                                console.error('图片预加载失败:', imgUrl, e);\n                                this.loadedImages++;\n                                if (this.loadedImages >= this.totalImages) {\n                                    this.imageLoading = false;\n                                }\n                            };\n                            img.src = this.getImageUrl(imgUrl);\n                        });\n\n                        let userId = this.getCookie('shUserId');\n                        if (userId == this.idleItemInfo.userId) {\n                            this.isMaster = true;\n                        }\n                        this.checkFavorite();\n                        this.checkMyIdle();\n                        this.getAllIdleMessage();\n                    }\n                }).catch(error => {\n                    console.error('获取商品详情失败:', error);\n                    this.$message.error('获取商品详情失败，请重试');\n                    this.imageLoading = false;\n                });\n            },\n            saveChanges(idleItemInfo) {\n                const updatedInfo = {\n                    ...idleItemInfo,\n                    pictureList: JSON.stringify(this.idleItemInfo.pictureList),\n                };\n                // 这里添加调用API更新商品信息的逻辑\n                this.$api.updateIdleItem(updatedInfo).then(() => {\n                    // this.getMyIdleById();\n                    this.$message.success('商品信息更新成功');\n                    this.isEditing = false; // 保存后关闭编辑模式\n                    this.buttonText = '编辑商品'\n                }).catch(() => {\n                    this.$message.error('更新失败，请重试');\n                });\n            },\n            imgChange(file, fileList){\n                this.noneBtnImg = fileList.length >= this.limitCountImg;\n            },\n            fileHandleRemove(file,fileList) {\n                console.log(file, fileList);\n                // 修改：现在需要找到对应的本地路径\n                const urlToRemove = file.localPath || file.url; \n                // 在pictureList中查找对应项\n                const index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n                console.log(this)\n\n                if (index > -1) {\n                    // 找到了匹配的项，从idleItemInfo.pictureList中移除\n                    this.idleItemInfo.pictureList.splice(index, 1);\n                    this.$forceUpdate();\n                } else {\n                    console.warn('Path not found in the list to remove.');\n                }\n            },\n            fileHandlePreview(file) {\n                console.log(file);\n                // 修改：如果response.data是对象，则使用accessUrl\n                if(file.response && file.response.data) {\n                    const fileData = file.response.data;\n                    this.dialogImageUrl = fileData.accessUrl || fileData;\n                } else {\n                    this.dialogImageUrl = file.url;\n                }\n                this.imgDialogVisible=true;\n            },\n            fileHandleSuccess(response, file, fileList) {\n                console.log(\"file:\", response, file, fileList);\n                // 修改：现在response.data是一个包含localPath和accessUrl的对象\n                const fileData = response.data;\n                // 将本地路径添加到pictureList\n                this.idleItemInfo.pictureList.push(fileData.localPath);\n                // 但在界面展示时使用accessUrl\n                file.url = fileData.accessUrl;\n                file.localPath = fileData.localPath; // 保存本地路径便于后续操作\n            },\n            editButton(){\n                this.isEditing = !this.isEditing;\n                this.buttonText = '保存修改'\n            },\n            getAllIdleMessage(){\n                this.$api.getAllIdleMessage({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    console.log('getAllIdleMessage',res.data);\n                    if(res.status_code===1){\n                        this.messageList=res.data;\n                    }\n                }).catch(()=>{\n                })\n            },\n            checkFavorite(){\n                this.$api.checkFavorite({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if(!res.data){\n                        this.isFavorite=false;\n                    }else {\n                        this.favoriteId=res.data;\n                    }\n                })\n            },\n            checkMyIdle(){\n                this.$api.checkMyIdle({\n                    idleId:this.idleItemInfo.id\n                }).then(res=>{\n                    if (res.data){\n                        this.isMaster = true;\n                    }else {\n                        this.isMaster = false;\n                    }\n                })\n            },\n            getCookie(cname){\n                var name = cname + \"=\";\n                var ca = document.cookie.split(';');\n                for(var i=0; i<ca.length; i++)\n                {\n                    var c = ca[i].trim();\n                    if (c.indexOf(name)===0) return c.substring(name.length,c.length);\n                }\n                return \"\";\n            },\n            replyMessage(index){\n                $('html,body').animate({\n                    scrollTop: $(\"#replyMessageLocation\").offset().top-600\n                }, {duration: 500, easing: \"swing\"});\n                this.isReply=true;\n                this.replyData.toUserNickname=this.messageList[index].fromU.nickname;\n                this.replyData.toMessage=this.messageList[index].content.substring(0,10)+(this.messageList[index].content.length>10?'...':'');\n                this.toUser=this.messageList[index].userId;\n                this.toMessage=this.messageList[index].id;\n            },\n            changeStatus(idle,status){\n                this.$api.updateIdleItem({\n                    id:idle.id,\n                    idleStatus:status\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.idleItemInfo.idleStatus=status;\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                });\n            },\n            buyButton(idleItemInfo){\n                this.$api.addOrder({\n                    idleId:idleItemInfo.id,\n                    orderPrice:idleItemInfo.idlePrice,\n                }).then(res=>{\n                    console.log(res);\n                    if(res.status_code===1){\n                        this.$router.push({path: '/order', query: {id: res.data.id}});\n                    }else {\n                        this.$message.error(res.msg)\n                    }\n                }).catch(e=>{\n\n                })\n            },\n            favoriteButton(idleItemInfo){\n                if(this.isFavorite){\n                    this.$api.deleteFavorite({\n                        id: this.favoriteId\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已取消收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=false;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }else {\n                    this.$api.addFavorite({\n                        idleId:idleItemInfo.id\n                    }).then(res=>{\n                        console.log(res);\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '已加入收藏！',\n                                type: 'success'\n                            });\n                            this.isFavorite=true;\n                            this.favoriteId=res.data;\n                        }else {\n                            this.$message.error(res.msg)\n                        }\n                    }).catch(e=>{\n                    })\n                }\n            },\n            cancelReply(){\n                this.isReply=false;\n                this.toUser=this.idleItemInfo.userId;\n                this.toMessage=null;\n                this.replyData.toUserNickname='';\n                this.replyData.toMessage='';\n            },\n\n            sendMessage(){\n                let content=this.messageContent.trim();\n                if(this.toUser==null){\n                    this.toUser=this.idleItemInfo.userId;\n                }\n                if(content){\n                    let contentList=content.split(/\\r?\\n/);\n                    let contenHtml=contentList[0];\n                    for(let i=1;i<contentList.length;i++){\n                        contenHtml+='<br>'+contentList[i];\n                    }\n                    this.$api.sendMessage({\n                        idleId:this.idleItemInfo.id,\n                        content:contenHtml,\n                        toUser:this.toUser,\n                        toMessage:this.toMessage\n                    }).then(res=>{\n                        if(res.status_code===1){\n                            this.$message({\n                                message: '留言成功！',\n                                type: 'success'\n                            });\n                            this.messageContent='';\n                            this.cancelReply();\n                            this.getAllIdleMessage();\n                        }else {\n                            this.$message.error(\"留言失败！\"+res.msg);\n                        }\n                    }).catch(()=>{\n                        this.$message.error(\"留言失败！\");\n                    });\n\n                }else{\n                    this.$message.error(\"留言为空！\");\n                }\n            },\n            getImageUrl(url) {\n                // 检查url是否已经是HTTP URL\n                if (url && (url.startsWith('http://') || url.startsWith('https://'))) {\n                    return url;\n                }\n                \n                // 检查url是否是一个本地文件路径\n                if (url && (url.startsWith('/') || url.startsWith('D:') || url.includes('\\\\') || url.includes('/'))) {\n                    // 如果是本地路径，则转换为服务器URL\n                    // 这里假设文件名是路径最后的部分\n                    const fileName = url.split(/[/\\\\]/).pop();\n                    // 构建访问URL\n                    return `http://localhost:8082/image?imageName=${fileName}`;\n                }\n                \n                // 如果是简单的文件名，直接构建访问URL\n                if (url && url.trim() !== '') {\n                    return `http://localhost:8082/image?imageName=${url}`;\n                }\n                \n                // 其他情况直接返回\n                return url;\n            },\n            handleImageLoad() {\n                this.loadedImages++;\n                if (this.loadedImages >= this.totalImages) {\n                    this.imageLoading = false;\n                }\n            },\n            handleImageError(e) {\n                console.error('图片加载失败:', e);\n                this.loadedImages++;\n                if (this.loadedImages >= this.totalImages) {\n                    this.imageLoading = false;\n                }\n            },\n            beforeUpload(file) {\n                const isImage = file.type.startsWith('image/');\n                const isLt2M = file.size / 1024 / 1024 < 2;\n\n                if (!isImage) {\n                    this.$message.error('只能上传图片文件!');\n                    return false;\n                }\n                if (!isLt2M) {\n                    this.$message.error('图片大小不能超过 2MB!');\n                    return false;\n                }\n                return true;\n            },\n        },\n    }\n</script>\n\n<style scoped>\n    .idle-details-container {\n        min-height: 85vh;\n    }\n\n    .details-header {\n        height: 80px;\n        border-bottom: 10px solid #f6f6f6;\n        display: flex;\n        justify-content: space-between;\n        padding: 20px;\n        align-items: center;\n    }\n\n    .details-header-user-info {\n        display: flex;\n    }\n\n    .details-header-user-info-nickname {\n        font-weight: 600;\n        font-size: 18px;\n        margin-bottom: 10px;\n    }\n\n    .details-header-user-info-time {\n        font-size: 12px;\n        color: #555555;\n    }\n\n    .details-header-buy {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        height: 50px;\n        width: 280px;\n    }\n\n    .details-info {\n        padding: 20px 50px;\n    }\n\n    .details-info-title {\n        font-size: 22px;\n        font-weight: 600;\n        margin-bottom: 20px;\n\n    }\n\n    .details-info-main {\n        font-size: 17px;\n        color: #121212;\n        line-height: 160%;\n    }\n\n    .details-picture {\n        margin: 20px 0;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .message-container {\n        min-height: 100px;\n        border-top: 10px solid #f6f6f6;\n        padding: 20px;\n    }\n\n    .message-title {\n        font-size: 20px;\n        font-weight: 600;\n        margin-bottom: 20px;\n    }\n    .message-send{\n        min-height: 60px;\n    }\n    .message-send-button{\n        margin-top: 10px;\n        display: flex;\n        justify-content: flex-end;\n    }\n    .message-container-list{\n        min-height: 60px;\n        border-top: 1px solid #eeeeee;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px 0;\n    }\n    .message-container-list:first-child{\n        border-top:none;\n    }\n    .message-container-list-left{\n        width: 850px;\n        display: flex;\n    }\n    .message-container-list-right{\n        width: 100px;\n    }\n    .message-container-list-text{\n        margin-left: 10px;\n    }\n    .message-nickname{\n        font-weight: 600;\n        font-size: 18px;\n        padding-bottom: 5px;\n    }\n    .message-content{\n        font-size: 16px;\n        padding-bottom: 15px;\n        color: #555555;\n        width: 770px;\n    }\n    .message-time{\n        font-size: 13px;\n        color: #555555;\n    }\n    .image-container {\n        width: 100%;\n        min-height: 200px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .no-image {\n        text-align: center;\n        padding: 40px;\n        color: #909399;\n    }\n\n    .no-image i {\n        font-size: 48px;\n        margin-bottom: 10px;\n    }\n\n    .image-slot {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        background: #f5f7fa;\n        color: #909399;\n    }\n\n    .image-slot i {\n        font-size: 24px;\n        margin-bottom: 10px;\n    }\n</style>\n"],"mappings":"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","ignoreList":[]}]}