{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/message.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/message.vue","mtime":1742029836911},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport AppHead from \"../common/AppHeader.vue\";\nimport AppBody from \"../common/AppPageBody.vue\";\nimport AppFoot from \"../common/AppFoot.vue\";\nexport default {\n  name: \"message\",\n  components: {\n    AppHead: AppHead,\n    AppBody: AppBody,\n    AppFoot: AppFoot\n  },\n  data: function data() {\n    return {\n      meslist: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n    this.$api.getAllMyMessage().then(function (res) {\n      console.log(res);\n      if (res.status_code === 1) {\n        for (var i = 0; i < res.data.length; i++) {\n          var imgList = JSON.parse(res.data[i].idle.pictureList);\n          res.data[i].idle.imgUrl = imgList ? imgList[0] : '';\n          var contentList = res.data[i].content.split('<br>');\n          var contenHtml = contentList[0];\n          for (var _i = 1; _i < contentList.length; _i++) {\n            contenHtml += '  ' + contentList[_i];\n          }\n          res.data[i].content = contenHtml;\n        }\n        _this.meslist = res.data;\n        _this.markAllMessagesAsRead();\n      }\n    });\n  },\n  methods: {\n    toDetails: function toDetails(id) {\n      this.$router.push({\n        path: '/details',\n        query: {\n          id: id\n        }\n      });\n    },\n    markAllMessagesAsRead: function markAllMessagesAsRead() {\n      var _this2 = this;\n      this.$api.markMessageAsRead().then(function (res) {\n        if (res.status_code === 1) {\n          _this2.$eventBus.$emit('update-unread-messages');\n        }\n      }).catch(function (err) {\n        console.error('标记消息为已读失败:', err);\n        // 即使API调用失败，也尝试更新未读消息数量\n        _this2.$eventBus.$emit('update-unread-messages');\n      });\n    }\n  }\n};",{"version":3,"names":["AppHead","AppBody","AppFoot","name","components","data","meslist","created","_this","$api","getAllMyMessage","then","res","console","log","status_code","i","length","imgList","JSON","parse","idle","pictureList","imgUrl","contentList","content","split","contenHtml","markAllMessagesAsRead","methods","toDetails","id","$router","push","path","query","_this2","markMessageAsRead","$eventBus","$emit","catch","err","error"],"sources":["src/components/page/message.vue"],"sourcesContent":["<template>\n    <div>\n        <app-head></app-head>\n        <app-body>\n            <div class=\"message-container\">\n                <div class=\"message-container-title\">我的消息</div>\n                <div v-if=\"meslist.length > 0\">\n                    <div v-for=\"(mes,index) in meslist\" class=\"message-container-list\" @click=\"toDetails(mes.idle.id)\">\n                        <div class=\"message-container-list-left\">\n                            <el-image\n                                    style=\"width: 55px; height: 55px;border-radius: 5px;\"\n                                    :src=\"mes.fromU.avatar\"\n                                    fit=\"cover\"></el-image>\n                            <div class=\"message-container-list-text\">\n                                <div class=\"message-nickname\">{{mes.fromU.nickname}}</div>\n                                <div class=\"message-content\">{{mes.content}}</div>\n                                <div class=\"message-time\">{{mes.createTime}}</div>\n                            </div>\n                        </div>\n                        <div class=\"message-container-list-right\">\n                            <el-image\n                                    style=\"width:130px; height: 90px;\"\n                                    :src=\"mes.idle.imgUrl\"\n                                    fit=\"contain\"></el-image>\n                        </div>\n                    </div>\n                </div>\n                <div v-else class=\"empty-message-container\">\n                    <i class=\"el-icon-chat-round empty-icon\"></i>\n                    <p class=\"empty-text\">暂无消息</p>\n                    <p class=\"empty-tip\">浏览商品并与卖家沟通，消息将显示在这里</p>\n                </div>\n            </div>\n            <app-foot></app-foot>\n        </app-body>\n    </div>\n</template>\n\n<script>\n    import AppHead from '../common/AppHeader.vue';\n    import AppBody from '../common/AppPageBody.vue'\n    import AppFoot from '../common/AppFoot.vue'\n\n    export default {\n        name: \"message\",\n        components: {\n            AppHead,\n            AppBody,\n            AppFoot\n        },\n        data(){\n            return{\n                meslist:[]\n            };\n        },\n        created(){\n            this.$api.getAllMyMessage().then(res=>{\n                console.log(res);\n                if(res.status_code===1){\n                    for(let i=0;i<res.data.length;i++){\n                        let imgList=JSON.parse(res.data[i].idle.pictureList);\n                        res.data[i].idle.imgUrl=imgList?imgList[0]:'';\n                        let contentList=res.data[i].content.split('<br>');\n                        let contenHtml=contentList[0];\n                        for(let i=1;i<contentList.length;i++){\n                            contenHtml+='  '+contentList[i];\n                        }\n                        res.data[i].content=contenHtml;\n                    }\n                    this.meslist=res.data;\n                    this.markAllMessagesAsRead();\n                }\n            })\n        },\n        methods:{\n            toDetails(id){\n                this.$router.push({path: '/details',query:{id:id}});\n            },\n            markAllMessagesAsRead(){\n                this.$api.markMessageAsRead().then(res => {\n                    if(res.status_code === 1){\n                        this.$eventBus.$emit('update-unread-messages');\n                    }\n                }).catch(err => {\n                    console.error('标记消息为已读失败:', err);\n                    // 即使API调用失败，也尝试更新未读消息数量\n                    this.$eventBus.$emit('update-unread-messages');\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .message-container{\n        min-height: 85vh;\n        padding: 0 20px;\n    }\n    .message-container-title{\n        font-size: 16px;\n        padding: 20px 0;\n        font-weight: 600;\n    }\n    .message-container-list{\n        cursor:pointer;\n        height: 110px;\n        border-top: 1px solid #eeeeee;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    .message-container-list-left{\n        width: 800px;\n        display: flex;\n    }\n    .message-container-list-right{\n        width: 130px;\n    }\n    .message-container-list-text{\n        margin-left: 10px;\n    }\n    .message-nickname{\n        font-weight: 600;\n        font-size: 18px;\n        padding-bottom: 5px;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n    .message-content{\n        font-size: 16px;\n        padding-bottom: 15px;\n        color: #555555;\n        width: 710px;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n    .message-time{\n        font-size: 13px;\n        color: #555555;\n    }\n    .empty-message-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 100px 0;\n        color: #909399;\n    }\n    .empty-icon {\n        font-size: 60px;\n        margin-bottom: 20px;\n        color: #DCDFE6;\n    }\n    .empty-text {\n        font-size: 18px;\n        margin-bottom: 10px;\n        font-weight: 500;\n    }\n    .empty-tip {\n        font-size: 14px;\n        color: #C0C4CC;\n    }\n</style>"],"mappings":";AAuCA,OAAAA,OAAA;AACA,OAAAC,OAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,OAAA,EAAAA,OAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,OAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,IAAA,CAAAC,eAAA,GAAAC,IAAA,WAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,IAAAA,GAAA,CAAAG,WAAA;QACA,SAAAC,CAAA,MAAAA,CAAA,GAAAJ,GAAA,CAAAP,IAAA,CAAAY,MAAA,EAAAD,CAAA;UACA,IAAAE,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAR,GAAA,CAAAP,IAAA,CAAAW,CAAA,EAAAK,IAAA,CAAAC,WAAA;UACAV,GAAA,CAAAP,IAAA,CAAAW,CAAA,EAAAK,IAAA,CAAAE,MAAA,GAAAL,OAAA,GAAAA,OAAA;UACA,IAAAM,WAAA,GAAAZ,GAAA,CAAAP,IAAA,CAAAW,CAAA,EAAAS,OAAA,CAAAC,KAAA;UACA,IAAAC,UAAA,GAAAH,WAAA;UACA,SAAAR,EAAA,MAAAA,EAAA,GAAAQ,WAAA,CAAAP,MAAA,EAAAD,EAAA;YACAW,UAAA,WAAAH,WAAA,CAAAR,EAAA;UACA;UACAJ,GAAA,CAAAP,IAAA,CAAAW,CAAA,EAAAS,OAAA,GAAAE,UAAA;QACA;QACAnB,KAAA,CAAAF,OAAA,GAAAM,GAAA,CAAAP,IAAA;QACAG,KAAA,CAAAoB,qBAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,SAAA,WAAAA,UAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAAJ,EAAA,EAAAA;QAAA;MAAA;IACA;IACAH,qBAAA,WAAAA,sBAAA;MAAA,IAAAQ,MAAA;MACA,KAAA3B,IAAA,CAAA4B,iBAAA,GAAA1B,IAAA,WAAAC,GAAA;QACA,IAAAA,GAAA,CAAAG,WAAA;UACAqB,MAAA,CAAAE,SAAA,CAAAC,KAAA;QACA;MACA,GAAAC,KAAA,WAAAC,GAAA;QACA5B,OAAA,CAAA6B,KAAA,eAAAD,GAAA;QACA;QACAL,MAAA,CAAAE,SAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}