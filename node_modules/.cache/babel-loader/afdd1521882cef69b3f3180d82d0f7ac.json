{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/thread-loader/dist/cjs.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/IdleGoods.vue","mtime":1741743644072},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/thread-loader/dist/cjs.js","mtime":1741743643599},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport default {\n  name: \"IdleGoods\",\n  data: function data() {\n    return {\n      mode: 1,\n      nowPage: 1,\n      total: 0,\n      onlineGoods: [],\n      OfflineGoods: [],\n      findValue: '',\n      status: \"1\"\n    };\n  },\n  created: function created() {\n    this.getOnlineGoods();\n  },\n  methods: {\n    handleOfflineGoods: function handleOfflineGoods(index) {\n      var _this = this;\n      this.$confirm('是否确定下架此闲置商品?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 用户点击确定后的逻辑，例如调用后端接口下架商品\n        _this.makeOfflineGoods(index);\n      }).catch(function () {\n        // 用户点击取消后的逻辑，这里可以省略或添加相应处理\n        console.log('下架操作已取消');\n      });\n    },\n    searchIdle: function searchIdle() {\n      var _this2 = this;\n      this.$api.queryIdle({\n        findValue: this.findValue,\n        page: this.nowPage,\n        nums: 8,\n        status: parseInt(this.status)\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code == 1 && res.data.list != null) {\n          if (res.data.list[0].idleStatus == 1) {\n            _this2.onlineGoods = res.data.list;\n            _this2.total = res.data.count;\n          } else {\n            _this2.OfflineGoods = res.data.list;\n            _this2.total = res.data.count;\n          }\n        } else {\n          _this2.$message.error(res.msg);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.nowPage = val;\n      if (this.mode == 1) {\n        this.getOnlineGoods();\n      }\n      if (this.mode == 2) {\n        this.getOfflineGoods();\n      }\n    },\n    handleSelect: function handleSelect(tab) {\n      var val = parseInt(tab.name);\n      if (this.mode !== val) {\n        this.mode = val;\n        if (val == 1) {\n          this.nowPage = 1;\n          this.getOnlineGoods();\n        }\n        if (val == 2) {\n          this.nowPage = 1;\n          this.getOfflineGoods();\n        }\n      }\n    },\n    makeOfflineGoods: function makeOfflineGoods(i) {\n      var _this3 = this;\n      this.$api.updateGoods({\n        id: this.onlineGoods[i].id,\n        status: 2\n      }).then(function (res) {\n        if (res.status_code == 1) {\n          _this3.$message.success('下架成功');\n          _this3.getOnlineGoods();\n        } else {\n          _this3.$message.error(res.msg);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deleteGoods: function deleteGoods(i) {\n      var _this4 = this;\n      this.$api.updateGoods({\n        id: this.OfflineGoods[i].id,\n        status: 0\n      }).then(function (res) {\n        if (res.status_code == 1) {\n          _this4.getOfflineGoods();\n        } else {\n          _this4.$message.error(res.msg);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getOnlineGoods: function getOnlineGoods() {\n      var _this5 = this;\n      this.$api.getGoods({\n        status: 1,\n        page: this.nowPage,\n        nums: 8\n      }).then(function (res) {\n        if (res.status_code == 1) {\n          _this5.onlineGoods = res.data.list;\n          _this5.total = res.data.count;\n        } else {\n          _this5.$message.error(res.msg);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getOfflineGoods: function getOfflineGoods() {\n      var _this6 = this;\n      this.$api.getGoods({\n        status: 2,\n        page: this.nowPage,\n        nums: 8\n      }).then(function (res) {\n        if (res.status_code == 1) {\n          _this6.OfflineGoods = res.data.list;\n          _this6.total = res.data.count;\n        } else {\n          _this6.$message.error(res.msg);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",null]}