{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/common/AnnouncementManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/common/AnnouncementManagement.vue","mtime":1742200494767},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es7.string.pad-start\";\nexport default {\n  name: \"AnnouncementManagement\",\n  data: function data() {\n    return {\n      activeTab: 'all',\n      announcementList: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      dialogVisible: false,\n      currentAnnouncement: null\n    };\n  },\n  created: function created() {\n    this.fetchAnnouncementList();\n  },\n  methods: {\n    fetchAnnouncementList: function fetchAnnouncementList() {\n      var _this = this;\n      this.loading = true;\n      var params = {\n        page: this.currentPage,\n        limit: this.pageSize\n      };\n\n      // 根据选中的标签筛选状态\n      if (this.activeTab === 'published') {\n        params.status = 1; // 已发布\n      } else if (this.activeTab === 'draft') {\n        params.status = 0; // 草稿\n      }\n      this.$api.getAnnouncementList(params).then(function (res) {\n        _this.loading = false;\n        if (res.status_code === 1) {\n          _this.announcementList = res.data.list || [];\n          _this.total = res.data.total || 0;\n        } else {\n          _this.$message.error(res.msg || '获取公告列表失败');\n        }\n      }).catch(function (err) {\n        _this.loading = false;\n        console.error(\"获取公告列表失败:\", err);\n        _this.$message.error('获取公告列表失败');\n      });\n    },\n    handleTabClick: function handleTabClick() {\n      this.currentPage = 1;\n      this.fetchAnnouncementList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.fetchAnnouncementList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchAnnouncementList();\n    },\n    createAnnouncement: function createAnnouncement() {\n      this.$router.push('/admin/announcement/create');\n    },\n    viewAnnouncement: function viewAnnouncement(id) {\n      var _this2 = this;\n      this.loading = true;\n      this.$api.getAnnouncementDetail({\n        id: id\n      }).then(function (res) {\n        _this2.loading = false;\n        if (res.status_code === 1) {\n          _this2.currentAnnouncement = res.data;\n          _this2.dialogVisible = true;\n        } else {\n          _this2.$message.error(res.msg || '获取公告详情失败');\n        }\n      }).catch(function (err) {\n        _this2.loading = false;\n        console.error(\"获取公告详情失败:\", err);\n        _this2.$message.error('获取公告详情失败');\n      });\n    },\n    editAnnouncement: function editAnnouncement(id) {\n      this.$router.push(\"/admin/announcement/edit/\".concat(id));\n    },\n    deleteAnnouncement: function deleteAnnouncement(id) {\n      var _this3 = this;\n      this.$confirm('确定要删除该公告吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this3.loading = true;\n        _this3.$api.deleteAnnouncement({\n          id: id\n        }).then(function (res) {\n          _this3.loading = false;\n          if (res.status_code === 1) {\n            _this3.$message.success('删除成功');\n            _this3.fetchAnnouncementList();\n          } else {\n            _this3.$message.error(res.msg || '删除失败');\n          }\n        }).catch(function (err) {\n          _this3.loading = false;\n          console.error(\"删除公告失败:\", err);\n          _this3.$message.error('删除失败');\n        });\n      }).catch(function () {\n        // 取消删除\n      });\n    },\n    getStatusType: function getStatusType(status) {\n      switch (status) {\n        case 0:\n          return 'info';\n        // 草稿\n        case 1:\n          return 'success';\n        // 已发布\n        case 2:\n          return 'warning';\n        // 已过期\n        default:\n          return 'info';\n      }\n    },\n    getStatusText: function getStatusText(status) {\n      switch (status) {\n        case 0:\n          return '草稿';\n        case 1:\n          return '已发布';\n        case 2:\n          return '已过期';\n        default:\n          return '未知';\n      }\n    },\n    formatDate: function formatDate(timestamp) {\n      if (!timestamp) return '-';\n      var date = new Date(timestamp * 1000);\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'), \" \").concat(String(date.getHours()).padStart(2, '0'), \":\").concat(String(date.getMinutes()).padStart(2, '0'));\n    }\n  }\n};",{"version":3,"names":["name","data","activeTab","announcementList","loading","currentPage","pageSize","total","dialogVisible","currentAnnouncement","created","fetchAnnouncementList","methods","_this","params","page","limit","status","$api","getAnnouncementList","then","res","status_code","list","$message","error","msg","catch","err","console","handleTabClick","handleSizeChange","val","handleCurrentChange","createAnnouncement","$router","push","viewAnnouncement","id","_this2","getAnnouncementDetail","editAnnouncement","concat","deleteAnnouncement","_this3","$confirm","confirmButtonText","cancelButtonText","type","success","getStatusType","getStatusText","formatDate","timestamp","date","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes"],"sources":["src/components/common/AnnouncementManagement.vue"],"sourcesContent":["<template>\n  <div class=\"announcement-management\">\n    <div class=\"management-header\">\n      <h3>公告管理</h3>\n      <el-button type=\"primary\" @click=\"createAnnouncement\">创建公告</el-button>\n    </div>\n    \n    <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n      <el-tab-pane label=\"全部公告\" name=\"all\"></el-tab-pane>\n      <el-tab-pane label=\"已发布\" name=\"published\"></el-tab-pane>\n      <el-tab-pane label=\"草稿\" name=\"draft\"></el-tab-pane>\n    </el-tabs>\n    \n    <el-table\n      :data=\"announcementList\"\n      style=\"width: 100%\"\n      v-loading=\"loading\"\n      border>\n      <el-table-column\n        prop=\"id\"\n        label=\"ID\"\n        width=\"80\">\n      </el-table-column>\n      <el-table-column\n        prop=\"title\"\n        label=\"标题\"\n        min-width=\"200\">\n      </el-table-column>\n      <el-table-column\n        label=\"状态\"\n        width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getStatusType(scope.row.status)\">\n            {{ getStatusText(scope.row.status) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"重要\"\n        width=\"80\">\n        <template slot-scope=\"scope\">\n          <el-tag type=\"danger\" v-if=\"scope.row.important === 1\">重要</el-tag>\n          <span v-else>-</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"create_time\"\n        label=\"创建时间\"\n        width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.create_time) }}\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"publish_time\"\n        label=\"发布时间\"\n        width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.publish_time ? formatDate(scope.row.publish_time) : '-' }}\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"操作\"\n        width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            @click=\"viewAnnouncement(scope.row.id)\">查看</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"editAnnouncement(scope.row.id)\">编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"deleteAnnouncement(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <div class=\"pagination-container\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 30, 50]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n      </el-pagination>\n    </div>\n    \n    <!-- 公告详情对话框 -->\n    <el-dialog title=\"公告详情\" :visible.sync=\"dialogVisible\" width=\"60%\">\n      <div v-if=\"currentAnnouncement\">\n        <h2>{{ currentAnnouncement.title }}</h2>\n        <div class=\"announcement-meta\">\n          <span>状态: {{ getStatusText(currentAnnouncement.status) }}</span>\n          <span>创建时间: {{ formatDate(currentAnnouncement.create_time) }}</span>\n          <span v-if=\"currentAnnouncement.publish_time\">发布时间: {{ formatDate(currentAnnouncement.publish_time) }}</span>\n        </div>\n        <div class=\"announcement-content\" v-html=\"currentAnnouncement.content\"></div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">关闭</el-button>\n        <el-button type=\"primary\" @click=\"editAnnouncement(currentAnnouncement.id)\">编辑</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AnnouncementManagement\",\n  data() {\n    return {\n      activeTab: 'all',\n      announcementList: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      dialogVisible: false,\n      currentAnnouncement: null\n    };\n  },\n  created() {\n    this.fetchAnnouncementList();\n  },\n  methods: {\n    fetchAnnouncementList() {\n      this.loading = true;\n      const params = {\n        page: this.currentPage,\n        limit: this.pageSize\n      };\n      \n      // 根据选中的标签筛选状态\n      if (this.activeTab === 'published') {\n        params.status = 1; // 已发布\n      } else if (this.activeTab === 'draft') {\n        params.status = 0; // 草稿\n      }\n      \n      this.$api.getAnnouncementList(params)\n        .then(res => {\n          this.loading = false;\n          if (res.status_code === 1) {\n            this.announcementList = res.data.list || [];\n            this.total = res.data.total || 0;\n          } else {\n            this.$message.error(res.msg || '获取公告列表失败');\n          }\n        })\n        .catch(err => {\n          this.loading = false;\n          console.error(\"获取公告列表失败:\", err);\n          this.$message.error('获取公告列表失败');\n        });\n    },\n    \n    handleTabClick() {\n      this.currentPage = 1;\n      this.fetchAnnouncementList();\n    },\n    \n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.fetchAnnouncementList();\n    },\n    \n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchAnnouncementList();\n    },\n    \n    createAnnouncement() {\n      this.$router.push('/admin/announcement/create');\n    },\n    \n    viewAnnouncement(id) {\n      this.loading = true;\n      this.$api.getAnnouncementDetail({ id })\n        .then(res => {\n          this.loading = false;\n          if (res.status_code === 1) {\n            this.currentAnnouncement = res.data;\n            this.dialogVisible = true;\n          } else {\n            this.$message.error(res.msg || '获取公告详情失败');\n          }\n        })\n        .catch(err => {\n          this.loading = false;\n          console.error(\"获取公告详情失败:\", err);\n          this.$message.error('获取公告详情失败');\n        });\n    },\n    \n    editAnnouncement(id) {\n      this.$router.push(`/admin/announcement/edit/${id}`);\n    },\n    \n    deleteAnnouncement(id) {\n      this.$confirm('确定要删除该公告吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.loading = true;\n        this.$api.deleteAnnouncement({ id })\n          .then(res => {\n            this.loading = false;\n            if (res.status_code === 1) {\n              this.$message.success('删除成功');\n              this.fetchAnnouncementList();\n            } else {\n              this.$message.error(res.msg || '删除失败');\n            }\n          })\n          .catch(err => {\n            this.loading = false;\n            console.error(\"删除公告失败:\", err);\n            this.$message.error('删除失败');\n          });\n      }).catch(() => {\n        // 取消删除\n      });\n    },\n    \n    getStatusType(status) {\n      switch (status) {\n        case 0: return 'info';    // 草稿\n        case 1: return 'success'; // 已发布\n        case 2: return 'warning'; // 已过期\n        default: return 'info';\n      }\n    },\n    \n    getStatusText(status) {\n      switch (status) {\n        case 0: return '草稿';\n        case 1: return '已发布';\n        case 2: return '已过期';\n        default: return '未知';\n      }\n    },\n    \n    formatDate(timestamp) {\n      if (!timestamp) return '-';\n      const date = new Date(timestamp * 1000);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.announcement-management {\n  padding: 20px;\n}\n\n.management-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.management-header h3 {\n  margin: 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.announcement-meta {\n  margin: 10px 0 20px;\n  color: #606266;\n  font-size: 14px;\n}\n\n.announcement-meta span {\n  margin-right: 15px;\n}\n\n.announcement-content {\n  margin-top: 20px;\n  line-height: 1.6;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}