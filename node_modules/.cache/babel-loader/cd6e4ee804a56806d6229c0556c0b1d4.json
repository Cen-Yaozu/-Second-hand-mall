{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/node_modules/element-ui/packages/upload/src/upload.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/element-ui/packages/upload/src/upload.vue","mtime":1741743641104},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport ajax from \"./ajax\";\nimport UploadDragger from \"./upload-dragger.vue\";\nexport default {\n  inject: ['uploader'],\n  components: {\n    UploadDragger: UploadDragger\n  },\n  props: {\n    type: String,\n    action: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      default: 'file'\n    },\n    data: Object,\n    headers: Object,\n    withCredentials: Boolean,\n    multiple: Boolean,\n    accept: String,\n    onStart: Function,\n    onProgress: Function,\n    onSuccess: Function,\n    onError: Function,\n    beforeUpload: Function,\n    drag: Boolean,\n    onPreview: {\n      type: Function,\n      default: function _default() {}\n    },\n    onRemove: {\n      type: Function,\n      default: function _default() {}\n    },\n    fileList: Array,\n    autoUpload: Boolean,\n    listType: String,\n    httpRequest: {\n      type: Function,\n      default: ajax\n    },\n    disabled: Boolean,\n    limit: Number,\n    onExceed: Function\n  },\n  data: function data() {\n    return {\n      mouseover: false,\n      reqs: {}\n    };\n  },\n  methods: {\n    isImage: function isImage(str) {\n      return str.indexOf('image') !== -1;\n    },\n    handleChange: function handleChange(ev) {\n      var files = ev.target.files;\n      if (!files) return;\n      this.uploadFiles(files);\n    },\n    uploadFiles: function uploadFiles(files) {\n      var _this = this;\n      if (this.limit && this.fileList.length + files.length > this.limit) {\n        this.onExceed && this.onExceed(files, this.fileList);\n        return;\n      }\n      var postFiles = Array.prototype.slice.call(files);\n      if (!this.multiple) {\n        postFiles = postFiles.slice(0, 1);\n      }\n      if (postFiles.length === 0) {\n        return;\n      }\n      postFiles.forEach(function (rawFile) {\n        _this.onStart(rawFile);\n        if (_this.autoUpload) _this.upload(rawFile);\n      });\n    },\n    upload: function upload(rawFile) {\n      var _this2 = this;\n      this.$refs.input.value = null;\n      if (!this.beforeUpload) {\n        return this.post(rawFile);\n      }\n      var before = this.beforeUpload(rawFile);\n      if (before && before.then) {\n        before.then(function (processedFile) {\n          var fileType = Object.prototype.toString.call(processedFile);\n          if (fileType === '[object File]' || fileType === '[object Blob]') {\n            if (fileType === '[object Blob]') {\n              processedFile = new File([processedFile], rawFile.name, {\n                type: rawFile.type\n              });\n            }\n            for (var p in rawFile) {\n              if (rawFile.hasOwnProperty(p)) {\n                processedFile[p] = rawFile[p];\n              }\n            }\n            _this2.post(processedFile);\n          } else {\n            _this2.post(rawFile);\n          }\n        }, function () {\n          _this2.onRemove(null, rawFile);\n        });\n      } else if (before !== false) {\n        this.post(rawFile);\n      } else {\n        this.onRemove(null, rawFile);\n      }\n    },\n    abort: function abort(file) {\n      var reqs = this.reqs;\n      if (file) {\n        var uid = file;\n        if (file.uid) uid = file.uid;\n        if (reqs[uid]) {\n          reqs[uid].abort();\n        }\n      } else {\n        Object.keys(reqs).forEach(function (uid) {\n          if (reqs[uid]) reqs[uid].abort();\n          delete reqs[uid];\n        });\n      }\n    },\n    post: function post(rawFile) {\n      var _this3 = this;\n      var uid = rawFile.uid;\n      var options = {\n        headers: this.headers,\n        withCredentials: this.withCredentials,\n        file: rawFile,\n        data: this.data,\n        filename: this.name,\n        action: this.action,\n        onProgress: function onProgress(e) {\n          _this3.onProgress(e, rawFile);\n        },\n        onSuccess: function onSuccess(res) {\n          _this3.onSuccess(res, rawFile);\n          delete _this3.reqs[uid];\n        },\n        onError: function onError(err) {\n          _this3.onError(err, rawFile);\n          delete _this3.reqs[uid];\n        }\n      };\n      var req = this.httpRequest(options);\n      this.reqs[uid] = req;\n      if (req && req.then) {\n        req.then(options.onSuccess, options.onError);\n      }\n    },\n    handleClick: function handleClick() {\n      if (!this.disabled) {\n        this.$refs.input.value = null;\n        this.$refs.input.click();\n      }\n    },\n    handleKeydown: function handleKeydown(e) {\n      if (e.target !== e.currentTarget) return;\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.handleClick();\n      }\n    }\n  },\n  render: function render(h) {\n    var handleClick = this.handleClick,\n      drag = this.drag,\n      name = this.name,\n      handleChange = this.handleChange,\n      multiple = this.multiple,\n      accept = this.accept,\n      listType = this.listType,\n      uploadFiles = this.uploadFiles,\n      disabled = this.disabled,\n      handleKeydown = this.handleKeydown;\n    var data = {\n      class: {\n        'el-upload': true\n      },\n      on: {\n        click: handleClick,\n        keydown: handleKeydown\n      }\n    };\n    data.class[\"el-upload--\".concat(listType)] = true;\n    return h(\"div\", _mergeJSXProps([{}, data, {\n      \"attrs\": {\n        \"tabindex\": \"0\"\n      }\n    }]), [drag ? h(\"upload-dragger\", {\n      \"attrs\": {\n        \"disabled\": disabled\n      },\n      \"on\": {\n        \"file\": uploadFiles\n      }\n    }, [this.$slots.default]) : this.$slots.default, h(\"input\", {\n      \"class\": \"el-upload__input\",\n      \"attrs\": {\n        \"type\": \"file\",\n        \"name\": name,\n        \"multiple\": multiple,\n        \"accept\": accept\n      },\n      \"ref\": \"input\",\n      \"on\": {\n        \"change\": handleChange\n      }\n    })]);\n  }\n};",{"version":3,"names":["ajax","UploadDragger","inject","components","props","type","String","action","required","name","default","data","Object","headers","withCredentials","Boolean","multiple","accept","onStart","Function","onProgress","onSuccess","onError","beforeUpload","drag","onPreview","onRemove","fileList","Array","autoUpload","listType","httpRequest","disabled","limit","Number","onExceed","mouseover","reqs","methods","isImage","str","indexOf","handleChange","ev","files","target","uploadFiles","_this","length","postFiles","prototype","slice","call","forEach","rawFile","upload","_this2","$refs","input","value","post","before","then","processedFile","fileType","toString","File","p","hasOwnProperty","abort","file","uid","keys","_this3","options","filename","e","res","err","req","handleClick","click","handleKeydown","currentTarget","keyCode","render","h","class","on","keydown","concat","_mergeJSXProps","$slots"],"sources":["node_modules/element-ui/packages/upload/src/upload.vue"],"sourcesContent":["<script>\nimport ajax from './ajax';\nimport UploadDragger from './upload-dragger.vue';\n\nexport default {\n  inject: ['uploader'],\n  components: {\n    UploadDragger\n  },\n  props: {\n    type: String,\n    action: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      default: 'file'\n    },\n    data: Object,\n    headers: Object,\n    withCredentials: Boolean,\n    multiple: Boolean,\n    accept: String,\n    onStart: Function,\n    onProgress: Function,\n    onSuccess: Function,\n    onError: Function,\n    beforeUpload: Function,\n    drag: Boolean,\n    onPreview: {\n      type: Function,\n      default: function() {}\n    },\n    onRemove: {\n      type: Function,\n      default: function() {}\n    },\n    fileList: Array,\n    autoUpload: Boolean,\n    listType: String,\n    httpRequest: {\n      type: Function,\n      default: ajax\n    },\n    disabled: Boolean,\n    limit: Number,\n    onExceed: Function\n  },\n\n  data() {\n    return {\n      mouseover: false,\n      reqs: {}\n    };\n  },\n\n  methods: {\n    isImage(str) {\n      return str.indexOf('image') !== -1;\n    },\n    handleChange(ev) {\n      const files = ev.target.files;\n\n      if (!files) return;\n      this.uploadFiles(files);\n    },\n    uploadFiles(files) {\n      if (this.limit && this.fileList.length + files.length > this.limit) {\n        this.onExceed && this.onExceed(files, this.fileList);\n        return;\n      }\n\n      let postFiles = Array.prototype.slice.call(files);\n      if (!this.multiple) { postFiles = postFiles.slice(0, 1); }\n\n      if (postFiles.length === 0) { return; }\n\n      postFiles.forEach(rawFile => {\n        this.onStart(rawFile);\n        if (this.autoUpload) this.upload(rawFile);\n      });\n    },\n    upload(rawFile) {\n      this.$refs.input.value = null;\n\n      if (!this.beforeUpload) {\n        return this.post(rawFile);\n      }\n\n      const before = this.beforeUpload(rawFile);\n      if (before && before.then) {\n        before.then(processedFile => {\n          const fileType = Object.prototype.toString.call(processedFile);\n\n          if (fileType === '[object File]' || fileType === '[object Blob]') {\n            if (fileType === '[object Blob]') {\n              processedFile = new File([processedFile], rawFile.name, {\n                type: rawFile.type\n              });\n            }\n            for (const p in rawFile) {\n              if (rawFile.hasOwnProperty(p)) {\n                processedFile[p] = rawFile[p];\n              }\n            }\n            this.post(processedFile);\n          } else {\n            this.post(rawFile);\n          }\n        }, () => {\n          this.onRemove(null, rawFile);\n        });\n      } else if (before !== false) {\n        this.post(rawFile);\n      } else {\n        this.onRemove(null, rawFile);\n      }\n    },\n    abort(file) {\n      const { reqs } = this;\n      if (file) {\n        let uid = file;\n        if (file.uid) uid = file.uid;\n        if (reqs[uid]) {\n          reqs[uid].abort();\n        }\n      } else {\n        Object.keys(reqs).forEach((uid) => {\n          if (reqs[uid]) reqs[uid].abort();\n          delete reqs[uid];\n        });\n      }\n    },\n    post(rawFile) {\n      const { uid } = rawFile;\n      const options = {\n        headers: this.headers,\n        withCredentials: this.withCredentials,\n        file: rawFile,\n        data: this.data,\n        filename: this.name,\n        action: this.action,\n        onProgress: e => {\n          this.onProgress(e, rawFile);\n        },\n        onSuccess: res => {\n          this.onSuccess(res, rawFile);\n          delete this.reqs[uid];\n        },\n        onError: err => {\n          this.onError(err, rawFile);\n          delete this.reqs[uid];\n        }\n      };\n      const req = this.httpRequest(options);\n      this.reqs[uid] = req;\n      if (req && req.then) {\n        req.then(options.onSuccess, options.onError);\n      }\n    },\n    handleClick() {\n      if (!this.disabled) {\n        this.$refs.input.value = null;\n        this.$refs.input.click();\n      }\n    },\n    handleKeydown(e) {\n      if (e.target !== e.currentTarget) return;\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.handleClick();\n      }\n    }\n  },\n\n  render(h) {\n    let {\n      handleClick,\n      drag,\n      name,\n      handleChange,\n      multiple,\n      accept,\n      listType,\n      uploadFiles,\n      disabled,\n      handleKeydown\n    } = this;\n    const data = {\n      class: {\n        'el-upload': true\n      },\n      on: {\n        click: handleClick,\n        keydown: handleKeydown\n      }\n    };\n    data.class[`el-upload--${listType}`] = true;\n    return (\n      <div {...data} tabindex=\"0\" >\n        {\n          drag\n            ? <upload-dragger disabled={disabled} on-file={uploadFiles}>{this.$slots.default}</upload-dragger>\n            : this.$slots.default\n        }\n        <input class=\"el-upload__input\" type=\"file\" ref=\"input\" name={name} on-change={handleChange} multiple={multiple} accept={accept}></input>\n      </div>\n    );\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]}]}