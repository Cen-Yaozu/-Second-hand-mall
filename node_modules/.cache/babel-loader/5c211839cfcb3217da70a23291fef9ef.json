{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/announcements.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/announcements.vue","mtime":1742202587021},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es7.string.pad-start\";\nimport AppHead from \"../common/AppHeader.vue\";\nimport AppBody from \"../common/AppPageBody.vue\";\nimport AppFoot from \"../common/AppFoot.vue\";\nexport default {\n  name: \"Announcements\",\n  components: {\n    AppHead: AppHead,\n    AppBody: AppBody,\n    AppFoot: AppFoot\n  },\n  data: function data() {\n    return {\n      loading: false,\n      announcementList: [],\n      currentPage: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  created: function created() {\n    this.fetchAnnouncementList();\n  },\n  methods: {\n    fetchAnnouncementList: function fetchAnnouncementList() {\n      var _this = this;\n      this.loading = true;\n      this.$api.getAnnouncementList({\n        page: this.currentPage,\n        limit: this.pageSize,\n        status: 1 // 只获取已发布的公告\n      }).then(function (res) {\n        _this.loading = false;\n        if (res.status_code === 1) {\n          _this.announcementList = res.data.list || [];\n          _this.total = res.data.total || 0;\n        } else {\n          _this.$message.error(res.msg || '获取公告列表失败');\n        }\n      }).catch(function (err) {\n        _this.loading = false;\n        console.error(\"获取公告列表失败:\", err);\n        _this.$message.error('获取公告列表失败');\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchAnnouncementList();\n    },\n    viewDetail: function viewDetail(id) {\n      this.$router.push(\"/announcement/\".concat(id));\n    },\n    formatDate: function formatDate(timestamp) {\n      if (!timestamp) return '';\n      var date = new Date(timestamp * 1000);\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n    },\n    getPlainText: function getPlainText(html) {\n      if (!html) return '';\n      // 创建临时元素解析HTML\n      var temp = document.createElement('div');\n      temp.innerHTML = html;\n      // 获取纯文本并截取前100个字符\n      var text = temp.textContent || temp.innerText || '';\n      return text.length > 100 ? text.substring(0, 100) + '...' : text;\n    }\n  }\n};",{"version":3,"names":["AppHead","AppBody","AppFoot","name","components","data","loading","announcementList","currentPage","pageSize","total","created","fetchAnnouncementList","methods","_this","$api","getAnnouncementList","page","limit","status","then","res","status_code","list","$message","error","msg","catch","err","console","handleCurrentChange","val","viewDetail","id","$router","push","concat","formatDate","timestamp","date","Date","getFullYear","String","getMonth","padStart","getDate","getPlainText","html","temp","document","createElement","innerHTML","text","textContent","innerText","length","substring"],"sources":["src/components/page/announcements.vue"],"sourcesContent":["<template>\n  <div class=\"announcements\">\n    <app-head></app-head>\n    <app-body>\n      <div class=\"list-container\">\n        <div class=\"header\">\n          <h2>公告列表</h2>\n        </div>\n        \n        <div class=\"announcement-list\" v-loading=\"loading\">\n          <el-card class=\"announcement-item\" v-for=\"item in announcementList\" :key=\"item.id\" @click.native=\"viewDetail(item.id)\">\n            <div class=\"item-header\">\n              <h3 class=\"item-title\">{{ item.title }}</h3>\n              <el-tag type=\"danger\" size=\"small\" v-if=\"item.important === 1\">重要</el-tag>\n            </div>\n            <div class=\"item-content\">{{ getPlainText(item.content) }}</div>\n            <div class=\"item-footer\">\n              <span class=\"time\">{{ formatDate(item.publish_time) }}</span>\n              <el-button type=\"text\" class=\"read-more\">阅读更多</el-button>\n            </div>\n          </el-card>\n          \n          <div class=\"pagination-container\" v-if=\"total > 0\">\n            <el-pagination\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"currentPage\"\n              :page-size=\"pageSize\"\n              layout=\"prev, pager, next, jumper\"\n              :total=\"total\">\n            </el-pagination>\n          </div>\n          \n          <el-empty description=\"暂无公告\" v-if=\"announcementList.length === 0 && !loading\"></el-empty>\n        </div>\n      </div>\n    </app-body>\n    <app-foot></app-foot>\n  </div>\n</template>\n\n<script>\nimport AppHead from '../common/AppHeader.vue'\nimport AppBody from '../common/AppPageBody.vue'\nimport AppFoot from '../common/AppFoot.vue'\n\nexport default {\n  name: \"Announcements\",\n  components: {\n    AppHead,\n    AppBody,\n    AppFoot\n  },\n  data() {\n    return {\n      loading: false,\n      announcementList: [],\n      currentPage: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  created() {\n    this.fetchAnnouncementList();\n  },\n  methods: {\n    fetchAnnouncementList() {\n      this.loading = true;\n      this.$api.getAnnouncementList({\n        page: this.currentPage,\n        limit: this.pageSize,\n        status: 1 // 只获取已发布的公告\n      })\n      .then(res => {\n        this.loading = false;\n        if (res.status_code === 1) {\n          this.announcementList = res.data.list || [];\n          this.total = res.data.total || 0;\n        } else {\n          this.$message.error(res.msg || '获取公告列表失败');\n        }\n      })\n      .catch(err => {\n        this.loading = false;\n        console.error(\"获取公告列表失败:\", err);\n        this.$message.error('获取公告列表失败');\n      });\n    },\n    \n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchAnnouncementList();\n    },\n    \n    viewDetail(id) {\n      this.$router.push(`/announcement/${id}`);\n    },\n    \n    formatDate(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp * 1000);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    \n    getPlainText(html) {\n      if (!html) return '';\n      // 创建临时元素解析HTML\n      const temp = document.createElement('div');\n      temp.innerHTML = html;\n      // 获取纯文本并截取前100个字符\n      const text = temp.textContent || temp.innerText || '';\n      return text.length > 100 ? text.substring(0, 100) + '...' : text;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.announcements {\n  background-color: #f6f6f6;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.list-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.header {\n  margin-bottom: 20px;\n}\n\n.header h2 {\n  color: #303133;\n  font-weight: 600;\n}\n\n.announcement-list {\n  min-height: 400px;\n}\n\n.announcement-item {\n  margin-bottom: 15px;\n  cursor: pointer;\n  transition: transform 0.3s;\n}\n\n.announcement-item:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.item-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.item-title {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  flex: 1;\n}\n\n.item-content {\n  color: #606266;\n  font-size: 14px;\n  margin-bottom: 10px;\n  line-height: 1.6;\n}\n\n.item-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #909399;\n  font-size: 13px;\n}\n\n.read-more {\n  padding: 0;\n  font-size: 13px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: center;\n}\n</style> "],"mappings":";AAyCA,OAAAA,OAAA;AACA,OAAAC,OAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,OAAA,EAAAA,OAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,OAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,gBAAA;MACAC,WAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACAD,qBAAA,WAAAA,sBAAA;MAAA,IAAAE,KAAA;MACA,KAAAR,OAAA;MACA,KAAAS,IAAA,CAAAC,mBAAA;QACAC,IAAA,OAAAT,WAAA;QACAU,KAAA,OAAAT,QAAA;QACAU,MAAA;MACA,GACAC,IAAA,WAAAC,GAAA;QACAP,KAAA,CAAAR,OAAA;QACA,IAAAe,GAAA,CAAAC,WAAA;UACAR,KAAA,CAAAP,gBAAA,GAAAc,GAAA,CAAAhB,IAAA,CAAAkB,IAAA;UACAT,KAAA,CAAAJ,KAAA,GAAAW,GAAA,CAAAhB,IAAA,CAAAK,KAAA;QACA;UACAI,KAAA,CAAAU,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA,GACAC,KAAA,WAAAC,GAAA;QACAd,KAAA,CAAAR,OAAA;QACAuB,OAAA,CAAAJ,KAAA,cAAAG,GAAA;QACAd,KAAA,CAAAU,QAAA,CAAAC,KAAA;MACA;IACA;IAEAK,mBAAA,WAAAA,oBAAAC,GAAA;MACA,KAAAvB,WAAA,GAAAuB,GAAA;MACA,KAAAnB,qBAAA;IACA;IAEAoB,UAAA,WAAAA,WAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,kBAAAC,MAAA,CAAAH,EAAA;IACA;IAEAI,UAAA,WAAAA,WAAAC,SAAA;MACA,KAAAA,SAAA;MACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,SAAA;MACA,UAAAF,MAAA,CAAAG,IAAA,CAAAE,WAAA,SAAAL,MAAA,CAAAM,MAAA,CAAAH,IAAA,CAAAI,QAAA,QAAAC,QAAA,eAAAR,MAAA,CAAAM,MAAA,CAAAH,IAAA,CAAAM,OAAA,IAAAD,QAAA;IACA;IAEAE,YAAA,WAAAA,aAAAC,IAAA;MACA,KAAAA,IAAA;MACA;MACA,IAAAC,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,IAAA,CAAAG,SAAA,GAAAJ,IAAA;MACA;MACA,IAAAK,IAAA,GAAAJ,IAAA,CAAAK,WAAA,IAAAL,IAAA,CAAAM,SAAA;MACA,OAAAF,IAAA,CAAAG,MAAA,SAAAH,IAAA,CAAAI,SAAA,mBAAAJ,IAAA;IACA;EACA;AACA","ignoreList":[]}]}