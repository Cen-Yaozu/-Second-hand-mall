{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/thread-loader/dist/cjs.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/components/page/idle-details.vue","mtime":1741743644073},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/thread-loader/dist/cjs.js","mtime":1741743643599},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/vue-loader/lib/index.js","mtime":1741743643788}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/macos/Desktop/-Second-hand-mall/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.regexp.split\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport AppHead from \"../common/AppHeader.vue\";\nimport AppBody from \"../common/AppPageBody.vue\";\nimport AppFoot from \"../common/AppFoot.vue\";\nexport default {\n  name: \"idle-details\",\n  components: {\n    AppHead: AppHead,\n    AppBody: AppBody,\n    AppFoot: AppFoot\n  },\n  data: function data() {\n    return {\n      buttonText: '编辑',\n      isEditing: false,\n      messageContent: '',\n      toUser: null,\n      toMessage: null,\n      isReply: false,\n      replyData: {\n        toUserNickname: '',\n        toMessage: ''\n      },\n      messageList: [],\n      idleItemInfo: {\n        id: '',\n        idleName: '',\n        idleDetails: '',\n        pictureList: [],\n        idlePrice: 0,\n        idlePlace: '',\n        idleLabel: '',\n        idleStatus: -1,\n        userId: '',\n        user: {\n          avatar: '',\n          nickname: '',\n          signInTime: ''\n        }\n      },\n      editingIdleItem: null,\n      isMaster: false,\n      isFavorite: true,\n      favoriteId: 0\n    };\n  },\n  computed: {\n    fileList: function fileList() {\n      return this.idleItemInfo.pictureList.map(function (img) {\n        return {\n          url: img\n        };\n      });\n    }\n  },\n  created: function created() {\n    this.getMyIdleById();\n  },\n  methods: {\n    getMyIdleById: function getMyIdleById() {\n      var _this = this;\n      var id = this.$route.query.id;\n      this.$api.getIdleItem({\n        id: id\n      }).then(function (res) {\n        console.log(res);\n        if (res.data) {\n          var list = res.data.idleDetails.split(/\\r?\\n/);\n          var str = '';\n          for (var i = 0; i < list.length; i++) {\n            str += list[i];\n          }\n          res.data.idleDetails = str;\n          res.data.pictureList = JSON.parse(res.data.pictureList);\n          _this.idleItemInfo = res.data;\n          console.log(_this.idleItemInfo);\n          var userId = _this.getCookie('shUserId');\n          console.log('userid', userId);\n          if (userId == _this.idleItemInfo.userId) {\n            console.log('isMaster');\n            _this.isMaster = true;\n          }\n          _this.checkFavorite();\n          _this.checkMyIdle();\n          _this.getAllIdleMessage();\n        }\n        $('html,body').animate({\n          scrollTop: 0\n        }, {\n          duration: 500,\n          easing: \"swing\"\n        });\n      });\n    },\n    saveChanges: function saveChanges(idleItemInfo) {\n      var _this2 = this;\n      var updatedInfo = _objectSpread(_objectSpread({}, idleItemInfo), {}, {\n        pictureList: JSON.stringify(this.idleItemInfo.pictureList)\n      });\n      // 这里添加调用API更新商品信息的逻辑\n      this.$api.updateIdleItem(updatedInfo).then(function () {\n        // this.getMyIdleById();\n        _this2.$message.success('商品信息更新成功');\n        _this2.isEditing = false; // 保存后关闭编辑模式\n        _this2.buttonText = '编辑商品';\n      }).catch(function () {\n        _this2.$message.error('更新失败，请重试');\n      });\n    },\n    imgChange: function imgChange(file, fileList) {\n      this.noneBtnImg = fileList.length >= this.limitCountImg;\n    },\n    fileHandleRemove: function fileHandleRemove(file, fileList) {\n      console.log(file, fileList);\n      // 假设fileList是由el-upload维护的，这里需要间接操作，找到file在fileList中的URL\n      var urlToRemove = file.url; // 假设file.response.data是图片URL\n      // 假设fileList与idleItemInfo.pictureList同步，直接根据URL移除\n      var index = this.idleItemInfo.pictureList.indexOf(urlToRemove);\n      console.log(this);\n      if (index > -1) {\n        // 找到了匹配的URL，从idleItemInfo.pictureList中移除\n        this.idleItemInfo.pictureList.splice(index, 1);\n        this.$forceUpdate();\n      } else {\n        console.warn('URL not found in the list to remove.');\n      }\n    },\n    fileHandlePreview: function fileHandlePreview(file) {\n      console.log(file);\n      this.dialogImageUrl = file.response.data;\n      this.imgDialogVisible = true;\n    },\n    fileHandleSuccess: function fileHandleSuccess(response, file, fileList) {\n      console.log(\"file:\", response, file, fileList);\n      this.idleItemInfo.pictureList.push(response.data);\n    },\n    editButton: function editButton() {\n      this.isEditing = !this.isEditing;\n      this.buttonText = '保存修改';\n    },\n    getAllIdleMessage: function getAllIdleMessage() {\n      var _this3 = this;\n      this.$api.getAllIdleMessage({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        console.log('getAllIdleMessage', res.data);\n        if (res.status_code === 1) {\n          _this3.messageList = res.data;\n        }\n      }).catch(function () {});\n    },\n    checkFavorite: function checkFavorite() {\n      var _this4 = this;\n      this.$api.checkFavorite({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (!res.data) {\n          _this4.isFavorite = false;\n        } else {\n          _this4.favoriteId = res.data;\n        }\n      });\n    },\n    checkMyIdle: function checkMyIdle() {\n      var _this5 = this;\n      this.$api.checkMyIdle({\n        idleId: this.idleItemInfo.id\n      }).then(function (res) {\n        if (res.data) {\n          _this5.isMaster = true;\n        } else {\n          _this5.isMaster = false;\n        }\n      });\n    },\n    getCookie: function getCookie(cname) {\n      var name = cname + \"=\";\n      var ca = document.cookie.split(';');\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i].trim();\n        if (c.indexOf(name) === 0) return c.substring(name.length, c.length);\n      }\n      return \"\";\n    },\n    replyMessage: function replyMessage(index) {\n      $('html,body').animate({\n        scrollTop: $(\"#replyMessageLocation\").offset().top - 600\n      }, {\n        duration: 500,\n        easing: \"swing\"\n      });\n      this.isReply = true;\n      this.replyData.toUserNickname = this.messageList[index].fromU.nickname;\n      this.replyData.toMessage = this.messageList[index].content.substring(0, 10) + (this.messageList[index].content.length > 10 ? '...' : '');\n      this.toUser = this.messageList[index].userId;\n      this.toMessage = this.messageList[index].id;\n    },\n    changeStatus: function changeStatus(idle, status) {\n      var _this6 = this;\n      this.$api.updateIdleItem({\n        id: idle.id,\n        idleStatus: status\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this6.idleItemInfo.idleStatus = status;\n        } else {\n          _this6.$message.error(res.msg);\n        }\n      });\n    },\n    buyButton: function buyButton(idleItemInfo) {\n      var _this7 = this;\n      this.$api.addOrder({\n        idleId: idleItemInfo.id,\n        orderPrice: idleItemInfo.idlePrice\n      }).then(function (res) {\n        console.log(res);\n        if (res.status_code === 1) {\n          _this7.$router.push({\n            path: '/order',\n            query: {\n              id: res.data.id\n            }\n          });\n        } else {\n          _this7.$message.error(res.msg);\n        }\n      }).catch(function (e) {});\n    },\n    favoriteButton: function favoriteButton(idleItemInfo) {\n      var _this8 = this;\n      if (this.isFavorite) {\n        this.$api.deleteFavorite({\n          id: this.favoriteId\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this8.$message({\n              message: '已取消收藏！',\n              type: 'success'\n            });\n            _this8.isFavorite = false;\n          } else {\n            _this8.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      } else {\n        this.$api.addFavorite({\n          idleId: idleItemInfo.id\n        }).then(function (res) {\n          console.log(res);\n          if (res.status_code === 1) {\n            _this8.$message({\n              message: '已加入收藏！',\n              type: 'success'\n            });\n            _this8.isFavorite = true;\n            _this8.favoriteId = res.data;\n          } else {\n            _this8.$message.error(res.msg);\n          }\n        }).catch(function (e) {});\n      }\n    },\n    cancelReply: function cancelReply() {\n      this.isReply = false;\n      this.toUser = this.idleItemInfo.userId;\n      this.toMessage = null;\n      this.replyData.toUserNickname = '';\n      this.replyData.toMessage = '';\n    },\n    sendMessage: function sendMessage() {\n      var _this9 = this;\n      var content = this.messageContent.trim();\n      if (this.toUser == null) {\n        this.toUser = this.idleItemInfo.userId;\n      }\n      if (content) {\n        var contentList = content.split(/\\r?\\n/);\n        var contenHtml = contentList[0];\n        for (var i = 1; i < contentList.length; i++) {\n          contenHtml += '<br>' + contentList[i];\n        }\n        this.$api.sendMessage({\n          idleId: this.idleItemInfo.id,\n          content: contenHtml,\n          toUser: this.toUser,\n          toMessage: this.toMessage\n        }).then(function (res) {\n          if (res.status_code === 1) {\n            _this9.$message({\n              message: '留言成功！',\n              type: 'success'\n            });\n            _this9.messageContent = '';\n            _this9.cancelReply();\n            _this9.getAllIdleMessage();\n          } else {\n            _this9.$message.error(\"留言失败！\" + res.msg);\n          }\n        }).catch(function () {\n          _this9.$message.error(\"留言失败！\");\n        });\n      } else {\n        this.$message.error(\"留言为空！\");\n      }\n    }\n  }\n};",null]}