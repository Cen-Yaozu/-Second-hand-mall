{"remainingRequest":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/-Second-hand-mall/src/utils/request.js","dependencies":[{"path":"/Users/macos/Desktop/-Second-hand-mall/src/utils/request.js","mtime":1741843252183},{"path":"/Users/macos/Desktop/-Second-hand-mall/babel.config.js","mtime":1741743639580},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/cache-loader/dist/cjs.js","mtime":1741743640345},{"path":"/Users/macos/Desktop/-Second-hand-mall/node_modules/babel-loader/lib/index.js","mtime":1741743640250}],"contextDependencies":[],"result":["import axios from 'axios';\n\n/* axios功能封装  */\n\nvar service = axios.create({\n  timeout: 5000,\n  // 不需要baseURL，因为我们现在直接代理各个路径\n  baseURL: '',\n  withCredentials: true\n});\n\n// request interceptor(请求拦截器)\nservice.interceptors.request.use(function (config) {\n  // 调试: 记录所有请求信息\n  console.log('发送请求:', config.url);\n  console.log('请求方法:', config.method);\n  console.log('请求头:', config.headers);\n  console.log('请求参数:', config.params || config.data);\n\n  // 确保所有请求都带有正确的Content-Type\n  if (config.method === 'post' && !config.headers['Content-Type']) {\n    // 如果是提交表单数据，需要设置为application/x-www-form-urlencoded\n    // 如果是提交JSON数据，需要设置为application/json\n    config.headers['Content-Type'] = 'application/json';\n  }\n  return config;\n}, function (error) {\n  console.log('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// response interceptor（接收拦截器）\nservice.interceptors.response.use(function (response) {\n  // 调试: 记录响应信息\n  console.log('响应状态:', response.status);\n  console.log('响应头:', response.headers);\n  console.log('响应数据:', response.data);\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    console.error('响应错误:', response);\n    return Promise.reject(response);\n  }\n}, function (error) {\n  // 调试: 记录详细错误信息\n  console.error('响应出错:', error);\n  if (error.response) {\n    console.error('错误状态码:', error.response.status);\n    console.error('错误头信息:', error.response.headers);\n    console.error('错误数据:', error.response.data);\n  } else if (error.request) {\n    console.error('未收到响应:', error.request);\n  } else {\n    console.error('请求配置错误:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"names":["axios","service","create","timeout","baseURL","withCredentials","interceptors","request","use","config","console","log","url","method","headers","params","data","error","Promise","reject","response","status","message"],"sources":["/Users/macos/Desktop/-Second-hand-mall/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\n\n/* axios功能封装  */\n\nconst service = axios.create({\n    timeout: 5000,\n    // 不需要baseURL，因为我们现在直接代理各个路径\n    baseURL: '',\n    withCredentials: true\n});\n\n// request interceptor(请求拦截器)\nservice.interceptors.request.use(\n    config => {\n        // 调试: 记录所有请求信息\n        console.log('发送请求:', config.url);\n        console.log('请求方法:', config.method);\n        console.log('请求头:', config.headers);\n        console.log('请求参数:', config.params || config.data);\n        \n        // 确保所有请求都带有正确的Content-Type\n        if (config.method === 'post' && !config.headers['Content-Type']) {\n            // 如果是提交表单数据，需要设置为application/x-www-form-urlencoded\n            // 如果是提交JSON数据，需要设置为application/json\n            config.headers['Content-Type'] = 'application/json';\n        }\n        \n        return config;\n    },\n    error => {\n        console.log('请求错误:', error);\n        return Promise.reject(error);\n    }\n);\n\n// response interceptor（接收拦截器）\nservice.interceptors.response.use(\n    response => {\n        // 调试: 记录响应信息\n        console.log('响应状态:', response.status);\n        console.log('响应头:', response.headers);\n        console.log('响应数据:', response.data);\n        \n        if (response.status === 200) {\n            return response.data;\n        } else {\n            console.error('响应错误:', response);\n            return Promise.reject(response);\n        }\n    },\n    error => {\n        // 调试: 记录详细错误信息\n        console.error('响应出错:', error);\n        if (error.response) {\n            console.error('错误状态码:', error.response.status);\n            console.error('错误头信息:', error.response.headers);\n            console.error('错误数据:', error.response.data);\n        } else if (error.request) {\n            console.error('未收到响应:', error.request);\n        } else {\n            console.error('请求配置错误:', error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default service;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,IAAI;EACb;EACAC,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAAC,MAAM,EAAI;EACN;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAACG,GAAG,CAAC;EAChCF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAACI,MAAM,CAAC;EACnCH,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,MAAM,CAACK,OAAO,CAAC;EACnCJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAACM,MAAM,IAAIN,MAAM,CAACO,IAAI,CAAC;;EAElD;EACA,IAAIP,MAAM,CAACI,MAAM,KAAK,MAAM,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC,cAAc,CAAC,EAAE;IAC7D;IACA;IACAL,MAAM,CAACK,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACvD;EAEA,OAAOL,MAAM;AACjB,CAAC,EACD,UAAAQ,KAAK,EAAI;EACLP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,KAAK,CAAC;EAC3B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAhB,OAAO,CAACK,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC7B,UAAAY,QAAQ,EAAI;EACR;EACAV,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,QAAQ,CAACC,MAAM,CAAC;EACrCX,OAAO,CAACC,GAAG,CAAC,MAAM,EAAES,QAAQ,CAACN,OAAO,CAAC;EACrCJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,QAAQ,CAACJ,IAAI,CAAC;EAEnC,IAAII,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACzB,OAAOD,QAAQ,CAACJ,IAAI;EACxB,CAAC,MAAM;IACHN,OAAO,CAACO,KAAK,CAAC,OAAO,EAAEG,QAAQ,CAAC;IAChC,OAAOF,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC;EACnC;AACJ,CAAC,EACD,UAAAH,KAAK,EAAI;EACL;EACAP,OAAO,CAACO,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAChBV,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC;IAC9CX,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,QAAQ,CAACN,OAAO,CAAC;IAC/CJ,OAAO,CAACO,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACG,QAAQ,CAACJ,IAAI,CAAC;EAC/C,CAAC,MAAM,IAAIC,KAAK,CAACV,OAAO,EAAE;IACtBG,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACV,OAAO,CAAC;EAC1C,CAAC,MAAM;IACHG,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACK,OAAO,CAAC;EAC3C;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,OAAO","ignoreList":[]}]}